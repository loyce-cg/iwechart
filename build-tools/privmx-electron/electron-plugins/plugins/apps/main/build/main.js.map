{"version":3,"sources":["build/main.ts"],"names":[],"mappings":";;AACA,4EAA2E;AAC3E,iDAAgD;AAEhD;IAAA;IA+BA,CAAC;IA7BG,yBAAQ,GAAR,UAAS,IAAiB,EAAE,GAAsC;QAC9D,IAAI,UAAU,GAAG,GAAG,CAAC,YAAY,CAAC,aAAa,EAAE,IAAI,uBAAU,CAAC,GAAG,CAAC,CAAC,CAAC;QAGtE,UAAU,CAAC,aAAa,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;QAK5C,2CAAoB,CAAC,aAAa,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;QAEtD,GAAG,CAAC,gBAAgB,CAAmC,YAAY,EAAE,UAAA,KAAK;YACtE,IAAI,GAAG,GAAoD,GAAG,CAAC,OAAO,CAAC,SAAS,CAAC;YACjF,IAAI,KAAK,GAAG,GAAG,CAAC,iBAAiB,CAAC;gBAC9B,EAAE,EAAE,MAAM;gBACV,KAAK,EAAE,EAAE;gBACT,IAAI,EAAE,EAAE;gBACR,eAAe,EAAE,2CAAoB;gBACrC,OAAO,EAAE,KAAK;gBACd,WAAW,EAAE,OAAO;aACvB,CAAC,CAAC;YACH,GAAG,CAAC,OAAO,GAAG,KAAK,CAAC,EAAE,CAAC;YACvB,GAAG,CAAC,kBAAkB,GAAG,KAAK,CAAC,EAAE,CAAC;QACtC,CAAC,EAAE,MAAM,EAAE,UAAU,CAAC,CAAC;QAEvB,GAAG,CAAC,gBAAgB,CAAqC,aAAa,EAAE;YACpE,UAAU,CAAC,KAAK,EAAE,CAAC;QACvB,CAAC,EAAE,OAAO,EAAE,UAAU,CAAC,CAAC;IAC5B,CAAC;IACL,aAAC;AAAD,CA/BA,AA+BC,IAAA;AA/BY,wBAAM;AAgCb,MAAM,CAAC,SAAU,CAAC,SAAS,GAAG,qCAAqC,CAAC","file":"main.js","sourcesContent":["import * as Mail from \"pmc-mail\";\nimport { AppsWindowController } from \"../window/apps/AppsWindowController\";\nimport { AppsPlugin } from \"../main/AppsPlugin\";\n\nexport class Plugin {\n    \n    register(mail: typeof Mail, app: Mail.app.common.CommonApplication) {\n        let appsPlugin = app.addComponent(\"apps-plugin\", new AppsPlugin(app));\n        \n        // i18n: main\n        appsPlugin.registerTexts(app.localeService);\n        \n        // i18n: components\n        \n        // i18n: windows\n        AppsWindowController.registerTexts(app.localeService);\n        \n        app.addEventListener<Mail.Types.event.AfterLoginEvent>(\"afterlogin\", event => {\n            let cnt = <Mail.window.container.ContainerWindowController>app.windows.container;\n            let entry = cnt.registerAppWindow({\n                id: \"apps\",\n                label: \"\",\n                icon: \"\",\n                controllerClass: AppsWindowController,\n                visible: false,\n                historyPath: \"/apps\"\n            });\n            cnt.initApp = entry.id;\n            cnt.activateLogoAction = entry.id;\n        }, \"apps\", \"ethernal\");\n        \n        app.addEventListener<Mail.Types.event.AfterLogoutPlugin>(\"afterlogout\", () => {\n            appsPlugin.reset();\n        }, \"tasks\", \"ethernal\");\n    }\n}\n(<any>Plugin.prototype).className = \"com.privmx.plugin.apps.build.Plugin\";"],"sourceRoot":"../../src"}