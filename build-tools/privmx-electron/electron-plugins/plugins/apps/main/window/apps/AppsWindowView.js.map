{"version":3,"sources":["window/apps/AppsWindowView.ts"],"names":[],"mappings":"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","file":"AppsWindowView.js","sourcesContent":["import {component, window as wnd, JQuery as $, Q, Types, webUtils} from \"pmc-web\";\nimport {func as mainTemplate} from \"./template/main.html\";\nimport {func as sectionTemplate} from \"./template/section.html\";\nimport {ViewModel} from \"./AppsWindowController\";\nimport {SectionModel} from \"./AppsWindowController\";\n\nexport class AppsWindowView extends wnd.base.BaseAppWindowView<ViewModel> {\n    \n    static readonly SINGLE_CLICK_DELAY: number = 300;\n    static readonly MIN_TIME_BETWEEN_LOADING_SPINNERS_REMOVAL: number = 300;\n    \n    userGuide: component.userguide.UserGuideView;\n    sectionList: component.extlist.ExtListView<SectionModel>;\n    static MAX_SECTIONS_CONTAINER_HEIGHT: number = 240;\n    resizeDebounceTimer: any;\n    userGuideVisible: boolean = false;\n    loadedModules: {[id: string]: boolean} = {};\n    scheduledModules: {[id: string]: boolean} = {};\n    $loadingUnread: JQuery;\n    basicTooltip: component.tooltip.TooltipView;\n    protected _delayedClickTimeout: number = null;\n    protected _nextSpinnerRemoval: Q.Promise<void> = Q();\n\n    constructor(parent: Types.app.ViewParent) {\n        super(parent, mainTemplate);\n        \n        this.loadedModules[\"chat\"] = false;\n        this.loadedModules[\"notes2\"] = false;\n        this.loadedModules[\"tasks\"] = false;\n        this.loadedModules[\"calendar\"] = false;\n        \n        const visibilityObserver = new (webUtils as any).VisibilityObserver(document.body);\n        let visibilityObserverSingleShotRegistered: boolean = false;\n        \n        this.sectionList = this.addComponent(\"sectionList\", new component.extlist.ExtListView(this, {\n            template: sectionTemplate,\n            onAfterListRender: () => {\n                // let sectionsHeight = this.$main.find(\".sections-inner\").outerHeight();\n                // this.$main.find(\".sections\").css(\"height\", sectionsHeight > AppsWindowView.MAX_SECTIONS_CONTAINER_HEIGHT ? AppsWindowView.MAX_SECTIONS_CONTAINER_HEIGHT + \"px\" : sectionsHeight + \"px\");\n                \n                if (visibilityObserver.isTargetVisible) {\n                    this.updateSplitSectionsNames();\n                }\n                else if (!visibilityObserverSingleShotRegistered) {\n                    visibilityObserver.addSingleShotCallback((visible: boolean) => {\n                        visibilityObserverSingleShotRegistered = false;\n                        if (visible) {\n                            this.updateSplitSectionsNames();\n                        }\n                    });\n                    visibilityObserverSingleShotRegistered = true;\n                    return;\n                }\n            }\n        }));\n        this.basicTooltip = this.addComponent(\"basicTooltip\", new component.tooltip.TooltipView(this));\n    }\n    \n    initWindow(model: ViewModel): Q.Promise<void> {\n        $(window).on(\"resize\", this.onResizeWindow.bind(this));\n        this.$main.on(\"click\", \"[data-trigger]\", this.onTriggerClick.bind(this));\n        this.$main.on(\"click\", \"[data-section-id]\", this.onSectionClick.bind(this));\n        this.makeCustomScroll(this.$main.find(\".sections\"));\n        this.sectionList.$container = this.$main.find(\".sections-inner\");\n        this.$main.find(\".sections\").css(\"height\", AppsWindowView.MAX_SECTIONS_CONTAINER_HEIGHT + \"px\");\n        this.$loadingUnread = this.$main.find(\".loading-unread-counts\");\n        \n        let $launchers = this.$main.find(\".launchers\");\n        $launchers.on(\"click\", \".number.badge\", this.onBadgeClick.bind(this));\n        $launchers.on(\"dblclick\", \".number.badge\", this.onBadgeDoubleClick.bind(this));\n        $launchers.on(\"mouseenter\", \".number.badge\", this.onBadgeMouseEnter.bind(this));\n        $launchers.on(\"mouseleave\", \".number.badge\", this.onBadgeMouseLeave.bind(this));\n        \n        if (model.chatFullyLoaded) {\n            this.setAppWindowBadgeFullyLoaded(\"chat\", true);\n        }\n        else {\n            this.updateSpinners(null, \"chat\", true);\n        }\n        if (model.notes2FullyLoaded) {\n            this.setAppWindowBadgeFullyLoaded(\"notes2\", true);\n        }\n        else {\n            this.updateSpinners(null, \"notes2\", true);\n        }\n        if (model.tasksFullyLoaded) {\n            this.setAppWindowBadgeFullyLoaded(\"tasks\", true);\n        }\n        else {\n            this.updateSpinners(null, \"tasks\", true);\n        }\n        if (model.calendarFullyLoaded) {\n            this.setAppWindowBadgeFullyLoaded(\"calendar\", true);\n        }\n        else {\n            this.updateSpinners(null, \"calendar\", true);\n        }\n\n        return this.sectionList.triggerInit()\n        .then(() => {\n            this.basicTooltip.$container = this.$main;\n            this.basicTooltip.isEnabled = (e: MouseEvent) => {\n                let unreadBadgeClickAction = $(document.body).attr(\"data-unread-badge-click-action\");\n                return unreadBadgeClickAction != \"ignore\";\n            };\n            return this.basicTooltip.triggerInit();\n        });\n    }\n    \n    onTriggerClick(event: MouseEvent): void {\n        this.clearDelayedClickTimeout();\n        let $e = $(event.currentTarget);\n        let action = $e.data(\"trigger\");\n        if (action == \"launch-app-window\") {\n            let unreadBadgeClickAction = this.$body.attr(\"data-unread-badge-click-action\");\n            let unreadBadgeUseDoubleClick = $(document.body).attr(\"data-unread-badge-use-double-click\") == \"true\";\n            if (unreadBadgeClickAction == \"ignore\" || $(event.target).closest(\".number.badge\").length == 0) {\n                this.triggerEvent(\"appWindowOpen\", $e.data(\"app-window\"));\n            }\n            else {\n                if (unreadBadgeUseDoubleClick) {\n                    this._delayedClickTimeout = <any>setTimeout(() => {\n                        this.triggerEvent(\"appWindowOpen\", $e.data(\"app-window\"));\n                    }, AppsWindowView.SINGLE_CLICK_DELAY);\n                }\n            }\n        }\n        else {\n            this.navBar.triggerCustomAction(action, event);\n        }\n    }\n    \n\n    onSectionClick(event: MouseEvent): void {\n        this.clearDelayedClickTimeout();\n        let $e = $(event.target).closest(\"[data-section-id]\");\n        let unreadBadgeClickAction = this.$body.attr(\"data-unread-badge-click-action\");\n        let unreadBadgeUseDoubleClick = $(document.body).attr(\"data-unread-badge-use-double-click\") == \"true\";\n        if (unreadBadgeClickAction != \"ignore\" && $(event.target).closest(\".number.badge\").length > 0) {\n            if (unreadBadgeUseDoubleClick) {\n                this._delayedClickTimeout = <any>setTimeout(() => {\n                    this.triggerEvent(\"sectionClick\", $e.data(\"section-id\"));\n                }, AppsWindowView.SINGLE_CLICK_DELAY);\n            }\n            return;\n        }\n        this.triggerEvent(\"sectionClick\", $e.data(\"section-id\"));\n    }\n    \n    setAppWindowBadge(appWindowId: string, count: number): void {\n        let $badge = this.$main.find(\".app-launcher[data-app-window='\" + appWindowId + \"'] .badge\");\n        this.setBadge($badge, count);\n    }\n    \n    scheduleSetAppWindowBadgeFullyLoaded(appWindowId: string, fullyLoaded: boolean): void {\n        if (!fullyLoaded) {\n            this.setAppWindowBadgeFullyLoaded(appWindowId, fullyLoaded);\n            return;\n        }\n        if (this.scheduledModules[appWindowId]) {\n            return;\n        }\n        this.scheduledModules[appWindowId] = true;\n        this._nextSpinnerRemoval = this._nextSpinnerRemoval.then(() => {\n            this.setAppWindowBadgeFullyLoaded(appWindowId, fullyLoaded);\n            let def = Q.defer<void>();\n            setTimeout(() => {\n               def.resolve();\n            }, AppsWindowView.MIN_TIME_BETWEEN_LOADING_SPINNERS_REMOVAL);\n            return def.promise;\n        });\n    }\n    \n    setAppWindowBadgeFullyLoaded(appWindowId: string, fullyLoaded: boolean): void {\n        // this.$main.toggleClass(appWindowId + \"-unread-counts-fully-loaded\", fullyLoaded);\n        if (this.loadedModules[appWindowId] != fullyLoaded) {\n            this.loadedModules[appWindowId] = fullyLoaded;\n            this.updateSpinners(null, appWindowId, !fullyLoaded, true);\n        }\n\n        let allLoaded = true;\n        for (let id in this.loadedModules) {\n            if (!this.loadedModules[id]) {\n                allLoaded = false;\n                return;\n            }\n        }\n        if (allLoaded) {\n            $.when(this.$loadingUnread.fadeOut(500)).done(() => {\n                this.$loadingUnread.children().remove();\n            });\n            this.setAllSpinnersHidden(true);\n        }\n    }\n    \n    setBadge($badge: JQuery, count: number): void {\n        if (count) {\n            $badge.text(count).addClass(\"visible\");\n        }\n        else {\n            $badge.removeClass(\"visible\");\n        }\n    }\n  \n    updateSplitSectionsNames() {\n        const options: webUtils.ellipsis.EllipsisOptions = {\n            wordBreak: {\n                isEnabled: true,\n                minWordLength: 6,\n                minPrefixLength: 3,\n                minSuffixLength: 3,\n            },\n        };\n        const ellipsisNormal = new webUtils.ellipsis.Ellipsis(options);\n        const ellipsisBold = new webUtils.ellipsis.Ellipsis(options);\n        this.$main.find(\".sections .wi-element-name\").each((_, el) => {\n            const $el = $(el);\n            $el.find(\".section-breadcrumb\").remove();\n            const breadcrumb = $el.data(\"breadcrumb\").trim();\n            const sectionName = $el.data(\"section-name\").trim();\n            const textSpans: webUtils.ellipsis.SimpleTextSpan[] = [];\n            if (breadcrumb.length > 0) {\n                textSpans.push({\n                    text: breadcrumb + \" \",\n                    textToHtml: text => `<span class=\"section-breadcrumb\">${text}</span>`,\n                });\n            }\n            if (sectionName.length > 0) {\n                textSpans.push({\n                    text: sectionName,\n                    textToHtml: text => text,\n                });\n            }\n            const ellipsis = $el.hasClass(\"bold\") ? ellipsisBold : ellipsisNormal;\n            ellipsis.apply($el, textSpans);\n        });\n    }\n    \n    getFilesPos(): {x: number, y: number} {\n        let $notes2Tale = this.$main.find(\".app-launcher[data-app-window=notes2]\");\n        let rect = $notes2Tale[0].getBoundingClientRect() as DOMRect;\n        return {\n            x: rect.x + rect.width / 2,\n            y: rect.y + rect.height / 2\n        }\n    }\n\n    showFilesUserGuide(): void {\n        Q().then(() => {\n            this.userGuide = this.addComponent(\"userguide\", new component.userguide.UserGuideView(this));\n            this.$main.append($('<div class=\"user-guide-container\"></div>'));\n            this.userGuide.$container = this.$main.find(\".user-guide-container\");\n            return this.userGuide.triggerInit();\n        })\n        .then(() => {\n            this.userGuideVisible = true;\n        })\n    }\n\n    closeFilesUserGuide(): void {\n        this.userGuideVisible = false;\n        this.$main.find(\".user-guide-container\").remove();\n    }\n\n    onResizeWindow(): void {\n        if (this.resizeDebounceTimer == null && this.userGuideVisible) {\n            this.resizeDebounceTimer = setTimeout(() => {\n                clearTimeout(this.resizeDebounceTimer);\n                this.resizeDebounceTimer = null;\n                (<any>this.userGuide).updatePos(this.getFilesPos().x, this.getFilesPos().y);\n            }, 50)\n        }\n    }\n    \n    onBadgeClick(e: MouseEvent): void {\n        let unreadBadgeUseDoubleClick = $(document.body).attr(\"data-unread-badge-use-double-click\") == \"true\";\n        if (!unreadBadgeUseDoubleClick) {\n            this.handleBadgeSingleOrDoubleClick(e);\n        }\n    }\n    \n    onBadgeDoubleClick(e: MouseEvent): void {\n        let unreadBadgeUseDoubleClick = $(document.body).attr(\"data-unread-badge-use-double-click\") == \"true\";\n        if (unreadBadgeUseDoubleClick) {\n            this.handleBadgeSingleOrDoubleClick(e);\n        }\n    }\n    \n    handleBadgeSingleOrDoubleClick(e: MouseEvent): void {\n        this.clearDelayedClickTimeout();\n        let moduleName = $(e.target).closest(\"[data-app-window]\").data(\"app-window\");\n        let sectionId = $(e.target).closest(\"[data-section-id]\").data(\"section-id\");\n        if (moduleName && [\"chat\", \"notes2\", \"tasks\"].indexOf(moduleName) >= 0) {\n            this.triggerEvent(\"moduleBadgeClick\", moduleName);\n        }\n        else if (sectionId) {\n            this.triggerEvent(\"sectionBadgeClick\", sectionId);\n        }\n    }\n    \n    onBadgeMouseEnter(e: MouseEvent): void {\n        this.toggleBadgeParentHover(e, true);\n    }\n    \n    onBadgeMouseLeave(e: MouseEvent): void {\n        this.toggleBadgeParentHover(e, false);\n    }\n    \n    toggleBadgeParentHover(e: MouseEvent, isBadgeHover: boolean): void {\n        let $parent = $(e.target).closest(\"[data-app-window], [data-section-id]\");\n        $parent.toggleClass(\"with-badge-hover\", isBadgeHover);\n    }\n    \n    clearDelayedClickTimeout(): void {\n        if (this._delayedClickTimeout) {\n            clearTimeout(this._delayedClickTimeout);\n            this._delayedClickTimeout = null;\n        }\n    }\n    \n    updateSpinners(sectionId: string, moduleName: string, state: boolean, checkCount: boolean = false): void {\n        let badges: { $badge: JQuery, width: string, state: boolean }[] = [];\n        let $badge: JQuery;\n        if (sectionId) {\n            // All modules and the section\n            $badge = this.$main.find(`.wi-element[data-section-id=\"${sectionId}\"]`).find(\".wi-element-badge.number\");\n            badges.push({\n                $badge: $badge,\n                width: state ? ($badge.outerWidth() || 0).toString() : \"initial\",\n                state: state,\n            });\n            this.$main.find(`.app-launcher[data-trigger=\"launch-app-window\"]`).each((_, el) => {\n                $badge = $(el).find(\".number.badge\");\n                if ($badge.length > 0) {\n                    let isModuleFullyLoaded = this.loadedModules[$(el).data(\"app-window\")];\n                    let moduleState = !isModuleFullyLoaded || state;\n                    badges.push({\n                        $badge: $badge,\n                        width: moduleState ? ($badge.outerWidth() || 0).toString() : \"initial\",\n                        state: moduleState,\n                    });\n                }\n            });\n        }\n        if (moduleName) {\n            // All sections and the module\n            $badge = this.$main.find(`.app-launcher[data-trigger=\"launch-app-window\"][data-app-window=\"${moduleName}\"]`).find(\".number.badge\");\n            let isModuleFullyLoaded = this.loadedModules[moduleName];\n            let moduleState = !isModuleFullyLoaded || state;\n            badges.push({\n                $badge: $badge,\n                width: moduleState ? ($badge.outerWidth() || 0).toString() : \"initial\",\n                state: moduleState,\n            });\n            this.$main.find(`.wi-element[data-section-id]`).each((_, el) => {\n                $badge = $(el).find(\".wi-element-badge.number\");\n                if ($badge.length > 0) {\n                    badges.push({\n                        $badge: $badge,\n                        width: state ? ($badge.outerWidth() || 0).toString() : \"initial\",\n                        state: state,\n                    });\n                }\n            });\n        }\n        for (let badge of badges) {\n            badge.$badge.css(\"width\", badge.width).toggleClass(\"with-spinner\", badge.state);\n            if (badge.state && !badge.$badge.hasClass(\"visible\")) {\n                badge.$badge.addClass(\"visible\");\n            }\n            if (!badge.state && checkCount) {\n                let num = badge.$badge[0] ? parseInt(badge.$badge[0].textContent.trim()) || 0 : 0;\n                if (num == 0) {\n                    badge.$badge.removeClass(\"visible\");\n                }\n            }\n        }\n    }\n    \n    setAllSpinnersHidden(allSpinnersHidden: boolean):void {\n        this.triggerEvent(\"setAllSpinnersHidden\", allSpinnersHidden);\n    }\n\n    updateStatistics(chats: number, tasks: number, files: number): void {\n        const $stats = this.$main.find(\".modules-statistics\");\n        const $chatsCountElement = $stats.find(\".chat-count\");\n        const $tasksCountElement = $stats.find(\".tasks-count\");\n        const $filesCountElement = $stats.find(\".notes2-count\");\n\n        $chatsCountElement.text(chats ? webUtils.NumberFormatter.formatSimpleWithSuffix(chats): \"-\");\n        $tasksCountElement.text(tasks ? webUtils.NumberFormatter.formatSimpleWithSuffix(tasks): \"-\");\n        $filesCountElement.text(files ? webUtils.NumberFormatter.formatSimpleWithSuffix(files): \"-\");\n        \n        $stats.fadeIn(500);\n    }\n    \n}\n\n(<any>AppsWindowView.prototype).className = \"com.privmx.plugin.apps.window.apps.AppsWindowView\";"],"sourceRoot":"../../../src"}