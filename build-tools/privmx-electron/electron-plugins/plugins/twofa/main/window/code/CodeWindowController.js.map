{"version":3,"sources":["window/code/CodeWindowController.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA,qCAAqD;AAErD,gDAA6D;AAC7D,sCAAkC;AAElC,sDAAmD;AAqBnD;IAA0C,wCAAgC;IActE,8BAAY,MAA8B,EAAE,OAA0B;QAAtE,YACI,kBAAM,MAAM,EAAE,UAAU,EAAE,SAAS,CAAC,SAmBvC;QAlBG,KAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,KAAI,CAAC,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC;QACzB,KAAI,CAAC,WAAW,GAAG,CAAC,CAAC,OAAO,CAAC,WAAW,CAAC;QAEzC,KAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC,CAAC;QAClC,KAAI,CAAC,iBAAiB,CAAC,QAAQ,GAAG,eAAe,CAAC;QAClD,KAAI,CAAC,iBAAiB,CAAC,KAAK,GAAG,GAAG,CAAC;QACnC,KAAI,CAAC,iBAAiB,CAAC,MAAM,GAAG,GAAG,CAAC;QACpC,KAAI,CAAC,iBAAiB,CAAC,KAAK,GAAG,IAAI,CAAC;QACpC,KAAI,CAAC,iBAAiB,CAAC,MAAM,GAAG,KAAK,CAAC;QACtC,KAAI,CAAC,iBAAiB,CAAC,SAAS,GAAG,KAAK,CAAC;QACzC,KAAI,CAAC,iBAAiB,CAAC,SAAS,GAAG,KAAK,CAAC;QACzC,KAAI,CAAC,iBAAiB,CAAC,KAAK,GAAG,KAAI,CAAC,IAAI,CAAC,gCAAgC,CAAC,CAAC;QAC3E,KAAI,CAAC,iBAAiB,CAAC,iBAAiB,GAAG,cAAG,CAAC,kBAAkB,CAAC,oBAAoB,CAAC;QACjF,KAAI,CAAC,iBAAkB,CAAC,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC;QAClD,KAAI,CAAC,GAAG,GAAG,OAAO,CAAC,GAAG,CAAC;QACvB,KAAI,CAAC,GAAG,GAAG,OAAO,CAAC,GAAG,CAAC;QACvB,KAAI,CAAC,KAAK,GAAG,YAAC,CAAC,KAAK,EAAQ,CAAC;;IACjC,CAAC;IA9BM,kCAAa,GAApB,UAAqB,aAAiC;QAClD,aAAa,CAAC,aAAa,CAAC,YAAI,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;IACxD,CAAC;IA8BM,gCAAW,GAAlB,UAAmB,IAA6B;QAC5C,OAAO,IAAI,CAAC,IAAI,IAAI,qBAAqB,IAAK,IAAI,CAAC,IAAI,IAAI,OAAO,IAAK,IAAI,CAAC,IAAI,IAAI,KAAK,IAAK,IAAI,CAAC,IAAI,IAAI,KAAK,CAAC;IACrH,CAAC;IAED,uCAAQ,GAAR;QACI,OAAO;YACH,IAAI,EAAE,IAAI,CAAC,IAAI;YACf,WAAW,EAAE,IAAI,CAAC,WAAW;YAC7B,GAAG,EAAE,yBAAW,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC;SACpC,CAAC;IACN,CAAC;IAED,yCAAU,GAAV;QACI,OAAO,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC;IAC9B,CAAC;IAED,2CAAY,GAAZ,UAAa,KAAqB;QAAlC,iBAyBC;QAxBG,YAAC,EAAE,CAAC,IAAI,CAAC;YACL,OAAO,KAAI,CAAC,GAAG,CAAC,SAAS,CAAC,yBAAW,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;QACzD,CAAC,CAAC;aACD,IAAI,CAAC;YACF,KAAI,CAAC,cAAc,CAAC,YAAY,CAAC,CAAC;YAClC,KAAI,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC;YACrB,KAAI,CAAC,KAAK,EAAE,CAAC;QACjB,CAAC,CAAC;aACD,IAAI,CAAC,UAAA,CAAC;YACH,KAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;YACjB,IAAI,CAAC,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,IAAI,CAAC,KAAK,IAAI,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,IAAI,mBAAQ,CAAC,kBAAkB,EAAE;gBACjF,KAAI,CAAC,cAAc,CAAC,YAAY,CAAC,CAAC;gBAClC,KAAI,CAAC,cAAc,CAAC,aAAa,EAAE,OAAO,EAAE,KAAI,CAAC,IAAI,CAAC,kCAAkC,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC;aACjH;iBACI,IAAI,CAAC,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,IAAI,CAAC,KAAK,IAAI,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,IAAI,mBAAQ,CAAC,yBAAyB,EAAE;gBAC7F,KAAI,CAAC,cAAc,CAAC,YAAY,CAAC,CAAC;gBAClC,KAAI,CAAC,KAAK,CAAC,MAAM,CAAC,4BAA4B,CAAC,CAAA;gBAC/C,KAAI,CAAC,KAAK,EAAE,CAAC;aAChB;iBACI;gBACD,KAAI,CAAC,cAAc,CAAC,YAAY,CAAC,CAAC;gBAClC,KAAI,CAAC,cAAc,CAAC,aAAa,EAAE,OAAO,EAAE,KAAI,CAAC,IAAI,CAAC,2CAA2C,CAAC,CAAC,CAAC;aACvG;QACL,CAAC,CAAC,CAAC;IACP,CAAC;IAED,2CAAY,GAAZ;QACI,IAAI,IAAI,CAAC,WAAW,EAAE;YAClB,IAAI,CAAC,KAAK,EAAE,CAAC;SAChB;IACL,CAAC;IAED,2CAAY,GAAZ;QAAA,iBAkBC;QAjBG,YAAC,EAAE,CAAC,IAAI,CAAC;YACL,OAAO,KAAI,CAAC,GAAG,CAAC,UAAU,EAAE,CAAC;QACjC,CAAC,CAAC;aACD,IAAI,CAAC;YACF,KAAI,CAAC,cAAc,CAAC,aAAa,EAAE,SAAS,EAAE,KAAI,CAAC,IAAI,CAAC,yCAAyC,CAAC,CAAC,CAAC;YACpG,KAAI,CAAC,cAAc,CAAC,YAAY,CAAC,CAAC;QACtC,CAAC,CAAC;aACD,IAAI,CAAC,UAAA,CAAC;YACH,KAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;YACjB,IAAI,CAAC,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,IAAI,CAAC,KAAK,IAAI,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,IAAI,mBAAQ,CAAC,yBAAyB,EAAE;gBACxF,KAAI,CAAC,cAAc,CAAC,aAAa,EAAE,MAAM,EAAE,KAAI,CAAC,IAAI,CAAC,+CAA+C,CAAC,CAAC,CAAC;aAC1G;iBACI;gBACD,KAAI,CAAC,cAAc,CAAC,aAAa,EAAE,OAAO,EAAE,KAAI,CAAC,IAAI,CAAC,uCAAuC,CAAC,CAAC,CAAC;aACnG;YACD,KAAI,CAAC,cAAc,CAAC,YAAY,CAAC,CAAC;QACtC,CAAC,CAAC,CAAC;IACP,CAAC;IAED,oCAAK,GAAL,UAAM,KAAe;QAArB,iBAOC;QANG,OAAO,YAAC,EAAE,CAAC,IAAI,CAAC;YACZ,OAAO,iBAAM,KAAK,aAAC,KAAK,CAAC,CAAC;QAC9B,CAAC,CAAC;aACD,IAAI,CAAC;YACF,KAAI,CAAC,KAAK,CAAC,MAAM,CAAC,8BAA8B,CAAC,CAAC;QACtD,CAAC,CAAC,CAAC;IACP,CAAC;IA9GM,gCAAW,GAAW,2BAA2B,CAAC;IA+G7D,2BAAC;CAjHD,AAiHC,CAjHyC,iBAAM,CAAC,IAAI,CAAC,oBAAoB,GAiHzE;AAjHY,oDAAoB;AAkH3B,oBAAoB,CAAC,SAAU,CAAC,SAAS,GAAG,0DAA0D,CAAC","file":"CodeWindowController.js","sourcesContent":["import {window, Types, Q, mail, app} from \"pmc-mail\";\nimport {AdditionalLoginStepData} from \"../../main/TwofaService\";\nimport {TwofaApi, ChallengeModel} from \"../../main/TwofaApi\";\nimport {i18n} from \"./i18n/index\";\nimport * as webauthn from \"webauthn-js\";\nimport {DataEncoder} from \"../../main/DataEncoder\";\n\nexport interface Model {\n    data: AdditionalLoginStepData;\n    cancellable: boolean;\n    u2f: U2FData;\n}\n\nexport interface U2FData {\n    register: webauthn.Types.PublicKeyCredentialCreationOptions;\n    login: webauthn.Types.PublicKeyCredentialRequestOptions;\n}\n\nexport interface CodeWindowOptions {\n    data: AdditionalLoginStepData,\n    api: TwofaApi,\n    cancellable: boolean,\n    host: string,\n    u2f: U2FData\n}\n\nexport class CodeWindowController extends window.base.BaseWindowController {\n    \n    static textsPrefix: string = \"plugin.twofa.window.code.\";\n    \n    static registerTexts(localeService: mail.LocaleService): void {\n        localeService.registerTexts(i18n, this.textsPrefix);\n    }\n    \n    data: AdditionalLoginStepData;\n    api: TwofaApi;\n    defer: Q.Deferred<void>;\n    cancellable: boolean;\n    u2f: U2FData;\n    \n    constructor(parent: Types.app.WindowParent, options: CodeWindowOptions) {\n        super(parent, __filename, __dirname);\n        this.ipcMode = true;\n        this.data = options.data;\n        this.cancellable = !!options.cancellable;\n        \n        this.setPluginViewAssets(\"twofa\");\n        this.openWindowOptions.position = \"center-always\";\n        this.openWindowOptions.width = 400;\n        this.openWindowOptions.height = 200;\n        this.openWindowOptions.modal = true;\n        this.openWindowOptions.widget = false;\n        this.openWindowOptions.draggable = false;\n        this.openWindowOptions.resizable = false;\n        this.openWindowOptions.title = this.i18n(\"plugin.twofa.window.code.title\");\n        this.openWindowOptions.electronPartition = app.ElectronPartitions.HTTPS_SECURE_CONTEXT;\n        (<any>this.loadWindowOptions).host = options.host;\n        this.api = options.api;\n        this.u2f = options.u2f;\n        this.defer = Q.defer<void>();\n    }\n    \n    static isSupported(data: AdditionalLoginStepData) {\n        return data.type == \"googleAuthenticator\" ||  data.type == \"email\" ||  data.type == \"sms\" ||  data.type == \"u2f\";\n    }\n    \n    getModel(): Model {\n        return {\n            data: this.data,\n            cancellable: this.cancellable,\n            u2f: DataEncoder.decode(this.u2f)\n        };\n    }\n    \n    getPromise(): Q.Promise<void> {\n        return this.defer.promise;\n    }\n    \n    onViewSubmit(model: ChallengeModel) {\n        Q().then(() => {\n            return this.api.challenge(DataEncoder.encode(model));\n        })\n        .then(() => {\n            this.callViewMethod(\"clearState\");\n            this.defer.resolve();\n            this.close();\n        })\n        .fail(e => {\n            this.logError(e);\n            if (e && e.data && e.data.error && e.data.error.code == TwofaApi.TWOFA_INVALID_CODE) {\n                this.callViewMethod(\"clearState\");\n                this.callViewMethod(\"showMessage\", \"error\", this.i18n(\"plugin.twofa.window.code.invalid\", e.data.error.data));\n            }\n            else if (e && e.data && e.data.error && e.data.error.code == TwofaApi.TWOFA_VERIFICATION_FAILED) {\n                this.callViewMethod(\"clearState\");\n                this.defer.reject(\"additional-login-step-fail\")\n                this.close();\n            }\n            else {\n                this.callViewMethod(\"clearState\");\n                this.callViewMethod(\"showMessage\", \"error\", this.i18n(\"plugin.twofa.window.code.error.unexpected\"));\n            }\n        });\n    }\n    \n    onViewCancel(): void {\n        if (this.cancellable) {\n            this.close();\n        }\n    }\n    \n    onViewResend() {\n        Q().then(() => {\n            return this.api.resendCode();\n        })\n        .then(() => {\n            this.callViewMethod(\"showMessage\", \"success\", this.i18n(\"plugin.twofa.window.code.resend.success\"));\n            this.callViewMethod(\"clearState\");\n        })\n        .fail(e => {\n            this.logError(e);\n            if (e && e.data && e.data.error && e.data.error.code == TwofaApi.TWOFA_CODE_ALREADY_RESEND) {\n                this.callViewMethod(\"showMessage\", \"info\", this.i18n(\"plugin.twofa.window.code.resend.alreadyResent\"));\n            }\n            else {\n                this.callViewMethod(\"showMessage\", \"error\", this.i18n(\"plugin.twofa.window.code.resend.error\"));\n            }\n            this.callViewMethod(\"clearState\");\n        });\n    }\n    \n    close(force?: boolean): Q.IWhenable<void> {\n        return Q().then(() => {\n            return super.close(force);\n        })\n        .then(() => {\n            this.defer.reject(\"additional-login-step-cancel\");\n        });\n    }\n}\n(<any>CodeWindowController.prototype).className = \"com.privmx.plugin.twofa.window.code.CodeWindowController\";"],"sourceRoot":"../../../src"}