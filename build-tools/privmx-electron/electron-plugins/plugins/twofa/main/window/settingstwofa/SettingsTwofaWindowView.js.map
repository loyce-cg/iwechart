{"version":3,"sources":["window/settingstwofa/SettingsTwofaWindowView.ts"],"names":[],"mappings":"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","file":"SettingsTwofaWindowView.js","sourcesContent":["import {webUtils, window} from \"pmc-web\";\nimport {func as mainTemplate} from \"./template/main.html\";\nimport {Model} from \"./SettingsTwofaWindowController\";\nimport {TwofaEnableData} from \"../../main/TwofaApi\";\nimport QRious = require(\"qrious\");\n\nexport class SettingsTwofaWindowView extends window.settings.BaseView<Model> {\n    \n    scope: webUtils.Scope<{\n        methods: string[];\n        enabled: boolean;\n        type: string;\n        googleAuthenticatorKey: string;\n        email: string;\n        mobile: string;\n        saving: boolean;\n        save: () => void;\n        generateKey: () => void;\n    }>;\n    qr: QRious;\n    \n    constructor(parent: window.settings.SettingsWindowView) {\n        super(parent, mainTemplate);\n        this.menuModel = {\n            id: \"plugin-twofa\",\n            priority: 250,\n            groupId: \"account\",\n            icon: \"lock\",\n            labelKey: \"plugin.twofa.window.settingstwofa.menu.item.twofa.label\"\n        };\n        this.parent.registerTab({tab: this});\n    }\n    \n    afterRenderContent(model: Model) {\n        this.scope = new webUtils.Scope(this.$main.find(\".section\"), {\n            methods: model.methods,\n            enabled: model.enabled,\n            type: model.type,\n            googleAuthenticatorKey: model.googleAuthenticatorKey,\n            email: model.email,\n            mobile: model.mobile,\n            saving: false,\n            save: this.onSaveButtonClick.bind(this),\n            toggleEnabled: this.onToggleEnabled.bind(this),\n            generateKey: this.onGenerateGoogleAuthenticatorKeyClick.bind(this)\n        });\n        this.qr  = new QRious({\n          level: \"M\",\n          size: 200,\n          value: model.googleAuthenticatorKeyUri\n        });\n        this.$main.find(\".canvas-placeholder\").append(this.qr.canvas);\n    }\n    \n    onToggleEnabled(): void {\n        let newEnabled = !this.scope.data.enabled;\n        if (!newEnabled) {\n            this.triggerEvent(\"disable\");\n            this.updateDirty();\n        }\n        else {\n            this.setEnabled(newEnabled);\n        }\n        setTimeout(() => {\n            this.updateDirty();\n        }, 0);\n    }\n    \n    setEnabled(newEnabled: boolean): void {\n        this.scope.data.enabled = newEnabled;\n        this.scope.onChange();\n        this.$main.find(\".twofa-enabled\").prop(\"checked\", this.scope.data.enabled);\n        this.updateDirty();\n    }\n    \n    onSaveButtonClick(): void {\n        this.scope.data.saving = true;\n        this.scope.onChange();\n        this.saveData();\n    }\n    \n    onGenerateGoogleAuthenticatorKeyClick(): void {\n        this.triggerEvent(\"generateGoogleAuthenticatorKey\");\n    }\n    \n    getData() {\n        let type = this.scope.data.type;\n        if (type == \"googleAuthenticator\") {\n            return {\n                type: type,\n                googleAuthenticatorKey: this.scope.data.googleAuthenticatorKey\n            };\n        }\n        if (type == \"email\") {\n            return {\n                type: type,\n                email: this.scope.data.email\n            };\n        }\n        if (type == \"sms\") {\n            return {\n                type: type,\n                mobile: this.scope.data.mobile\n            };\n        }\n        if (type == \"u2f\") {\n            return {\n                type: type\n            };\n        }\n        throw new Error(\"Invalid 2FA type '\" + type + \"'\");\n    }\n    \n    saveData() {\n        this.triggerEvent(\"enable\", this.getData());\n    }\n    \n    finishSaving(resetDirty: boolean = false): void {\n        setTimeout(() => {\n            this.scope.data.saving = false;\n            this.scope.onChange();\n            if (resetDirty) {\n                this.resetDirty();\n            }\n            setTimeout(() => {\n                if (resetDirty) {\n                    this.resetDirty();\n                }\n            }, 0);\n        }, 500);\n    }\n    \n    setGoogleAuthenticatorKey(key: string, uri: string): void {\n        this.scope.data.googleAuthenticatorKey = key;\n        this.qr.set({value: uri});\n        this.scope.onChange();\n    }\n    \n    getState(): string {\n        let data = <any>this.getData();\n        data.enabled = this.scope.data.enabled;\n        return JSON.stringify(data);\n    }\n    \n    isDirty(): boolean {\n        let currState = this.getState()\n        return (currState != this.savedState);\n    }\n    \n    resetDirty(): void {\n        this.savedState = this.getState();\n        this.updateDirty();\n    }\n    \n}\n\n(<any>SettingsTwofaWindowView.prototype).className = \"com.privmx.plugin.twofa.window.settingstwofa.SettingsTwofaWindowView\";"],"sourceRoot":"../../../src"}