{"version":3,"sources":["window/settingstwofa/SettingsTwofaWindowController.ts"],"names":[],"mappings":"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","file":"SettingsTwofaWindowController.js","sourcesContent":["import {window, utils, privfs, Q, mail} from \"pmc-mail\";\nimport {TwofaService, AdditionalLoginStepData} from \"../../main/TwofaService\";\nimport {TwofaEnableData, TwofaData} from \"../../main/TwofaApi\";\nimport {CodeWindowController} from \"../code/CodeWindowController\";\nimport {i18n} from \"./i18n/index\";\nimport * as base32 from \"thirty-two\";\nimport Inject = utils.decorators.Inject;\n\nexport interface Model {\n    methods: string[];\n    enabled: boolean;\n    type: string;\n    googleAuthenticatorKey: string;\n    googleAuthenticatorKeyUri: string;\n    email: string;\n    mobile: string;\n}\n\nexport class SettingsTwofaWindowController extends window.settings.BaseController {\n    \n    static textsPrefix: string = \"plugin.twofa.window.settingstwofa.\";\n    \n    static registerTexts(localeService: mail.LocaleService): void {\n        localeService.registerTexts(i18n, this.textsPrefix);\n    }\n    \n    @Inject identity: privfs.identity.Identity;\n    twofaService: TwofaService;\n    is2faEnabled: boolean = null;\n    \n    constructor(parent: window.settings.SettingsWindowController) {\n        super(parent);\n        this.ipcMode = true;\n        this.identity = this.parent.identity;\n        this.twofaService = this.app.getComponent(\"twofa-plugin\");\n        this.parent.registerTab({id: \"plugin-twofa\", tab: this});\n        this.parent.addViewScript({path: \"build/view.js\", plugin: \"twofa\"});\n        this.parent.addViewStyle({path: \"window/settingstwofa/template/main.css\", plugin: \"twofa\"});\n    }\n    \n    prepare(): Q.Promise<void> {\n        return Q().then(() => {\n            return this.twofaService.api.getData();\n        })\n        .then(result => {\n            let data = result.data || <TwofaData>{};\n            let model: Model = {\n                methods: result.methods,\n                enabled: \"enabled\" in data ? data.enabled : false,\n                type: data.type || \"googleAuthenticator\",\n                googleAuthenticatorKey:  data.googleAuthenticatorKey || this.generateGoogleAuthenticatorKey(),\n                googleAuthenticatorKeyUri: \"\",\n                email: data.email || \"\",\n                mobile: data.mobile || \"\"\n            };\n            if (model.methods.indexOf(model.type) == -1) {\n                model.enabled = false;\n                model.type = model.methods[0];\n            }\n            model.googleAuthenticatorKeyUri = this.getGoogleAuthenticatorKeyUri(model.googleAuthenticatorKey);\n            this.is2faEnabled = model.enabled;\n            this.callViewMethod(\"renderContent\", model);\n        });\n    }\n    \n    onViewEnable(data: TwofaEnableData) {\n        if (data.type == \"email\" && (!data.email || !/^[a-z0-9_\\.\\+-]+@[a-z0-9_\\.-]+$/.test(data.email))) {\n            this.callViewMethod(\"finishSaving\");\n            this.parent.alert(this.i18n(\"plugin.twofa.window.settingstwofa.error.email\"));\n            return;\n        }\n        if (data.type == \"sms\" && (!data.mobile || !/^[0-9\\+ ]{3,18}$/.test(data.mobile))) {\n            this.callViewMethod(\"finishSaving\");\n            this.parent.alert(this.i18n(\"plugin.twofa.window.settingstwofa.error.mobile\"));\n            return;\n        }\n        if (data.type == \"googleAuthenticator\" && (!data.googleAuthenticatorKey || !/^[234567a-z ]{32,39}$/.test(data.googleAuthenticatorKey))) {\n            this.callViewMethod(\"finishSaving\");\n            this.parent.alert(this.i18n(\"plugin.twofa.window.settingstwofa.error.googleAuthenticatorKey\"));\n            return;\n        }\n        this.addTaskEx(\"\", true, () => {\n            let saved: boolean = false;\n            return Q().then(() => {\n                return this.twofaService.api.enable(data);\n            })\n            .then(res => {\n                let als: AdditionalLoginStepData = {\n                    reason: \"twofa\",\n                    type: data.type,\n                    mobile: data.mobile,\n                    email: data.email\n                };\n                if (!CodeWindowController.isSupported(als)) {\n                    return Q.reject<void>(\"Unsupported 2FA type \" + data.type);\n                }\n                return this.ioc.create(CodeWindowController, [this.parent, {\n                    data: als,\n                    api: this.twofaService.api,\n                    cancellable: true,\n                    host: this.identity.host,\n                    u2f: {register: res.webauthnRegister, login: null}\n                }]).then(win => {\n                    win.open();\n                    return win.getPromise().then(() => {\n                        this.parent.alert(this.i18n(\"plugin.twofa.window.settingstwofa.successEnable\"));\n                        this.is2faEnabled = true;\n                        this.callViewMethod(\"resetDirty\");\n                        saved = true;\n                    })\n                    .fail(e => {\n                        this.logError(e);\n                        if (e === \"additional-login-step-fail\") {\n                            this.parent.alert(this.i18n(\"plugin.twofa.window.settingstwofa.additionalLoginStepFail\"));\n                        }\n                        else if (e !== \"additional-login-step-cancel\") {\n                            this.parent.alert(this.i18n(\"plugin.twofa.window.settingstwofa.unknown\"));\n                        }\n                    });\n                });\n            })\n            .fin(() => {\n                this.callViewMethod(\"finishSaving\", saved);\n            });\n        });\n    }\n    \n    onViewDisable() {\n        if (!this.is2faEnabled) {\n            this.callViewMethod(\"setEnabled\", false);\n            return;\n        }\n        this.parent.confirmEx({\n            message: this.i18n(\"plugin.twofa.window.settingstwofa.confirm.disable\"),\n            yes: {\n                visible: true,\n            },\n            no: {\n                visible: true,\n            },\n        }).then(result => {\n            if (result.result == \"yes\") {\n                return this.twofaService.api.disable()\n                .then(() => {\n                    this.is2faEnabled = false;\n                    this.callViewMethod(\"setEnabled\", false);\n                });\n            }\n        })\n        .fail(this.errorCallback);\n    }\n    \n    onViewGenerateGoogleAuthenticatorKey() {\n        let key = this.generateGoogleAuthenticatorKey();\n        let uri = this.getGoogleAuthenticatorKeyUri(key);\n        this.callViewMethod(\"setGoogleAuthenticatorKey\", key, uri);\n    }\n    \n    generateGoogleAuthenticatorKey() {\n        let key = privfs.crypto.service.randomBytes(20);\n        let encoded = base32.encode(key);\n        return this.formatGoogleAuthenticatorKey(encoded.toString(\"utf8\").replace(/=/g, \"\"));\n    }\n    \n    formatGoogleAuthenticatorKey(key: string): string {\n        return key.toLowerCase().replace(/\\W+/g, \"\").replace(/=/g, \"\").replace(/(\\w{4})/g, \"$1 \").trim();\n    }\n    \n    getGoogleAuthenticatorKeyUri(key: string): string {\n        let encodedKey = key.toUpperCase().replace(/\\W+/g, \"\");\n        return \"otpauth://totp/\" + this.app.userCredentials.hashmail.host + \":\" + this.app.userCredentials.hashmail.user + \"?secret=\" + encodedKey + \"&issuer=\" + this.app.userCredentials.hashmail.host + \"&algorithm=SHA1&digits=6&period=30\";\n    }\n}\n(<any>SettingsTwofaWindowController.prototype).className = \"com.privmx.plugin.twofa.window.settingstwofa.SettingsTwofaWindowController\";"],"sourceRoot":"../../../src"}