{"version":3,"sources":["build/main.ts"],"names":[],"mappings":";;AACA,qDAA2E;AAC3E,uGAAoG;AACpG,4EAAyE;AACzE,6CAA0C;AAE1C;IAAA;IA2CA,CAAC;IAzCG,yBAAQ,GAAR,UAAS,KAAkB,EAAE,GAAsC;QAC/D,IAAI,YAAY,GAAG,IAAI,2BAAY,CAAC,GAAG,CAAC,CAAC;QAGzC,YAAY,CAAC,aAAa,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;QAK9C,2CAAoB,CAAC,aAAa,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;QACtD,6DAA6B,CAAC,aAAa,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;QAE/D,GAAG,CAAC,YAAY,CAAC,cAAc,EAAE,YAAY,CAAC,CAAC;QAE/C,GAAG,CAAC,gBAAgB,CAAmC,YAAY,EAAE;YACjE,YAAY,CAAC,OAAO,EAAE,CAAC;QAC3B,CAAC,EAAE,OAAO,EAAE,UAAU,CAAC,CAAC;QAExB,GAAG,CAAC,gBAAgB,CAA0F,oBAAoB,EAAE,UAAA,KAAK;YACrI,IAAI,KAAK,CAAC,QAAQ,IAAI,KAAK,CAAC,QAAQ,CAAC,SAAS,IAAI,0DAA0D,EAAE;gBAC1G,IAAI,6DAA6B,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;aACrD;QACL,CAAC,EAAE,OAAO,EAAE,UAAU,CAAC,CAAC;QAExB,GAAG,CAAC,gBAAgB,CAAqE,qBAAqB,EAAE,UAAA,KAAK;YACjH,IAAI,KAAK,CAAC,IAAI,IAAI,KAAK,CAAC,IAAI,CAAC,MAAM,IAAI,OAAO,IAAI,2CAAoB,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE;gBAC5F,IAAI,IAAI,GAAG,KAAK,CAAC,gBAAgB,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC;gBACpD,IAAI,KAAK,GAAS,KAAK,CAAC,IAAK,CAAC,aAAa,CAAC;gBAC5C,KAAK,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,2CAAoB,EAAE,CAAC,GAAG,EAAE;wBACtD,IAAI,EAAE,KAAK,CAAC,IAAI;wBAChB,GAAG,EAAE,IAAI,mBAAQ,CAAC,KAAK,CAAC,gBAAgB,CAAC,OAAO,CAAC;wBACjD,WAAW,EAAE,KAAK;wBAClB,IAAI,EAAE,IAAI;wBACV,GAAG,EAAE,EAAC,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAC;qBACtC,CAAC,CAAC,CAAC,IAAI,CAAC,UAAA,GAAG;oBACR,GAAG,CAAC,mBAAmB,CAAC,cAAc,EAAG,GAAG,CAAC,CAAC;oBAC9C,OAAO,GAAG,CAAC,UAAU,EAAE,CAAC;gBAC5B,CAAC,CAAC,CAAC;aACN;QACL,CAAC,EAAE,OAAO,EAAE,UAAU,CAAC,CAAC;IAC5B,CAAC;IACL,aAAC;AAAD,CA3CA,AA2CC,IAAA;AA3CY,wBAAM;AA4Cb,MAAM,CAAC,SAAU,CAAC,SAAS,GAAG,sCAAsC,CAAC","file":"main.js","sourcesContent":["import * as Mail from \"pmc-mail\";\nimport {TwofaService, AdditionalLoginStepData} from \"../main/TwofaService\";\nimport {SettingsTwofaWindowController} from \"../window/settingstwofa/SettingsTwofaWindowController\";\nimport {CodeWindowController} from \"../window/code/CodeWindowController\";\nimport {TwofaApi} from \"../main/TwofaApi\";\n\nexport class Plugin {\n    \n    register(_mail: typeof Mail, app: Mail.app.common.CommonApplication) {\n        let twofaService = new TwofaService(app);\n        \n        // i18n: main\n        twofaService.registerTexts(app.localeService);\n        \n        // i18n: components\n        \n        // i18n: windows\n        CodeWindowController.registerTexts(app.localeService);\n        SettingsTwofaWindowController.registerTexts(app.localeService);\n        \n        app.addComponent(\"twofa-plugin\", twofaService);\n        \n        app.addEventListener<Mail.Types.event.AfterLoginEvent>(\"afterlogin\", () => {\n            twofaService.onLogin();\n        }, \"twofa\", \"ethernal\");\n        \n        app.addEventListener<Mail.Types.event.InstanceRegisteredEvent<Mail.window.settings.SettingsWindowController>>(\"instanceregistered\", event => {\n            if (event.instance && event.instance.className == \"com.privmx.core.window.settings.SettingsWindowController\") {\n                new SettingsTwofaWindowController(event.instance);\n            }\n        }, \"twofa\", \"ethernal\");\n        \n        app.addEventListener<Mail.Types.event.AdditionalLoginStepEvent<AdditionalLoginStepData>>(\"additionalloginstep\", event => {\n            if (event.data && event.data.reason == \"twofa\" && CodeWindowController.isSupported(event.data)) {\n                let host = event.basicLoginResult.gateway.getHost();\n                let login = (<any>event.data).webauthnLogin;\n                event.result = app.ioc.create(CodeWindowController, [app, {\n                    data: event.data,\n                    api: new TwofaApi(event.basicLoginResult.gateway),\n                    cancellable: false,\n                    host: host,\n                    u2f: {register: null, login: login}\n                }]).then(win => {\n                    app.openSingletonWindow(\"twofa-window\" , win);\n                    return win.getPromise();\n                });\n            }\n        }, \"twofa\", \"ethernal\");\n    }\n}\n(<any>Plugin.prototype).className = \"com.privmx.plugin.twofa.build.Plugin\";"],"sourceRoot":"../../src"}