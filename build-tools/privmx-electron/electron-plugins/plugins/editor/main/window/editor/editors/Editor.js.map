{"version":3,"sources":["window/editor/editors/Editor.ts"],"names":[],"mappings":"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","file":"Editor.js","sourcesContent":["import {JQuery as $, Types} from \"pmc-web\";\nimport {app} from \"pmc-mail\";\nimport {NotesPreferences} from \"../../../main/EditorPlugin\";\n\nexport interface EditorOptions {\n    parent: Types.app.ViewParent;\n    initState: string;\n    editMode: boolean;\n    newFile: boolean;\n    preferences: NotesPreferences;\n    previewMode: boolean;\n    taskStatuses?: { [taskId: string]: string };\n}\n\nexport class Editor<T> {\n    \n    static clazz = \"Editor\";\n    \n    parent: Types.app.ViewParent;\n    editMode: boolean;\n    previewMode: boolean;\n    newFile: boolean;\n    preferences: NotesPreferences;\n    listeners: {[name: string]: Function[]};\n    $body: JQuery;\n    initState: string;\n    $container: JQuery;\n    rendered: boolean;\n    data: T;\n    taskStatuses: { [taskId: string]: string };\n    relatedHostHash: string = null;\n    relatedSectionId: string = null;\n    \n    constructor(options: EditorOptions) {\n        this.parent = options.parent;\n        this.editMode = options.editMode;\n        this.newFile = options.newFile;\n        this.preferences = options.preferences || {};\n        this.previewMode = options.previewMode;\n        this.taskStatuses = options.taskStatuses;\n        this.listeners = {};\n        this.$body = $(\"body\");\n        this.setCurrentState(options.initState);\n        this.initState = this.getState();\n    }\n    \n    initContainer(): void {\n        this.$container = $(\"<div class='editor-inner'></div>\");\n    }\n    \n    createDataFromState(_state: string): T {\n        throw new Error(\"Unimplemented\");\n    }\n    \n    paste(_data: app.common.clipboard.ClipboardData): void {\n    }\n    \n    beforeSave(): void {\n    }\n    \n    getState(): string {\n        throw new Error(\"Unimplemented\");\n    }\n    \n    getElements() {\n        throw new Error(\"Unimplemented\");\n    }\n        \n    render(): void {\n        if (!this.rendered) {\n            this.rendered = true;\n            this.$container.html(\"\");\n            this.$container.append(\"<div>\" + this.data + \"</div>\");\n        }\n    }\n    \n    attach($container: JQuery): void {\n        this.render();\n        $container.append(this.$container);\n    }\n    \n    detach(): void {\n        this.$container.detach();\n    }\n    \n    focus(): void {\n    }\n    \n    isChanged(): boolean {\n        return this.initState != this.getState();\n    }\n    \n    setEditMode(editMode: boolean): void {\n        this.editMode = editMode;\n    }\n    \n    confirmSave(initState: string): void {\n        this.initState = initState;\n        this.triggerEvent(\"change\", false);\n    }\n    \n    setCurrentState(state: string): void {\n        this.data = this.createDataFromState(state);\n        if (this.rendered) {\n            let $oldContainer = this.$container;\n            this.initContainer();\n            this.rendered = false;\n            this.render();\n            $oldContainer.replaceWith(this.$container);\n        }\n        else {\n            this.initContainer();\n            this.rendered = false;\n        }\n        this.triggerEvent(\"change\", false);\n    }\n    \n    backToInitState(): void {\n        this.setCurrentState(this.initState);\n    }\n    \n    addEventListener(eventName: string, callback: Function): void {\n        if (typeof(callback) != \"function\") {\n            throw new Error(\"Callback is not a function\");\n        }\n        if (!this.listeners[eventName]) {\n            this.listeners[eventName] = [];\n        }\n        this.listeners[eventName].push(callback);\n    }\n    \n    triggerEvent(eventName: string, data?: any): void {\n        if (this.listeners[eventName]) {\n            this.listeners[eventName].forEach(callback => {\n                callback(data);\n            });\n        }\n    }\n    \n    getCustomToolbarMenuHtml(): string {\n        return \"\";\n    }\n\n    getCustomToolbarRightSideMenuHtml(): string {\n        return \"\";\n    }\n    \n    updateLayout(): void {\n    }\n    \n    updateTaskBadges(): void {\n    }\n\n}\n\n(<any>Editor.prototype).className = \"com.privmx.plugin.editor.window.editor.editors.Editor\";"],"sourceRoot":"../../../../src"}