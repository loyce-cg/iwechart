{"version":3,"sources":["window/filechooser/FileChooserWindowController.ts"],"names":[],"mappings":"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","file":"FileChooserWindowController.js","sourcesContent":["import {utils, component, privfs, window, Q, Types, mail, app} from \"pmc-mail\";\nimport {Notes2Plugin, Notes2ComponentFactory} from \"../../main/Notes2Plugin\";\nimport Inject = utils.decorators.Inject;\nimport Dependencies = utils.decorators.Dependencies;\nimport { FilesListController, FilesInfo, FilesListType, SelectionMode } from \"../../component/fileslist/FilesListController\";\nimport { FileEntryBase, Notes2Utils } from \"../../main/Notes2Utils\";\nimport {LocalFS} from \"../../main/LocalFS\";\nimport { FsManager, FsManagerEntry, SessionInfo, Notes2WindowController } from \"../notes2/Notes2WindowController\";\nimport Entry = mail.filetree.nt.Entry;\nimport { FilesConst } from \"../../main/Common\";\nimport {Model} from \"../notes2/Notes2WindowController\";\nimport { i18n } from \"./i18n\";\n\nexport interface FileChooserOptions {\n    singleSelection?: boolean;\n    hideLocalFiles?: boolean;\n    hideTrashedFiles?: boolean;\n}\n\n@Dependencies([\"notes2filelist\", \"persons\", \"splitter\", \"extlist\", \"notification\", \"conv2list\", \"sectionlist\"])\nexport class FileChooserWindowController extends window.base.BaseWindowController {\n    \n    static textsPrefix: string = \"plugin.notes2.window.filechooser.\";\n    \n    static registerTexts(localeService: mail.LocaleService): void {\n        localeService.registerTexts(i18n, this.textsPrefix);\n    }\n    \n    // @Inject identity: privfs.identity.Identity;\n    // @Inject conv2Service: mail.section.Conv2Service;\n    @Inject collectionFactory: mail.CollectionFactory;\n    @Inject messagesCollection: utils.collection.BaseCollection<mail.SinkIndexEntry>;\n    // @Inject client: privfs.core.Client;\n\n    identity: privfs.identity.Identity;\n    conv2Service: mail.section.Conv2Service;\n    client: privfs.core.Client;\n\n    componentFactory: Notes2ComponentFactory;\n    personsComponent: component.persons.PersonsController;\n    sidebarOptions: component.sidebar.SidebarOptions;\n    sidebar: component.sidebar.SidebarController;\n    splitter: component.splitter.SplitterController;\n    deferred: Q.Deferred<app.common.shelltypes.OpenableElement[]>;\n    filesLists: {[id: string]: FilesListController};\n    notes2Plugin: Notes2Plugin;\n\n    notifications: component.notification.NotificationController;\n    filesBaseCollection: utils.collection.MergedCollection<FileEntryBase>;\n    localFilesBaseCollection: utils.collection.MutableCollection<FileEntryBase>;\n    fsManager: FsManager;\n    onModalClose: () => void;\n    \n    collections: { [key: string]: utils.collection.FilteredCollection<FileEntryBase> } = {};\n    channelsTrees: {[id: string]: mail.filetree.nt.Tree};\n    trees: {[rootRefId: string]: mail.filetree.nt.Tree};\n    myFileTreeManager: mail.filetree.nt.Tree;\n        \n    localFS: LocalFS;\n    activeFilesList: FilesListController;\n    prevActive: FilesListController;\n    pendingGetOrCreateFilesList: { [key: string]: Q.Promise<FilesListController> } = {};\n    // sessionsByCollectionName: { [collectionName: string]: mail.session.Session} = {};\n    remoteServers: {[hostHash: string]: component.remotehostlist.HostEntry};\n    \n    constructor(parent: Types.app.WindowParent, public session: mail.session.Session, public section: mail.section.SectionService, public initialPath?: string, public options: FileChooserOptions = {}) {\n        super(parent, __filename, __dirname, {\n            isPublic: false,\n            subs: {\n                \"splitter\": {defaultValue: \"320\"},\n                \"left-panel-sections-splitter-proportional\": { defaultValue: JSON.stringify({handlePos:250,totalSize:1000}) },\n                \"local-fs-initial-path\": {defaultValue: \"\"}\n            }\n        });\n        this.parent = parent;\n        \n        this.client = session.sectionManager.client;\n        this.identity = session.sectionManager.identity;\n        this.conv2Service = session.conv2Service;\n        \n\n        this.filesLists = {};\n        this.channelsTrees = {};\n        this.trees = {};\n        this.ipcMode = true;\n\n        this.notes2Plugin = this.app.getComponent(\"notes2-plugin\");\n        this.setPluginViewAssets(\"notes2\");\n        \n        this.openWindowOptions = {\n            modal: true,\n            alwaysOnTop: false,\n            showInactive: false,\n            toolbar: false,\n            maximized: false,\n            maximizable: true,\n            minimizable: true,\n            show: false,\n            minWidth: 400,\n            minHeight: 515,\n            width: 1200,\n            height: 750,\n            draggable: true,\n            resizable: true,\n            title: this.i18n(\"plugin.notes2.window.filechooser.title\"),\n            icon: \"\",\n            keepSpinnerUntilViewLoaded: true,\n        };\n        this.deferred = Q.defer();\n        this.filesLists = {};\n        \n        // this.registerChangeEvent(this.section.manager.filteredCollection.changeEvent, event => {\n        //     if (event.type == \"remove\" && event.element && event.element.getId() == this.section.getId()) {\n        //         // on section remove\n        //         // this.close();\n        //     }\n        // });\n    }\n    \n    getModel(): Model {\n        return {\n            activeId: this.getActiveId() || \"my\",\n            hashmail: this.session.sectionManager.identity.hashmail,\n            iframeId: null,\n            iframeLoad: null,\n            directory: null,\n            showLocalFS: this.app.isElectronApp(),\n            showFilePreview: false,\n        };\n    }\n    \n    getNameWithBreadcrumb(section: mail.section.SectionService): string {\n        let breadcrumb = \"\";\n        if (section == null) {\n            return \"\";\n        }\n        if (section.getParent() == null) {\n            return section.getName();\n        }\n        let parents: mail.section.SectionService[] = [];\n        let lastParent = section.getParent();\n        while (lastParent) {\n          parents.unshift(lastParent);\n          lastParent = lastParent.getParent();\n        }\n        parents.forEach(p => {\n          breadcrumb += p.getName() + \" / \";\n        });\n        return breadcrumb + section.getName();\n    }\n    \n    init(): Q.IWhenable<void> {\n        let localSession = this.app.sessionManager.getLocalSession();\n        return this.app.mailClientApi.checkLoginCore().then(() => {\n            \n            this.fsManager = new FsManager(this.session.sectionManager.client.descriptorManager);\n            this.notifications = this.addComponent(\"notifications\", this.componentFactory.createComponent(\"notification\", [this]));\n            this.filesBaseCollection = this.addComponent(\"filesBaseCollection\", new utils.collection.MergedCollection<FileEntryBase>());\n            this.filesBaseCollection.addCollection(this.collectionFactory.getAttachmentsCollectionByBaseCollection(\"all-messages\", this.messagesCollection));\n            this.localFilesBaseCollection = this.addComponent(\"localFilesBaseCollection\", new utils.collection.MutableCollection<FileEntryBase>());\n            \n            if (this.app.isElectronApp()) {\n                let localFsInitialPath = this.settings.create(\"local-fs-initial-path\");\n                LocalFS.staticConstructor(this.app);\n                this.localFS = new LocalFS(this.localFilesBaseCollection, localFsInitialPath.get(), newPath => {\n                    localFsInitialPath.set(newPath);\n                });\n            }\n            this.personsComponent = this.addComponent(\"personsComponent\", this.componentFactory.createComponent(\"persons\", [this]));\n            this.notes2Plugin.filesSections[localSession.hostHash].forEach(x => {\n                this.fsManager.addSection(x, localSession);\n            });\n            this.registerChangeEvent(this.notes2Plugin.filesSections[localSession.hostHash].changeEvent, event => this.onFilesSectionChange(localSession, event));\n            return this.fsManager.init().then(() => {\n                return Q.all(utils.Lang.getValues(this.fsManager.sections).map(x => {\n                    this.finishFileTreePreparation(x, localSession.hostHash);\n                }));\n            });\n        })\n        .then(() => {\n            let promises: Q.Promise<void>[] = [];\n            for (let id in this.filesLists) {\n                promises.push(Q().then(() => {\n                    return this.filesLists[id].init ? this.filesLists[id].init() : null;\n                }));\n            }\n            return Q.all(promises);\n        })\n        .then(() => {\n            this.splitter = this.addComponent(\"splitter\", this.componentFactory.createComponent(\"splitter\", [this, this.settings.create(\"splitter\")]));\n        })\n        .then(() => {\n            // Initializing sidebar\n            return this.initSidebar();\n        });\n\n        // .then(() => {\n        //     this.filesSections.forEach(x => {\n        //         this.fsManager.addSection(x);\n        //     });\n        //     this.registerChangeEvent(this.filesSections.changeEvent, this.onFilesSectionChange);\n        //     return this.fsManager.init().then(() => {\n        //         return Q.all(Lang.getValues(this.fsManager.sections).map(x => this.finishFileTreePreparation(x)));\n        //     });\n        // })\n\n    }\n\n    onViewOpen(): void {\n    }\n    \n    onViewLoad(): void {\n        let opened: boolean = false;\n        if (this.section && !this.section.isPrivate()) {\n            if (this.section.isUserGroup()) {\n                let conv2 = this.conv2Service.collection.find(x => x.section && x.section.getId() == this.section.getId());\n                if (conv2.id) {\n                    this.openConversationView(conv2.id);\n                    opened = true;\n                }\n            }\n            else {\n                this.openChannel(this.section.getId());\n                opened = true;\n            }\n        }\n        \n        if (!opened) {\n            this.openMy();\n            opened = true;\n        }\n        \n        if (this.initialPath) {\n            this.callViewMethod(\"switchFocusToFilesList\", true);\n        }\n        else {\n            this.callViewMethod(\"switchFocusToSidebar\", true);\n        }\n    }\n\n    \n    showModal(onModalClose: () => void) {\n        this.onModalClose = onModalClose;\n        this.open();\n        this.nwin.focus();\n    }\n\n    onViewClose() {\n        if (this.onModalClose) {\n            this.onModalClose();\n        }\n        this.close();\n    }\n    \n    getPromise(): Q.Promise<app.common.shelltypes.OpenableElement[]> {\n        return this.deferred.promise;\n    }\n    \n    beforeClose(_force?: boolean): Q.IWhenable<void> {\n        if (this.deferred && this.deferred.promise.isPending()) {\n            this.deferred.resolve([]);\n        }\n        return super.beforeClose(_force);\n    }\n    \n    \n    /////////////////////////\n    // SIDEBAR HELPERS\n    /////////////////////////\n    initSidebar(): Q.Promise<void> {\n        let localSession = this.app.sessionManager.getLocalSession();\n        return Q().then(() => {\n            let priv = this.notes2Plugin.sectionManager.getMyPrivateSection();\n            let filteredRootsCollection = this.addComponent(\"filteredRootsCollection\", new utils.collection.FilteredCollection(this.notes2Plugin.files2Sections[localSession.hostHash], x => x != priv && x.isVisible()));\n            let customElements: component.customelementlist.CustomElement[] = [];\n\n            if (priv != null) {\n                customElements.push(\n                    {\n                        id: FilesListController.MY_FILES,\n                        icon: {\n                            type: \"hashmail\",\n                            value: this.notes2Plugin.identity.hashmail\n                        },\n                        label: this.i18n(\"plugin.notes2.window.filechooser.filter.my\"),\n                        private: true,\n                        emphasized: true,\n                    }\n                );\n            }\n            customElements.push(\n                {\n                    id: FilesListController.ALL_FILES,\n                    icon: {\n                        type: \"fa\",\n                        value: \"privmx-icon privmx-icon-notes2\",\n                    },\n                    label: this.i18n(\"plugin.notes2.window.filechooser.filter.all\"),\n                    private: false\n                }\n            );\n            if (!this.options || !this.options.hideTrashedFiles) {\n                customElements.push(\n                    {\n                        id: FilesListController.TRASH_FILES,\n                        icon: {\n                            type: \"fa\",\n                            value: \"ico-bin\"\n                        },\n                        label: this.i18n(\"plugin.notes2.window.filechooser.filter.trash\"),\n                        private: false\n                    }\n                );\n            }\n\n            let customElementCollection = this.addComponent(\"cEleColl\", new utils.collection.MutableCollection<component.customelementlist.CustomElement>(customElements));\n\n            if (this.app.isElectronApp() && (!this.options || !this.options.hideLocalFiles)) {\n                // let userName = (<any>this.app).getSystemUserName();\n                // let computerName: string;\n                // if (userName.length == 0) {\n                //     computerName = this.i18n(\"plugin.notes2.window.filechooser.filter.local\");\n                // }\n                // else {\n                //     computerName = this.i18n(\"plugin.notes2.window.filechooser.filter.local\") + \" (\" + userName + \")\";\n                // }\n                let computerName = this.i18n(\"plugin.notes2.window.filechooser.filter.local\", (<any>this.app).getSystemLabel());\n                customElementCollection.addAt(2, {\n                    id: FilesListController.LOCAL_FILES,\n                    icon: {\n                        type: \"fa\",\n                        value: \"fa-desktop\"\n                    },\n                    label: computerName,\n                    private: false\n                });\n            }\n            let sidebarOptions: component.sidebar.SidebarOptions = {\n                sectionsLimitReached: false,\n                customElementList: {\n                    baseCollection: customElementCollection,\n                    unreadProvider: ce => this.getCustomElementUnread(ce),\n                    elementsCountProvider: ce => this.getCustomElementElementsCount(ce),\n                    searchCountProvider: null,\n                    searchAllSearchedProvider: null,\n                },\n                conv2List: {\n                    searchCountProvider: null,\n                    searchAllSearchedProvider: null,\n                    unreadProvider: c2s => this.getConversationUnread(localSession, c2s),\n                    elementsCountProvider: c2s => this.getConv2ElementsCount(localSession, c2s),\n                    sorter: (a, b) => {\n                        return b.getFileMessageLastDate() - a.getFileMessageLastDate();\n                    },\n                },\n                sectionList: {\n                    baseCollection: filteredRootsCollection,\n                    unreadProvider: section => this.getSectionUnread(localSession, section),\n                    elementsCountProvider: section => this.getSectionElementsCount(localSession, section),\n                    searchCountProvider: null,\n                    searchAllSearchedProvider: null,\n                    moduleName: Types.section.NotificationModule.NOTES2,\n                    sorter: (a, b) => {\n                        let res = b.getFileMessageLastDate() - a.getFileMessageLastDate();\n                        return res == 0 ? component.sectionlist.SectionListController.nameSectionSorter(a, b) : res;\n                    },\n                },\n                customSectionList: {\n                    baseCollection: null,\n                    unreadProvider: null,\n                    elementsCountProvider: null,\n                    searchCountProvider: null,\n                    searchAllSearchedProvider: null,\n                    moduleName: Types.section.NotificationModule.NOTES2,\n                    sorter: null\n                },\n                remoteHostList: {\n                    elementCountsAggregationStrategy: component.remotehostlist.ElementCountsAggregationStrategy.ALL,\n                },\n\n                conv2ListEnabled: true,\n                conv2Splitter: this.settings.create(\"left-panel-sections-splitter-proportional\"),\n                sidebarButtons: []\n            };\n            this.sidebarOptions = sidebarOptions;\n            this.sidebar = this.addComponent(\"sidebar\", this.componentFactory.createComponent(\"sidebar\", [this, sidebarOptions]));\n            this.sidebar.addEventListener(\"elementbeforeactivate\", this.onBeforeActivateSidebarElement.bind(this));\n            return;\n        })\n\n    }\n\n\n    getCustomElementUnread(customElement: component.customelementlist.CustomElement): number {\n        let localSession = this.app.sessionManager.getLocalSession();\n        if (customElement.id == FilesListController.MY_FILES) {\n            let privateSection = this.notes2Plugin.sectionManager.getMyPrivateSection();\n            let ufbs = this.notes2Plugin.unreadFilesBySection[localSession.hostHash];\n            return privateSection && ufbs ? ufbs[privateSection.getId()] || 0 : 0;\n        }\n        else if (customElement.id == FilesListController.ALL_FILES) {\n            //return (this.notes2Plugin.unreadFiles - this.notes2Plugin.unreadFilesBySection[FilesListController.TRASH_FILES]) || 0;\n            return null;\n        }\n        else if (customElement.id == FilesListController.TRASH_FILES) {\n            let ufbs = this.notes2Plugin.unreadFilesBySection[localSession.hostHash];\n            return ufbs ? ufbs[FilesListController.TRASH_FILES] || 0 : 0;\n        }\n    }\n    \n    getElementsCountWithoutRoot(count: number): number {\n        //Have to remove one element couse some collection contains root directory, which should not be included\n        return count > 0 ? count - 1 : 0;\n    }\n    \n    getCustomElementElementsCount(customElement: component.customelementlist.CustomElement): number {\n        if (customElement.id == \"my\") {\n            return this.getElementsCountWithoutRoot(this.getOrCreateCollectionMy().size());\n        }\n        if (customElement.id == \"all\") {\n            return this.getOrCreateCollectionAll().size();\n        }\n        if (customElement.id == \"trash\") {\n            return this.getOrCreateCollectionTrash().size();\n        }\n        return null;\n    }\n    \n    getSectionUnread(session: mail.session.Session, section: mail.section.SectionService): number {\n        let ufbs = this.notes2Plugin.unreadFilesBySection[session.hostHash];\n        return (ufbs ? ufbs[section.getId()] : 0) || 0;\n    }\n    \n    getSectionElementsCount(session: mail.session.Session, section: mail.section.SectionService): number {\n        let localSession = this.app.sessionManager.getLocalSession();\n        let count = session.host == localSession.host ? this.getOrCreateCollectionChannel(section).size() : this.getOrCreateRemoteCollectionChannel(session.hostHash, section).size();\n        return this.getElementsCountWithoutRoot(count);\n    }\n    \n    getConversationUnread(session: mail.session.Session, conv2Section: mail.section.Conv2Section): number {\n        if (!conv2Section.section) {\n            return 0;\n        }\n        return this.getSectionUnread(session, conv2Section.section);\n    }\n    \n    getConv2ElementsCount(session: mail.session.Session, conv2Section: mail.section.Conv2Section): number {\n        let localSession = this.app.sessionManager.getLocalSession();\n        let count = session.host == localSession.host ? this.getOrCreateCollectionConversation(conv2Section).size() : this.getOrCreateRemoteCollectionConversation(session.hostHash, conv2Section).size();\n        return this.getElementsCountWithoutRoot(count);\n    }\n    \n\n    addFilesListComponent(sessionInfo: SessionInfo, id: string, destination: string, collection: utils.collection.BaseCollection<FileEntryBase>,\n        filesInfo: FilesInfo, editable: boolean, onRefresh: () => Q.Promise<void>): Q.Promise<FilesListController> {\n        let filesList = this.filesLists[id] = this.addComponent(id, this.componentFactory.createComponent(\"notes2filelist\", [this]));\n        let localFS = id == FilesListController.LOCAL_FILES ? this.localFS : null;\n        let session = sessionInfo.sessionType == \"local\" ? this.app.sessionManager.getLocalSession() : this.app.sessionManager.getSessionByHostHash(sessionInfo.hostHash);\n        \n        return Q().then(() => {\n            return this.app.sessionManager.init(session.hostHash)\n        })\n        .then(() => {\n            return filesList.setSession(session);\n        })\n        .then(() => {\n            return filesList.setComponentData(id, destination, collection, filesInfo, editable, onRefresh, localFS, \"table\", true).then(() => {\n                if (this.initialPath) {\n                    if (this.activeFilesList) {\n                        this.activeFilesList.selectPath(this.initialPath);\n                    }\n                    else {\n                        filesList.selectPath(this.initialPath);\n                    }\n                }\n            });\n        })\n        .then(() => {\n            filesList.setSelectionMode(this.options && this.options.singleSelection ? SelectionMode.SINGLE : SelectionMode.MULTI);\n            filesList.onFilesChoosen = (elements: app.common.shelltypes.OpenableElement[]) => {\n                this.deferred.resolve(elements);\n                this.close();\n            }\n            return filesList;\n        });\n    }\n    \n    singletonGetOrCreateFilesList(key: string, creatorFunc: () => Q.Promise<FilesListController>): Q.Promise<FilesListController> {\n        if (!(key in this.pendingGetOrCreateFilesList)) {\n            this.pendingGetOrCreateFilesList[key] = creatorFunc();\n        }\n        return this.pendingGetOrCreateFilesList[key];\n    }\n\n    getOrCreateCollectionConversation(conversation: mail.section.Conv2Section): utils.collection.FilteredCollection<FileEntryBase> {\n        let collectionId = Notes2WindowController.getConversationId(this.app.sessionManager.getLocalSession(), conversation);\n        if (this.collections[collectionId]) {\n            return this.collections[collectionId];\n        }\n        // this.sessionsByCollectionName[collectionId] = this.app.sessionManager.getLocalSession();\n        let collection = this.collections[collectionId] = new utils.collection.FilteredCollection(this.filesBaseCollection, (x: Entry|Types.mail.AttachmentEntry) => {\n            if (Notes2Utils.isFsFileEntry(x)) {\n                return x.tree == conversation.fileTree && x.path.indexOf(FilesConst.TRASH_PATH) == -1 && !mail.thumbs.ThumbsManager.isThumb(x.path);\n            }\n            return x.entry.index == conversation.sinkIndex;\n        });\n        conversation.prepareFilesCollection().then(() => {\n            if (conversation.section) {\n                collection.refresh();\n            }\n        });\n        collection.changeEvent.add(() => {\n            this.sidebar.conv2List.sortedCollection.triggerBaseUpdateElement(conversation);\n        }, \"multi\");\n        return collection;\n    }\n    \n    \n    getOrCreateCollectionChannel(section: mail.section.SectionService): utils.collection.FilteredCollection<FileEntryBase> {\n        let sectionId = section.getId();\n        let collectionId = Notes2WindowController.getChannelId(this.session, section);\n\n        if (this.collections[collectionId]) {\n            return this.collections[collectionId];\n        }\n        let sink = section.isChatModuleEnabled() ? section.getChatSink() : null;\n\n        let sinkId = sink ? sink.id : null;\n\n        // this.sessionsByCollectionName[collectionId] = this.app.sessionManager.getLocalSession();\n        let collection = this.collections[collectionId] = new utils.collection.FilteredCollection(this.filesBaseCollection, (x: Entry|Types.mail.AttachmentEntry) => {\n            if (Notes2Utils.isFsFileEntry(x)) {\n                let res = x.tree == this.channelsTrees[collectionId] && x.path.indexOf(FilesConst.TRASH_PATH) == -1 && !mail.thumbs.ThumbsManager.isThumb(x.path);\n                \n                return res;\n            }\n            return x.entry.index.sink.id == sinkId;\n        });\n        collection.changeEvent.add(() => {\n            this.sidebar.sectionList.sortedCollection.triggerBaseUpdateElement(section);\n        }, \"multi\");\n        return collection;\n    }\n    \n    \n    getOrCreateCollectionTrash(): utils.collection.FilteredCollection<FileEntryBase> {\n        if (this.collections[FilesListController.TRASH_FILES]) {\n            return this.collections[FilesListController.TRASH_FILES];\n        }\n        // this.sessionsByCollectionName[FilesListController.TRASH_FILES] = this.app.sessionManager.getLocalSession();\n        let collection = this.collections[FilesListController.TRASH_FILES] = new utils.collection.FilteredCollection(this.filesBaseCollection, x => {\n            return Notes2Utils.isFsFileEntry(x) && x.path.indexOf(FilesConst.TRASH_PATH + \"/\") == 0 && !mail.thumbs.ThumbsManager.isThumb(x.path) && this.isLocalEntry(x);\n        });\n        collection.changeEvent.add(() => {\n            let index = this.sidebar.customElementList.customElementsCollection.indexOfBy(x => x.id == FilesListController.TRASH_FILES);\n            if (index != -1) {\n                this.sidebar.customElementList.customElementsCollection.triggerUpdateAt(index);\n            }\n        }, \"multi\");\n        return collection;\n    }\n    \n    getOrCreateMy(): Q.Promise<FilesListController> {\n        return Q().then(() => {\n            let id = FilesListController.MY_FILES;\n            if (!(id in this.filesLists)) {\n                let tree = this.myFileTreeManager;\n                let collection = this.getOrCreateCollectionMy();\n                return this.addFilesListComponent({sessionType: \"local\"}, id, id, collection, {\n                    type: FilesListType.OTHER,\n                    conversation: null,\n                    section: this.notes2Plugin.sectionManager.getMyPrivateSection()\n                }, true, () => {\n                    return tree.refreshDeep(true);\n                })\n                .then(() => {\n                    return this.filesLists[id];\n                })\n            }\n            return this.filesLists[id];\n        })\n    }\n    \n    getOrCreateCollectionAll(): utils.collection.FilteredCollection<FileEntryBase> {\n        if (this.collections[FilesListController.ALL_FILES]) {\n            return this.collections[FilesListController.ALL_FILES];\n        }\n        // this.sessionsByCollectionName[FilesListController.ALL_FILES] = this.app.sessionManager.getLocalSession();\n        let collection = this.collections[FilesListController.ALL_FILES] = new utils.collection.FilteredCollection(this.filesBaseCollection, (x: Entry|Types.mail.AttachmentEntry) => {\n            return Notes2Utils.isAttachmentEntry(x) || (x.isFile() && x.path.indexOf(FilesConst.TRASH_PATH) == -1) && !mail.thumbs.ThumbsManager.isThumb(x.path) && this.isLocalEntry(x);\n        });\n        collection.changeEvent.add(() => {\n            let index = this.sidebar.customElementList.customElementsCollection.indexOfBy(x => x.id == FilesListController.ALL_FILES);\n            if (index != -1) {\n                this.sidebar.customElementList.customElementsCollection.triggerUpdateAt(index);\n            }\n        }, \"multi\");\n        return collection;\n    }\n    \n    getOrCreateCollectionMy(): utils.collection.FilteredCollection<FileEntryBase> {\n        if (this.collections[FilesListController.MY_FILES]) {\n            return this.collections[FilesListController.MY_FILES];\n        }\n        let tree = this.myFileTreeManager;\n        // this.sessionsByCollectionName[FilesListController.MY_FILES] = this.app.sessionManager.getLocalSession();\n        let collection = this.collections[FilesListController.MY_FILES] = new utils.collection.FilteredCollection(this.filesBaseCollection, x => {\n            return Notes2Utils.isFsFileEntry(x) && x.tree == tree && x.path.indexOf(FilesConst.TRASH_PATH) == -1 && !mail.thumbs.ThumbsManager.isThumb(x.path);\n        });\n        collection.changeEvent.add(() => {\n            let index = this.sidebar.customElementList.customElementsCollection.indexOfBy(x => x.id == FilesListController.MY_FILES);\n            if (index != -1) {\n                this.sidebar.customElementList.customElementsCollection.triggerUpdateAt(index);\n            }\n        }, \"multi\");\n        return collection;\n    }\n\n    openChannel(sectionId: string): Q.Promise<void> {\n        let section = this.session.sectionManager.getSection(sectionId);\n        let filesId = Notes2WindowController.getChannelId(this.session, section);\n        if (this.getActiveId() == filesId) {\n            this.sidebar.setActive({\n                type: component.sidebar.SidebarElementType.SECTION,\n                section: section\n            }, false);\n            this.callViewMethod(\"toggleDisabledSection\", !section.isFileModuleEnabled());\n            if (filesId) {\n                this.callViewMethod(\"hideLoading\");\n            }\n            return Q();\n        }\n\n        if (section == null) {\n            return Q();\n        }\n        this.notes2Plugin.activeSinkId = section.getChatSink().id;\n        this.notes2Plugin.activeSinkHostHash = this.session.hostHash;\n        if (! section.isFileModuleEnabled()) {\n            return Q();\n        }\n        return Q().then(() => {\n            return this.singletonGetOrCreateFilesList(filesId, () => this.getOrCreateChannel(filesId, sectionId, section));\n        })\n        .then(list => {\n            this.activeFilesList = list;\n            this.notes2Plugin.activeFilesList = this.activeFilesList;\n            this.sidebar.setActive({\n                type: component.sidebar.SidebarElementType.SECTION,\n                section: section\n            }, false);\n            this.activateFiles(filesId);\n            this.activeFilesList.loadFilePreview();\n        });\n    }\n    \n    getOrCreateChannel(id: string, sectionId: string, section: mail.section.SectionService): Q.Promise<FilesListController> {\n        let collectionId = Notes2WindowController.getChannelId(this.session, section);\n        return Q().then(() => {\n            if (!(id in this.filesLists)) {\n                let collection = this.getOrCreateCollectionChannel(section);\n                return this.addFilesListComponent({sessionType: \"local\"}, id, sectionId, collection, {\n                    type: FilesListType.CHANNEL,\n                    conversation: null,\n                    section: section\n                }, this.channelsTrees[collectionId] != null, () => {\n                    return this.channelsTrees[collectionId] ? this.channelsTrees[collectionId].refreshDeep(true) : Q();\n                })\n                .then(() => {\n                    return section.getChatSinkIndex().then(() => {\n                        section.getChatModule().filesMessagesCollection.changeEvent.add(() => {\n                            this.sidebar.sectionList.sortedCollection.triggerBaseUpdateElement(section);\n                        }, \"multi\");\n                    })\n                    .then(() => {\n                        return this.filesLists[id];\n                    })\n  \n                })\n            }\n            return this.filesLists[id];\n        })\n        .then(() => {\n            return this.filesLists[id];\n        })\n    }\n    \n    openMy(): Q.Promise<void> {\n        let id = FilesListController.MY_FILES;\n        if (this.getActiveId() == id) {\n            return Q();\n        }\n        Q().then(() => {\n            return this.singletonGetOrCreateFilesList(id, () => this.getOrCreateMy());\n        })\n        .then(list => {\n            this.activeFilesList = list;\n            this.sidebar.setActive({\n                type: component.sidebar.SidebarElementType.CUSTOM_ELEMENT,\n                customElement: this.sidebar.customElementList.customElementsCollection.find(x => x.id == id)\n            }, false);\n            this.callViewMethod(\"activateFiles\", id, id);\n        });\n    }\n\n    openAll(): Q.Promise<void> {\n        let id = FilesListController.ALL_FILES;\n        if (this.getActiveId() == id) {\n            return Q();\n        }\n        Q().then(() => {\n            return this.singletonGetOrCreateFilesList(id, () => this.getOrCreateAll());\n        })\n        .then(list => {\n            this.activeFilesList = list;\n            this.sidebar.setActive({\n                type: component.sidebar.SidebarElementType.CUSTOM_ELEMENT,\n                customElement: this.sidebar.customElementList.customElementsCollection.find(x => x.id == id)\n            }, false);\n            this.callViewMethod(\"activateFiles\", id, id);\n        });\n    }\n    \n    getOrCreateAll(): Q.Promise<FilesListController> {\n        let id = FilesListController.ALL_FILES;\n        return Q().then(() => {\n            if (!(id in this.filesLists)) {\n                let collection = this.getOrCreateCollectionAll();\n                return this.addFilesListComponent({sessionType: \"local\"}, id, id, collection, {\n                    type: FilesListType.OTHER,\n                    conversation: null,\n                    section: this.notes2Plugin.sectionManager.getMyPrivateSection()\n                }, true, () => {\n                    return this.reloadAll();\n                })\n                .then(() => {\n                    return this.filesLists[id];\n                })\n            }\n            return this.filesLists[id];\n        })\n    }\n\n    openLocal(): Q.Promise<void> {\n        let id = FilesListController.LOCAL_FILES;\n        if (this.getActiveId() == id) {\n            return Q();\n        }\n        Q().then(() => {\n            return this.singletonGetOrCreateFilesList(id, () => this.getOrCreateLocal());\n        })\n        .then(list => {\n            this.activeFilesList = list;\n            this.sidebar.setActive({\n                type: component.sidebar.SidebarElementType.CUSTOM_ELEMENT,\n                customElement: this.sidebar.customElementList.customElementsCollection.find(x => x.id == id)\n            }, false);\n            this.callViewMethod(\"activateFiles\", id, id);\n            this.activeFilesList.loadFilePreview();\n        });\n    }\n    \n    getOrCreateLocal(): Q.Promise<FilesListController> {\n        let id = FilesListController.LOCAL_FILES;\n        return Q().then(() => {\n            if (!(id in this.filesLists)) {\n                let collection = this.localFilesBaseCollection;\n                return this.addFilesListComponent({sessionType: \"local\"}, id, id, collection, {\n                    type: FilesListType.OTHER,\n                    conversation: null,\n                    section: null\n                }, true, () => {\n                    return this.reloadAll();\n                })\n                .then(() => {\n                    return this.filesLists[id];\n                })\n            }\n            return this.filesLists[id];\n        })\n    }\n    \n                \n    onBeforeActivateSidebarElement(event: component.sidebar.ElementBeforeActivateEvent) {\n        let prevActive = this.activeFilesList;\n        event.result = false;\n        Q().then(() => {\n            event.result = false;\n            if (event.element.type == component.sidebar.SidebarElementType.HOST) {\n                return this.expandRemoteSectionsList(event.element.host);\n            }\n            else if (event.element.type == component.sidebar.SidebarElementType.REMOTE_SECTION) {\n                return this.openRemoteChannel(event.element.hostHash, event.element.section.getId());\n            }\n            else if (event.element.type == component.sidebar.SidebarElementType.REMOTE_CONVERSATION) {\n                return this.openRemoteConversationView(event.element.hostHash, event.element.conv2.id);\n            }\n            else if (event.element.type == component.sidebar.SidebarElementType.CONVERSATION) {\n                return this.openConversationView(event.element.conv2.id);\n            }\n            else if (event.element.type == component.sidebar.SidebarElementType.SECTION) {\n                return this.openChannel(event.element.section.getId());\n\n            }\n            else if (event.element.type == component.sidebar.SidebarElementType.CUSTOM_ELEMENT) {\n                this.notes2Plugin.activeSinkId = null;\n                this.notes2Plugin.activeSinkHostHash = null;\n\n                if (event.element.customElement.id == FilesListController.MY_FILES) {\n                    return this.openMy();\n                }\n                if (event.element.customElement.id == FilesListController.ALL_FILES) {\n                    return this.openAll();\n                }\n                if (event.element.customElement.id == FilesListController.LOCAL_FILES) {\n                    return this.openLocal();\n                }\n                if (event.element.customElement.id == FilesListController.TRASH_FILES) {\n                    return this.openTrash();\n                }\n            }\n        })\n        .then(() => {\n            this.deactivateList(prevActive);\n        })\n        .fail(e => console.log(e));\n    }\n\n    activateList(filesList: FilesListController): void {\n        this.notes2Plugin.activeFilesList = this.activeFilesList;\n        this.activeFilesList.activate();\n    }\n\n    deactivateList(filesList: FilesListController): void {\n        if (filesList && filesList != this.activeFilesList) {\n            filesList.deactivate();\n        }\n    }\n    \n    openTrash(): Q.Promise<void> {\n        let id = FilesListController.TRASH_FILES;\n        if (this.getActiveId() == id) {\n            return Q();\n        }\n        Q().then(() => {\n            return this.singletonGetOrCreateFilesList(id, () => this.getOrCreateTrash());\n        })\n        .then(list => {\n            this.activeFilesList = list;\n            this.sidebar.setActive({\n                type: component.sidebar.SidebarElementType.CUSTOM_ELEMENT,\n                customElement: this.sidebar.customElementList.customElementsCollection.find(x => x.id == id)\n            }, false);\n            this.callViewMethod(\"activateFiles\", id, id);\n            this.activeFilesList.loadFilePreview();\n        });\n    }\n    \n    getOrCreateTrash(): Q.Promise<FilesListController> {\n        let id = FilesListController.TRASH_FILES;\n        return Q().then(() => {\n            if (!(id in this.filesLists)) {\n                let collection = this.getOrCreateCollectionTrash();\n                return this.addFilesListComponent({sessionType: \"local\"}, id, id, collection, {\n                    type: FilesListType.OTHER,\n                    conversation: null,\n                    section: null\n                }, true, () => {\n                    return this.reloadAll();\n                })\n                .then(() => {\n                    return this.filesLists[id];\n                })\n            }\n            return this.filesLists[id];\n    \n        })\n    }\n        \n    \n    //////////////////\n    /// navigation methods\n    ///////////////////\n    \n    openConversationView(conversationId: string): Q.Promise<void> {\n        let conversation = this.conv2Service.collection.find(x => x.id == conversationId);\n        let filesId = Notes2WindowController.getConversationId(this.app.sessionManager.getLocalSession(), conversation);\n        if (this.getActiveId() == filesId) {\n            return Q();\n        }\n        let users = this.conv2Service.getUsersFromConvId(conversationId);\n        if (conversation == null) {\n            conversation = this.conv2Service.getOrCreateConv(users, false);\n            if (conversation == null) {\n                return Q();\n            }\n        }\n        this.notes2Plugin.activeSinkId = conversation.sinkIndex ? conversation.sinkIndex.sink.id : null;\n        this.notes2Plugin.activeSinkHostHash = this.app.sessionManager.getLocalSession().hostHash;\n        return Q().then(() => {\n            return this.singletonGetOrCreateFilesList(filesId, () => this.getOrCreateConversation(conversation));\n        })\n        .then(list => {\n            this.activeFilesList = list;\n            this.notes2Plugin.activeFilesList = this.activeFilesList;\n            this.sidebar.setActive({\n                type: component.sidebar.SidebarElementType.CONVERSATION,\n                conv2: conversation\n            }, false);\n            this.activateFiles(filesId);\n            this.activeFilesList.loadFilePreview();\n        });\n    }\n    \n    getActiveId(): string {\n        return this.activeFilesList ? this.activeFilesList.fileListId : null;\n    }\n\n    reloadAll(): Q.Promise<void> {\n        return this.fsManager.refresh();\n    }\n    \n    getOrCreateConversation(conversation: mail.section.Conv2Section): Q.Promise<FilesListController> {\n        let filesId = Notes2WindowController.getConversationId(this.app.sessionManager.getLocalSession(), conversation);\n        return Q().then(() => {\n            if (!(filesId in this.filesLists)) {\n                let collection = this.getOrCreateCollectionConversation(conversation);\n                return this.addFilesListComponent({sessionType: \"local\"}, filesId, conversation.id, collection, {\n                    type: FilesListType.CONVERSATION,\n                    conversation: conversation,\n                    section: null\n                }, true, () => {\n                    return conversation.fileTree ? conversation.fileTree.refreshDeep(true) : Q();\n                })\n                .then(() => {\n                    return conversation.prepareFilesCollection().then(() => {\n                        if (conversation.section) {\n                            collection.refresh();\n                        }\n                    })\n                    .fail(e => {\n                        this.getLogger().error(\"Error during preparing files\", e);\n                    });\n                })\n                .then(() => {\n                    return this.filesLists[filesId];\n                })\n            }\n            return this.filesLists[filesId];\n        })\n    }\n    \n    onFilesSectionChange(session: mail.session.Session, event: Types.utils.collection.CollectionEvent<mail.section.SectionService>) {\n        if (event.element != null) {\n            if (event.element.hasFileModule()) {\n                this.fsManager.addSectionAndInit(event.element, session).then(sec => {\n                    if (sec != null) {\n                        return this.finishFileTreePreparation(sec, session.hostHash);\n                    }\n                })\n                .fail(this.errorCallback);\n            }\n            if (event.type == \"remove\") {\n                if (this.activeFilesList && this.activeFilesList.destination == event.element.getId()) {\n                    this.clearActive();\n                }\n            }\n        }\n    }\n    \n    clearActive() {\n        this.activeFilesList = null;\n        this.callViewMethod(\"activateFiles\", null, null);\n    }\n        \n    finishFileTreePreparation(fsMgrEntry: FsManagerEntry, hostHash: string, isConversation?: boolean): Q.Promise<void> {\n        return Q().then(() => {\n            let ntree = fsMgrEntry.tree;\n            let section = fsMgrEntry.section;\n            let manager = this.trees[ntree.root.ref.id];\n            if (manager == null) {\n                this.trees[ntree.root.ref.id] = manager = this.addComponent(\"fileTreeManager/\" + ntree.root.ref.id, ntree);\n                this.filesBaseCollection.addCollection(ntree.collection);\n            }\n            if (section == this.notes2Plugin.sectionManager.getMyPrivateSection()) {\n                this.myFileTreeManager = manager;\n            }\n            let collectionId: string;\n            let session = this.app.sessionManager.getSessionByHostHash(hostHash);\n            if (isConversation) {\n                let conversation = session ? session.conv2Service.collection.find(x => x.section == section) : null;\n                if (!conversation) {\n                    return;\n                }\n                collectionId = Notes2WindowController.getConversationId(session, conversation);\n                return conversation.prepareFilesCollection().then(() => {\n                    if (conversation.section) {\n                        this.channelsTrees[collectionId] = manager;\n                        // this.sessionsByCollectionName[collectionId] = session;\n                        if (this.collections[collectionId]) {\n                            this.collections[collectionId].refresh();\n                        }\n                    }\n                });\n            }\n            else {\n                collectionId = Notes2WindowController.getChannelId(session, section);\n                this.channelsTrees[collectionId] = manager;\n                // this.sessionsByCollectionName[collectionId] = session;\n                if (this.collections[collectionId]) {\n                    this.collections[collectionId].refresh();\n                }\n            }\n        });\n    }\n    \n    onViewSelect() {\n        this.activeFilesList.chooseFile();\n    }\n    \n    activateFiles(id: string): void {\n        this.activateList(this.activeFilesList);\n        this.callViewMethod(\"activateFiles\", id);\n    }\n\n    expandRemoteSectionsList(hostEntry: component.remotehostlist.HostEntry): void {\n        let session: mail.session.Session;\n        let hostHash = this.app.sessionManager.getHashFromHost(hostEntry.host);\n        let checkSessionExists: boolean = this.app.sessionManager.isSessionExistsByHostHash(hostHash);\n        if ( checkSessionExists && hostEntry.sectionList != null && hostEntry.conv2List != null) {\n            this.callViewMethod(\"expandRemoteSectionsList\", hostEntry.host, hostHash);\n            return;\n        }\n        \n        \n        Q().then(() => {\n            if (! checkSessionExists) {\n                this.sidebar.callViewMethod(\"showHostLoading\", hostHash, true);\n                return this.app.sessionManager.createRemoteSession(hostEntry.host)\n                .then(() => {\n                    return this.app.sessionManager.init(hostHash);\n                })\n                .fail(() => {\n                    this.sidebar.callViewMethod(\"showHostLoading\", hostHash, false);\n                    return this.errorCallback;\n                });\n            }\n        })\n        .then(() => {\n            session = this.app.sessionManager.getSessionByHostHash(hostHash);\n            let tasksPlugin = this.app.getComponent(\"tasks-plugin\");\n            return Q.all([\n                Q.all(session.sectionManager.sectionsCollection.list\n                    .filter(x => !x.isPrivateOrUserGroup())\n                    .map(x => this.fsManager.addSectionAndInit(x, session).then(y => y ? this.finishFileTreePreparation(y, hostHash) : null))),\n                Q.all(session.conv2Service.collection.list\n                    .map(x => this.fsManager.addConversationAndInit(x, session).then(y => y ? this.finishFileTreePreparation(y, hostHash, true) : null))),\n                tasksPlugin ? tasksPlugin.ensureSessionProjectsInitialized(session) : Q(),\n            ]);\n        })\n        .then(() => {\n            if (! this.remoteServers) {\n                this.remoteServers = {};\n            }\n                \n            this.initRemoteHostComponents(hostEntry, session);\n            this.callViewMethod(\"expandRemoteSectionsList\", hostEntry.host, hostHash);\n        })\n        .then(() => {\n            this.updateSidebarHostElement(session);\n        })\n        .fail(e => {\n            console.log(e);\n        });\n    }\n\n    checkRemoteHostComponentsInitialized(hostHash: string): boolean {\n        let ret = (hostHash in this.remoteServers) && this.remoteServers[hostHash].sectionList != null && this.remoteServers[hostHash].conv2List != null;\n        return ret;\n    }\n\n    initRemoteHostComponents(hostEntry: component.remotehostlist.HostEntry, session: mail.session.Session): void {\n        let hostHash = session.hostHash;\n        if (this.checkRemoteHostComponentsInitialized(hostHash)) {\n            return;\n        }\n\n        let sectionsListOptions: component.remotesectionlist.RemoteSectionListOptions = {\n            baseCollection: session.sectionManager.filteredCollection,\n            unreadProvider: section => this.getSectionUnread(session, section),\n            elementsCountProvider: section => this.getRemoteSectionElementsCount(hostHash, section),\n            searchCountProvider: null,\n            searchAllSearchedProvider: null,\n            sorter: (a, b) => {\n                let res = b.getFileMessageLastDate() - a.getFileMessageLastDate();\n                return res == 0 ? component.sectionlist.SectionListController.nameSectionSorter(a, b) : res;\n            },\n            moduleName: Types.section.NotificationModule.NOTES2,\n            checkShowAllAvailSections: false,\n            session: session\n        }\n\n        let conv2ListOptions: component.remoteconv2list.RemoteConv2ListOptions = {\n            unreadProvider: c2s => this.getConversationUnread(session, c2s),\n            elementsCountProvider: c2s => this.getRemoteConv2ElementsCount(hostHash, c2s),\n            searchCountProvider: null,\n            searchAllSearchedProvider: null,\n            withSpinnerProvider: null,\n            session: session\n        };\n        let hostList = hostEntry;\n        hostList.sectionList = this.addComponent(\"remoteSectionsList-\" + hostHash, this.componentFactory.createComponent(\"remotesectionlist\", [this, sectionsListOptions]));\n        hostList.sectionList.ipcMode = true;\n        hostList.conv2List = this.addComponent(\"remoteConv2List-\" + hostHash, this.componentFactory.createComponent(\"remoteconv2list\", [this, conv2ListOptions]));\n        hostList.conv2List.ipcMode = true;\n        this.remoteServers[hostHash] = hostList;\n        this.sidebar.registerRemoteSectionsList(hostHash, hostList.sectionList);\n        this.sidebar.registerRemoteConv2List(hostHash, hostList.conv2List);\n    }\n    \n    getRemoteSectionElementsCount(hostHash: string, section: mail.section.SectionService): number {\n        return this.getElementsCountWithoutRoot(this.getOrCreateRemoteCollectionChannel(hostHash, section).size());\n    }\n    \n    getRemoteConv2ElementsCount(hostHash: string, conv2Section: mail.section.Conv2Section): number {\n        return this.getElementsCountWithoutRoot(this.getOrCreateRemoteCollectionConversation(hostHash, conv2Section).size());\n    }\n\n\n    openRemoteChannel(hostHash: string, sectionId: string): Q.Promise<void> {\n        return Q().then(() => {\n            return this.app.sessionManager.init(hostHash);\n        })\n        .then(() => {\n            let session = this.app.sessionManager.getSessionByHostHash(hostHash);\n            let section = session.sectionManager.getSection(sectionId);\n            let filesId = Notes2WindowController.getChannelId(session, section);\n\n            if (this.getActiveId() == filesId) {\n                this.sidebar.setActive({\n                    type: component.sidebar.SidebarElementType.REMOTE_SECTION,\n                    section: section,\n                    hostHash: hostHash,\n                }, false);\n                this.callViewMethod(\"toggleDisabledSection\", !section.isFileModuleEnabled());\n                return;\n            }\n    \n            if (section == null) {\n                return;\n            }\n            this.notes2Plugin.activeSinkId = section.getChatSink().id;\n            this.notes2Plugin.activeSinkHostHash = session.hostHash;\n            \n            if (! section.isFileModuleEnabled()) {\n                return;\n            }\n            \n            return this.singletonGetOrCreateFilesList(filesId, () => this.getOrCreateRemoteChannel(hostHash, filesId, sectionId, section))\n            .then(newList => {\n                this.activeFilesList = newList;\n                \n                this.notes2Plugin.activeFilesList = this.activeFilesList;\n                this.sidebar.setActive({\n                    type: component.sidebar.SidebarElementType.REMOTE_SECTION,\n                    section: section,\n                    hostHash: hostHash\n                }, false);\n                this.activateFiles(filesId);\n                this.activeFilesList.loadFilePreview();\n            })\n        })\n    }\n\n    getOrCreateRemoteChannel(hostHash: string, id: string, sectionId: string, section: mail.section.SectionService): Q.Promise<FilesListController> {\n        let session = this.app.sessionManager.getSessionByHostHash(hostHash);\n        let collectionId = Notes2WindowController.getChannelId(session, section);\n        \n        return Q().then(() => {\n            if (!(id in this.filesLists)) {\n                return this.fsManager.addSectionAndInit(section, session).then(sec => {\n                    if (sec != null) {\n                        return this.finishFileTreePreparation(sec, hostHash);\n                    }\n                })\n                .then(() => {\n                    let collection = this.getOrCreateRemoteCollectionChannel(hostHash, section);\n                    return this.addFilesListComponent({sessionType: \"remote\", hostHash: hostHash}, id, sectionId, collection, {\n                        type: FilesListType.CHANNEL,\n                        conversation: null,\n                        section: section\n                    }, this.channelsTrees[collectionId] != null, () => {\n                        return this.channelsTrees[collectionId] ? this.channelsTrees[collectionId].refreshDeep(true) : Q();\n                    })\n                })\n                .then(() => {\n                    return section.getChatSinkIndex().then(() => {\n                        section.getChatModule().filesMessagesCollection.changeEvent.add(() => {\n                            this.sidebar.remoteSectionsLists[hostHash].sortedCollection.triggerBaseUpdateElement(section);\n                            this.updateSidebarHostElement(this.app.sessionManager.getSessionByHostHash(hostHash));\n                        }, \"multi\");\n                    });\n                })\n                .then(() => {\n                    return this.filesLists[id];\n                })\n            }\n            return this.filesLists[id];\n        })\n    }\n    \n    getOrCreateRemoteCollectionChannel(hostHash: string, section: mail.section.SectionService): utils.collection.FilteredCollection<FileEntryBase> {\n        let session = this.app.sessionManager.getSessionByHostHash(hostHash);\n        let collectionId = Notes2WindowController.getChannelId(session, section);\n        if (this.collections[collectionId]) {\n            return this.collections[collectionId];\n        }\n        let sink = section.isChatModuleEnabled() ? section.getChatSink() : null;\n        let sinkId = sink ? sink.id : null;\n        // this.sessionsByCollectionName[collectionId] = session;\n        let collection = this.collections[collectionId] = new utils.collection.FilteredCollection(this.filesBaseCollection, (x: Entry|Types.mail.AttachmentEntry) => {\n            if (Notes2Utils.isFsFileEntry(x)) {\n                return x.tree == this.channelsTrees[collectionId] && x.path.indexOf(FilesConst.TRASH_PATH) == -1 && !mail.thumbs.ThumbsManager.isThumb(x.path);\n            }\n            return x.entry.index.sink.id == sinkId;\n        });\n        collection.changeEvent.add(() => {\n            this.sidebar.remoteSectionsLists[hostHash].sortedCollection.triggerBaseUpdateElement(section);\n            this.updateSidebarHostElement(this.app.sessionManager.getSessionByHostHash(hostHash));\n        }, \"multi\");\n        return collection;\n    }\n    \n    openRemoteConversationView(hostHash: string, conversationId: string): Q.Promise<void> {\n        return Q().then(() => {\n            return this.app.sessionManager.init(hostHash);\n        })\n        .then(() => {\n            let session = this.app.sessionManager.getSessionByHostHash(hostHash);\n            let users = session.conv2Service.getUsersFromConvId(conversationId);\n            let conversation = session.conv2Service.collection.find(x => x.id == conversationId);\n            if (conversation == null) {\n                conversation = session.conv2Service.getOrCreateConv(users, true);\n                if (conversation == null) {\n                    return Q();\n                }\n            }\n            let filesId = Notes2WindowController.getConversationId(session, conversation);\n            if (this.getActiveId() == filesId) {\n                return Q();\n            }\n            this.notes2Plugin.activeSinkId = conversation.sinkIndex ? conversation.sinkIndex.sink.id : null;\n            this.notes2Plugin.activeSinkHostHash = session.hostHash;\n            \n            return Q().then(() => {\n                return this.singletonGetOrCreateFilesList(filesId, () => this.getOrCreateRemoteConversation(hostHash, conversation));\n            })\n            .then(list => {\n                this.activeFilesList = list;\n                this.notes2Plugin.activeFilesList = this.activeFilesList;\n                this.sidebar.setActive({\n                    type: component.sidebar.SidebarElementType.REMOTE_CONVERSATION,\n                    conv2: conversation,\n                    hostHash: hostHash,\n                }, false);\n                this.activateFiles(filesId);\n                this.activeFilesList.loadFilePreview();\n            });\n        });\n    }\n\n    getOrCreateRemoteConversation(hostHash: string, conversation: mail.section.Conv2Section): Q.Promise<FilesListController> {\n        let session = this.app.sessionManager.getSessionByHostHash(hostHash);\n        return Q().then(() => {\n            let id = Notes2WindowController.getConversationId(session, conversation);\n            // console.log(\"getOrCreateRemoteConversation id\", id);\n            if (!(id in this.filesLists)) {\n                let collection: utils.collection.FilteredCollection<FileEntryBase> = null;\n                return this.fsManager.addConversationAndInit(conversation, session).then(sec => {\n                    if (sec != null) {\n                        return this.finishFileTreePreparation(sec, hostHash);\n                    }\n                })\n                .then(() => {\n                    collection = this.getOrCreateRemoteCollectionConversation(hostHash, conversation);\n                    return this.addFilesListComponent({ sessionType: \"remote\", hostHash: hostHash }, id, conversation.id, collection, {\n                        type: FilesListType.CONVERSATION,\n                        conversation: conversation,\n                        section: null,\n                    }, true, () => {\n                        return conversation.fileTree ? conversation.fileTree.refreshDeep(true) : Q();\n                    })\n                })\n                .then(() => {\n                    return conversation.prepareFilesCollection().then(() => {\n                        if (conversation.section) {\n                            collection.refresh();\n                        }\n                    })\n                    .fail(e => {\n                        this.getLogger().error(\"Error during preparing files\", e);\n                    });\n                })\n                .then(() => {\n                    return this.filesLists[id];\n                });\n            }\n            return this.filesLists[id];\n    \n        })\n    }\n    \n    getOrCreateRemoteCollectionConversation(hostHash: string, conversation: mail.section.Conv2Section): utils.collection.FilteredCollection<FileEntryBase> {\n        let session = this.app.sessionManager.getSessionByHostHash(hostHash);\n        let id = Notes2WindowController.getConversationId(session, conversation);\n        if (this.collections[id]) {\n            return this.collections[id];\n        }\n        // this.sessionsByCollectionName[id] = session;\n        let collection = this.collections[id] = new utils.collection.FilteredCollection(this.filesBaseCollection, (x: Entry|Types.mail.AttachmentEntry) => {\n            if (Notes2Utils.isFsFileEntry(x)) {\n                return x.tree == conversation.fileTree && x.path.indexOf(FilesConst.TRASH_PATH) == -1 && !mail.thumbs.ThumbsManager.isThumb(x.path);\n            }\n            return x.entry.index == conversation.sinkIndex;\n        });\n        conversation.prepareFilesCollection().then(() => {\n            if (conversation.section) {\n                collection.refresh();\n            }\n        });\n        collection.changeEvent.add(() => {\n            this.sidebar.remoteConv2Lists[hostHash].sortedCollection.triggerBaseUpdateElement(conversation);\n            this.updateSidebarHostElement(this.app.sessionManager.getSessionByHostHash(hostHash));\n        }, \"multi\");\n        return collection;\n    }\n    \n    updateSidebarHostElement(session: mail.session.Session): void {\n        if (this.app.sessionManager.getLocalSession() == session) {\n            return;\n        }\n        let element = this.sidebar.hostList.hostsSortedCollection.find(x => x.host == session.host);\n        if (element) {\n            this.sidebar.hostList.hostsSortedCollection.triggerBaseUpdateElement(element);\n        }\n    }\n    \n    isLocalEntry(entry: mail.filetree.nt.Entry): boolean {\n        return Notes2Utils.isEntryFromSession(entry, this.app.sessionManager.getLocalSession());\n    }\n    \n}\n\n(<any>FileChooserWindowController.prototype).className = \"com.privmx.plugin.notes2.window.filechooser.FileChooserWindowController\";"],"sourceRoot":"../../../src"}