{"version":3,"sources":["window/notes2/Notes2WindowController.ts"],"names":[],"mappings":"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","file":"Notes2WindowController.js","sourcesContent":["import {app, component, mail, utils, window, Types, Q, privfs} from \"pmc-mail\";\nimport {Notes2Plugin, Notes2ComponentFactory, RemoveFileEvent, PreviewRequestEvent, UpdateFilesSectionBadgeEvent, UpdateNotes2SettingEvent, UpdateNotes2SidebarSpinnersEvent, RequestOpenFilesEvent} from \"../../main/Notes2Plugin\";\nimport {FileEntryBase, Notes2Utils} from \"../../main/Notes2Utils\";\nimport Inject = utils.decorators.Inject;\nimport Dependencies = utils.decorators.Dependencies;\nimport {FilesListController, FilesListType, FilesInfo, FilesFilterUpdater} from \"../../component/fileslist/FilesListController\";\nimport {FilesConst, ViewContext} from \"../../main/Common\";\nimport {LocalFS} from \"../../main/LocalFS\";\nimport Entry = mail.filetree.nt.Entry;\nimport TrashedInfo = mail.filetree.nt.TrashedInfo;\nimport { i18n } from \"./i18n\";\nimport { ViewSettings } from \"../../main/ViewSettings\";\n\nexport interface Model {\n    activeId: string;\n    hashmail: string;\n    iframeId: number;\n    iframeLoad: Types.app.WindowLoadOptions;\n    directory: DirectoryPreviewModel;\n    showLocalFS: boolean;\n    showFilePreview: boolean;\n}\n\nexport interface SessionInfo {\n    sessionType: \"local\" | \"remote\";\n    hostHash?: string;\n}\n\nexport interface TrashedInfoModel {\n    who: string;\n    when: number;\n    sectionId: string;\n    sectionName: string;\n    fullSectionName: string;\n}\n\nexport type ReusableOpener = window.base.BaseWindowController&\n    app.common.shelltypes.ShellReusableOpener&\n    {hasOpenedEntry(ele: app.common.shelltypes.OpenableElement): boolean};\n\nexport interface ReusableOpenerEntry {\n    appId: string;\n    iframeId: number;\n    win: ReusableOpener;\n    load: Types.app.WindowLoadOptions;\n}\n\nexport interface NotificationEntryOptions {\n    autoHide?: boolean;\n    progress?: boolean;\n}\n\nexport interface DirectoryPreviewModel {\n    path: string;\n    name: string;\n    lastModifiedDate: number;\n    size: number;\n    fileCount: number;\n};\n\ninterface SearchResults {\n    [key: string]: number;\n}\n\nexport class FsManagerEntry {\n    \n    fs: privfs.fs.file.FileSystem;\n    tree: mail.filetree.nt.Tree;\n    \n    constructor(\n        public section: mail.section.SectionService\n    ) {\n    }\n    \n    setTree(tree: mail.filetree.nt.Tree) {\n        this.tree = tree;\n        this.fs = this.tree.fileSystem;\n    }\n    \n    checkTrash() {\n        return Q().then(() => {\n            if (!this.fs.root.entries.hasName(FilesConst.TRASH_ENTRY)) {\n                return this.fs.mkdir(FilesConst.TRASH_PATH).thenResolve(null);\n            }\n        });\n    }\n    \n    refresh() {\n        return Q().then(() => {\n            return this.tree.refreshDeep(true);\n        });\n    }\n}\n\nexport class FsManager {\n    \n    specialDirectory: privfs.fs.file.entry.SpecialDirectory;\n    sections: {[sectionId: string]: FsManagerEntry};\n    \n    constructor(public manager: privfs.fs.descriptor.Manager) {\n        this.specialDirectory = new privfs.fs.file.entry.SpecialDirectory(manager);\n        this.sections = {};\n    }\n    \n    addSection(section: mail.section.SectionService, session: mail.session.Session): void {\n        if (section == null || !section.hasFileModule()) {\n            return;\n        }\n        let collectionId = Notes2WindowController.getChannelId(session, section);\n        if (this.sections[collectionId] == null) {\n            this.sections[collectionId] = new FsManagerEntry(section);\n        }\n    }\n    \n    addSectionAndInit(section: mail.section.SectionService, session: mail.session.Session): Q.Promise<FsManagerEntry> {\n        if (section == null || !section.hasFileModule()) {\n            return Q(null);\n        }\n        let collectionId = Notes2WindowController.getChannelId(session, section);\n        let sec = this.sections[collectionId];\n        if (sec != null) {\n            return Q(null);\n        }\n        sec = this.sections[collectionId] = new FsManagerEntry(section);\n        return Q().then(() => {\n            return sec.section.getFileModule().getFileTree();\n        })\n        .then(ft => {\n            this.specialDirectory.directories.push(sec.section.getFileModule().fileSystem.root);\n            sec.setTree(ft);\n            return ft.refreshDeep(true);\n        })\n        .then(() => {\n            return sec.checkTrash();\n        })\n        .thenResolve(sec);\n    }\n    \n    addConversation(c2s: mail.section.Conv2Section, session: mail.session.Session): void {\n        if (c2s == null || !c2s.section || !c2s.section.hasFileModule()) {\n            return;\n        }\n        let collectionId = Notes2WindowController.getConversationId(session, c2s);\n        if (this.sections[collectionId] == null) {\n            this.sections[collectionId] = new FsManagerEntry(c2s.section);\n        }\n    }\n    \n    addConversationAndInit(c2s: mail.section.Conv2Section, session: mail.session.Session): Q.Promise<FsManagerEntry> {\n        if (c2s == null || !c2s.section || !c2s.section.hasFileModule()) {\n            return Q(null);\n        }\n        let collectionId = Notes2WindowController.getConversationId(session, c2s);\n\n        let sec = this.sections[collectionId];\n        if (sec != null) {\n            return Q(null);\n        }\n        sec = this.sections[collectionId] = new FsManagerEntry(c2s.section);\n        return Q().then(() => {\n            return sec.section.getFileModule().getFileTree();\n        })\n        .then(ft => {\n            this.specialDirectory.directories.push(sec.section.getFileModule().fileSystem.root);\n            sec.setTree(ft);\n            return ft.refreshDeep(true);\n        })\n        .then(() => {\n            return sec.checkTrash();\n        })\n        .thenResolve(sec);\n    }\n    \n    init(): Q.Promise<void> {\n        let sections = utils.Lang.getValues(this.sections);\n        return Q().then(() => {\n            return new privfs.fs.descriptor.DescriptorMultiGet(this.manager).perform(\n                sections.map(sec => sec.section.getFileModule().getFileSystemZ())\n            );\n        })\n        .then(() => {\n            sections.forEach(sec => {\n                this.specialDirectory.directories.push(sec.section.getFileModule().fileSystem.root);\n            });\n            return this.specialDirectory.refreshDeep(true);\n        })\n        .then(() => {\n            return Q.all(sections.map(sec => sec.section.getFileModule().getFileTree().then(ft => {\n                sec.setTree(ft);\n            })));\n        })\n        .then(() => {\n            return Q.all(utils.Lang.getValues(this.sections).map(x => x.checkTrash()));\n        })\n        .thenResolve(null);\n    }\n    \n    refresh() {\n        return Q().then(() => {\n            utils.Lang.getValues(this.sections).forEach(x => {\n                x.tree.processLastVersionEvents = false;\n            });\n            return this.specialDirectory.refreshDeep(true);\n        })\n        .fin(() => {\n            utils.Lang.getValues(this.sections).forEach(x => {\n                x.tree.sync();\n                x.tree.processLastVersionEvents = true;\n            });\n        })\n    }\n}\n\n@Dependencies([\"notes2filelist\", \"persons\", \"splitter\", \"extlist\", \"notification\", \"conv2list\", \"sectionlist\", \"sectionstabs\"])\nexport class Notes2WindowController extends window.base.BaseAppWindowController {\n    \n    static textsPrefix: string = \"plugin.notes2.window.notes2.\";\n    \n    static registerTexts(localeService: mail.LocaleService): void {\n        localeService.registerTexts(i18n, this.textsPrefix);\n    }\n    \n    @Inject identity: privfs.identity.Identity;\n    @Inject conv2Service: mail.section.Conv2Service;\n    @Inject collectionFactory: mail.CollectionFactory;\n    @Inject messagesCollection: utils.collection.BaseCollection<mail.SinkIndexEntry>;\n    @Inject client: privfs.core.Client;\n    @Inject sectionManager: mail.section.SectionManager;\n    @Inject personService: mail.person.PersonService;\n    \n    componentFactory: Notes2ComponentFactory;\n    personsComponent: component.persons.PersonsController;\n    verticalSplitter: component.splitter.SplitterController;\n    filesVerticalSplitter: component.splitter.SplitterController;\n    notifications: component.notification.NotificationController;\n    notes2Plugin: Notes2Plugin;\n    filesLists: {[id: string]: FilesListController};\n    remoteServers: {[hostHash: string]: component.remotehostlist.HostEntry};\n    activeFilesList: FilesListController;\n    filesBaseCollection: utils.collection.MergedCollection<FileEntryBase>;\n    localFilesBaseCollection: utils.collection.MutableCollection<FileEntryBase>;\n    localFS: LocalFS;\n    localFsInitialPathSetting: utils.Settings;\n    dockedEditor: window.base.BaseWindowController;\n    reusableOpener: ReusableOpenerEntry;\n    editorsId: number = 0;\n    reusableEditors: {[id: string]: ReusableOpenerEntry} = {};\n    myFileTreeManager: mail.filetree.nt.Tree;\n    channelsTrees: {[id: string]: mail.filetree.nt.Tree};\n    trees: {[rootRefId: string]: mail.filetree.nt.Tree};\n    elementToPreview: app.common.shelltypes.OpenableElement;\n    previewElement: app.common.shelltypes.OpenableElement|mail.filetree.nt.Directory;\n    directoryToPreview: mail.filetree.nt.Directory;\n    directoryModel: DirectoryPreviewModel;\n    previewLoadTid: NodeJS.Timer;\n    notificationId: number;\n    fsManager: FsManager;\n    sidebarOptions: component.sidebar.SidebarOptions;\n    sidebar: component.sidebar.SidebarController;\n    collections: { [key: string]: utils.collection.FilteredCollection<FileEntryBase> } = {};\n    searchCounts: { [hostHash: string]: SearchResults } = {};\n    searchCountFilterUpdater: FilesFilterUpdater;\n    isSearchOn: boolean = false;\n    sectionTooltip: component.sectiontooltip.SectionTooltipController;\n    disabledSection: component.disabledsection.DisabledSectionController;\n    loading: component.loading.LoadingController;\n    lastPreviewRequestEvent: PreviewRequestEvent;\n    currPreviewTrashedInfoModelStr: string = null;\n    pendingGetOrCreateFilesList: { [key: string]: Q.Promise<FilesListController> } = {};\n    sessionsByCollectionName: { [collectionName: string]: mail.session.Session} = {};\n    isHostLoaded: { [hostHash: string]: boolean } = {};\n    \n    \n    constructor(parentWindow: window.container.ContainerWindowController) {\n        super(parentWindow, __filename, __dirname, {\n            isPublic: false,\n            subs: {\n                \"splitter-vertical\": {defaultValue: 340},\n                \"left-panel-sections-splitter-proportional\": { defaultValue: JSON.stringify({handlePos:250,totalSize:1000}) },\n                \"left-panel-people-splitter\": {defaultValue: 500},\n                \"files-vertical-splitter\": {defaultValue: 500},\n                \"local-fs-initial-path\": {defaultValue: \"\"}\n            }\n        });\n        this.ipcMode = true;\n        this.notificationId = 0;\n        this.notes2Plugin = this.app.getComponent(\"notes2-plugin\");\n        this.setPluginViewAssets(\"notes2\");\n        this.openWindowOptions.fullscreen = true;\n        this.openWindowOptions.cssClass = \"app-window\";\n        this.openWindowOptions.title = this.i18n(\"plugin.notes2.window.notes2.title\");\n        this.filesLists = {};\n        this.channelsTrees = {};\n        this.trees = {};\n        this.ipcMode = true;\n        this.sectionTooltip = this.addComponent(\"sectiontooltip\", this.componentFactory.createComponent(\"sectiontooltip\", [this]));\n        this.enableTaskBadgeAutoUpdater();\n    }\n    \n    init(): Q.IWhenable<void> {\n        let localSession = this.app.sessionManager.getLocalSession();\n        // console.log(\"on notes2windowController init..\")\n        return this.app.mailClientApi.checkLoginCore().then(() => {\n            let tasksPlugin = this.app.getComponent(\"tasks-plugin\");\n            if (tasksPlugin) {\n                // console.log(\"notes2windowController check for projects ready...\")\n                return tasksPlugin.projectsReady;\n            }\n        }).then(() => {\n            // console.log(\"notes2windowController check for notes2 loadedDeferred...\")\n            return this.notes2Plugin.loadedDeferred.promise;\n        }).then(() => {\n            // console.log(\"notes2windowController tasks promise resolved\");\n            this.fsManager = new FsManager(this.client.descriptorManager);\n            this.notifications = this.addComponent(\"notifications\", this.componentFactory.createComponent(\"notification\", [this]));\n            this.filesBaseCollection = this.addComponent(\"filesBaseCollection\", new utils.collection.MergedCollection<FileEntryBase>());\n            this.filesBaseCollection.addCollection(this.collectionFactory.getAttachmentsCollectionByBaseCollection(\"all-messages\", this.messagesCollection));\n            this.localFilesBaseCollection = this.addComponent(\"localFilesBaseCollection\", new utils.collection.MutableCollection<FileEntryBase>());\n            \n            if (this.app.isElectronApp()) {\n                this.localFsInitialPathSetting = this.settings.create(\"local-fs-initial-path\");\n                LocalFS.staticConstructor(this.app);\n            }\n            \n            this.personsComponent = this.addComponent(\"personsComponent\", this.componentFactory.createComponent(\"persons\", [this]));\n            this.verticalSplitter = this.addComponent(\"verticalSplitter\", this.componentFactory.createComponent(\"splitter\", [this, this.settings.create(\"splitter-vertical\")]));\n            this.verticalSplitter.ipcMode = true;\n            this.filesVerticalSplitter = this.addComponent(\"filesVerticalSplitter\", this.componentFactory.createComponent(\"splitter\", [this, this.settings.create(\"files-vertical-splitter\")]));\n            this.disabledSection = this.addComponent(\"disabled-section\", this.componentFactory.createComponent(\"disabledsection\", [this, Types.section.NotificationModule.NOTES2]));\n            this.loading = this.addComponent(\"loading\", this.componentFactory.createComponent(\"loading\", [this]));\n            \n            this.filesVerticalSplitter.ipcMode = true;\n            this.notes2Plugin.filesSections[localSession.hostHash].forEach(x => {\n                this.fsManager.addSection(x, localSession);\n            });\n            this.registerChangeEvent(this.notes2Plugin.filesSections[localSession.hostHash].changeEvent, event => this.onFilesSectionChange(localSession, event));\n            return this.fsManager.init().then(() => {\n                return Q.all(utils.Lang.getValues(this.fsManager.sections).map(x => {\n                    this.finishFileTreePreparation(x, localSession.hostHash);\n                }));\n            });\n        })\n        .then(() => {\n            return Q.all([\n                this.app.mailClientApi.privmxRegistry.getIdentityProvider(),\n                this.sectionManager.isSectionsLimitReached()\n            ])\n        })\n        .then(res => {\n            let [identityProvider, isSectionsLimitReached] = res;\n\n            this.notes2Plugin.sectionManager.dumpFileSystems().fail(this.errorCallback);\n            let intervalId = setInterval(() => {\n                if (this.notes2Plugin.sectionManager) {\n                    this.notes2Plugin.sectionManager.dumpFileSystems().fail(this.errorCallback);\n                }\n            }, 5 * 60 * 1000);\n            this.notes2Plugin.onReset.promise.then(() => {\n                clearInterval(intervalId);\n            });\n            \n            \n            let priv = this.notes2Plugin.sectionManager.getMyPrivateSection();\n            let filteredRootsCollection = this.addComponent(\"filteredRootsCollection\", new utils.collection.FilteredCollection(this.notes2Plugin.files2Sections[localSession.hostHash], x => x != priv && x.isVisible() && x.hasAccess()));\n            \n            let customElements: component.customelementlist.CustomElement[] = [];\n            \n            if (priv != null) {\n                customElements.push(\n                    {\n                        id: FilesListController.MY_FILES,\n                        icon: {\n                            type: \"hashmail\",\n                            value: this.identity.hashmail\n                        },\n                        label: this.i18n(\"plugin.notes2.window.notes2.filter.my\"),\n                        private: true\n                    }\n                );\n            }\n            customElements.push(\n                {\n                    id: FilesListController.ALL_FILES,\n                    icon: {\n                        type: \"fa\",\n                        value: \"privmx-icon privmx-icon-notes2\",\n                    },\n                    label: this.i18n(\"plugin.notes2.window.notes2.filter.all\"),\n                    private: false\n                },\n                {\n                    id: FilesListController.TRASH_FILES,\n                    icon: {\n                        type: \"fa\",\n                        value: \"ico-bin\"\n                    },\n                    label: this.i18n(\"plugin.notes2.window.notes2.filter.trash\"),\n                    private: false\n                }\n            );\n            let customElementCollection = this.addComponent(\"cEleColl\", new utils.collection.MutableCollection<component.customelementlist.CustomElement>(customElements));\n            \n            \n            if (this.app.isElectronApp()) {\n                // let userName = (<any>this.app).getSystemUserName();\n                // let computerName: string;\n                // if (userName.length == 0) {\n                //     computerName = this.i18n(\"plugin.notes2.window.notes2.filter.local\");\n                // }\n                // else {\n                //     computerName = this.i18n(\"plugin.notes2.window.notes2.filter.local\") + \" (\" + userName + \")\";\n                // }\n                let computerName = this.i18n(\"plugin.notes2.window.notes2.filter.local\", (<any>this.app).getSystemLabel());\n                customElementCollection.addAt(2, {\n                    id: FilesListController.LOCAL_FILES,\n                    icon: {\n                        type: \"fa\",\n                        value: \"fa-desktop\"\n                    },\n                    label: computerName,\n                    private: false\n                });\n            }\n            let sidebarOptions: component.sidebar.SidebarOptions = {\n                sectionsLimitReached: isSectionsLimitReached,\n                customElementList: {\n                    baseCollection: customElementCollection,\n                    unreadProvider: ce => this.getCustomElementUnread(ce),\n                    elementsCountProvider: ce => this.getCustomElementElementsCount(ce),\n                    searchCountProvider: ce => this.getCustomElementSearchCount(ce),\n                    withSpinnerProvider: ce => this.getCustomElementWithSpinner(ce),\n                    searchAllSearchedProvider: null,\n                },\n                conv2List: {\n                    searchCountProvider: c2s => this.getConv2ListSearchCount(localSession, c2s),\n                    searchAllSearchedProvider: null,\n                    unreadProvider: c2s => this.getConversationUnread(localSession, c2s),\n                    elementsCountProvider: c2s => this.getConv2ElementsCount(localSession, c2s),\n                    withSpinnerProvider: c2s => this.getConv2WithSpinner(localSession, c2s),\n                    sorter: (a, b) => {\n                        return b.getFileMessageLastDate() - a.getFileMessageLastDate();\n                    },\n                },\n                sectionList: {\n                    baseCollection: filteredRootsCollection,\n                    unreadProvider: section => this.getSectionUnread(localSession, section),\n                    elementsCountProvider: section => this.getSectionElementsCount(localSession, section),\n                    searchCountProvider: section => this.getSectionSearchCount(localSession, section),\n                    withSpinnerProvider: section => this.getSectionWithSpinner(localSession, section),\n                    searchAllSearchedProvider: null,\n                    moduleName: Types.section.NotificationModule.NOTES2,\n                    sorter: (a, b) => {\n                        let res = b.getFileMessageLastDate() - a.getFileMessageLastDate();\n                        return res == 0 ? component.sectionlist.SectionListController.nameSectionSorter(a, b) : res;\n                    },\n                },\n                customSectionList: {\n                    baseCollection: null,\n                    unreadProvider: null,\n                    elementsCountProvider: null,\n                    searchCountProvider: null,\n                    searchAllSearchedProvider: null,\n                    moduleName: Types.section.NotificationModule.NOTES2,\n                    sorter: null,\n                },\n                remoteHostList: {\n                    elementCountsAggregationStrategy: component.remotehostlist.ElementCountsAggregationStrategy.SECTIONS | component.remotehostlist.ElementCountsAggregationStrategy.CONVERSATIONS,\n                },\n                \n                conv2ListEnabled: true,\n                conv2Splitter: this.settings.create(\"left-panel-sections-splitter-proportional\"),\n                sidebarButtons: []\n            };\n            if (identityProvider.getRights().indexOf(\"normal\") != -1) {\n                sidebarOptions.sidebarButtons.push(\n                    {\n                        id: \"new-section\",\n                        label: this.i18n(\"plugin.notes2.window.notes2.sidebar.newsection\"),\n                        title: this.i18n(\"plugin.notes2.window.notes2.sidebar.newsection\"),\n                        icon: \"ico-comment\",\n                        windowOpener: true,\n                        onSectionList: true\n                    }\n                );\n            }\n            this.sidebarOptions = sidebarOptions;\n            this.sidebar = this.addComponent(\"sidebar\", this.componentFactory.createComponent(\"sidebar\", [this, sidebarOptions]));\n            this.sidebar.addEventListener(\"elementbeforeactivate\", this.onBeforeActivateSidebarElement.bind(this));\n            this.sidebar.addEventListener(\"sidebarbuttonaction\", this.onSidebarButtonAction.bind(this));\n            \n            this.sidebar.usersListTooltip.getContent = (sectionId: string): string => {\n                return this.app.getUsersListTooltipContent(this.app.sessionManager.getLocalSession(), sectionId);\n            }\n\n            this.app.addEventListener<Types.event.SectionsLimitReachedEvent>(\"sectionsLimitReached\", event => {\n                this.sidebar.onSectionsLimitReached(event.reached);\n            });\n\n            this.sectionManager.sectionAccessManager.eventDispatcher.addEventListener<Types.event.SectionStateChangedEvent>(\"section-state-changed\", event => {\n                if (this.activeFilesList && this.activeFilesList.filesInfo && this.activeFilesList.filesInfo.type == FilesListType.CHANNEL && this.activeFilesList.filesInfo.section.getId() == event.sectionId) {\n                    Q().then(() => {\n                        return this.sectionManager.load();\n                    })\n                    .then(() => {\n                        let section = this.sectionManager.getSection(event.sectionId);\n                        let moduleEnabled = section.isChatModuleEnabled();\n                        if (! moduleEnabled) {\n                            this.openDisabledSectionView(section);\n                        }\n                        else {\n                            this.openChannel(event.sectionId);\n                        }\n                    })\n                }\n            }, \"chat\");\n            \n            this.app.addEventListener(\"reopen-section\", (event: component.disabledsection.ReopenSectionEvent) => {\n                this.openChannel(event.element.getId());\n            });\n            \n            this.app.addEventListener(\"focusChanged\", (event) => {\n                let windowId = (<any>event).windowId;\n                this.notes2Plugin.activeWindowFocused = windowId == \"main-window\" || windowId == \"focus-restored\" ? this.parent.activeModel.get() : windowId;\n                if (windowId == \"notes2\" || (windowId == \"main-window\" && this.parent.activeModel.get() == \"notes2\") ) {\n                    setTimeout(() => {\n                        this.callViewMethod(\"grabFocus\", true);\n                    }, 200);\n                }\n            });\n            this.app.addEventListener(\"focusLost\", (event) => {\n                this.notes2Plugin.activeWindowFocused = null;\n            });\n\n\n            this.app.addEventListener(\"onToggleMaximize-notify\", () => {\n                setTimeout(() => {\n                    this.callViewMethod(\"grabFocus\", false);\n                }, 10);\n            });\n            this.app.addEventListener(\"binded-enter-pressed\", () => {\n                if (this.parent.activeModel.get() == \"notes2\") {\n                    this.activeFilesList.openExternalFile();\n                }\n            });\n            this.app.addEventListener<UpdateNotes2SidebarSpinnersEvent>(\"update-notes2-sidebar-spinners\", e => {\n                this.sidebar.updateSidebarSpinners({\n                    conv2SectionId: e.conv2SectionId,\n                    customElementId: e.customElementId,\n                    sectionId: e.sectionId,\n                    hosts: e.hostHash ? [this.app.sessionManager.getSessionByHostHash(e.hostHash).host] : Object.values(this.app.sessionManager.sessions).map(x => x.host),\n                });\n            }, \"notes2\");\n\n            this.app.addEventListener(\"requestopenfiles\", (event: RequestOpenFilesEvent) => {\n                let hashmails = event.hashmails.filter(x => this.personService.getPerson(x) != null && this.personService.getPerson(x).contact != null);\n                if (hashmails.length == 0) {\n                    this.alert(this.i18n(\"plugin.notes2.window.notes2.cantCreateConversationWithoutUsers\"));\n                    return;\n                }\n                if (event.showContactsWindow) {\n                    this.openNewFiles(hashmails);\n                }\n                else {\n                    this.openConversationViewFromHashmails(hashmails);\n                }\n            }, \"chat\");\n            \n            this.createCollections();\n            this.searchCountFilterUpdater = new FilesFilterUpdater();\n            this.searchCountFilterUpdater.onUpdate = this.updateSearchCounts.bind(this);\n            this.registerChangeEvent(this.app.searchModel.changeEvent, this.onFilterFiles.bind(this), \"multi\");\n            if (this.app.searchModel.data.visible && this.app.searchModel.data.value != \"\") {\n                this.onFilterFiles();\n            }\n            this.app.addEventListener<UpdateFilesSectionBadgeEvent>(\"update-files-section-badge\", event => {\n                if (event.sectionId == FilesListController.TRASH_FILES || event.sectionId == FilesListController.ALL_FILES) {\n                    let idx = this.sidebarOptions.customElementList.baseCollection.indexOfBy(el => el.id == event.sectionId);\n                    if (idx >= 0) {\n                        this.sidebarOptions.customElementList.baseCollection.triggerUpdateAt(idx);\n                    }\n                }\n                else if (!event.hostHash || event.hostHash == localSession.hostHash) {\n                    let idx = this.sidebar.sectionList.sectionsCollection.indexOfBy(el => el.getId() == event.sectionId);\n                    if (idx >= 0) {\n                        this.sidebar.sectionList.sectionsCollection.triggerBaseUpdateAt(idx);\n                    }\n                    else {\n                        let idx = this.sidebar.conv2List.sortedCollection.indexOfBy(el => el.section && el.section.getId() == event.sectionId);\n                        if (idx >= 0) {\n                            this.sidebar.conv2List.sortedCollection.triggerBaseUpdateElement(this.sidebar.conv2List.sortedCollection.get(idx));\n                        }\n                    }\n                }\n                else {\n                    let remoteSectionsList = this.sidebar.remoteSectionsLists[event.hostHash];\n                    let remoteConversationList = this.sidebar.remoteConv2Lists[event.hostHash];\n                    let idx = remoteSectionsList ? remoteSectionsList.sectionsCollection.indexOfBy(el => el.getId() == event.sectionId) : -1;\n                    if (idx >= 0) {\n                        remoteSectionsList.sectionsCollection.triggerBaseUpdateAt(idx);\n                    }\n                    else {\n                        let idx = remoteConversationList ? remoteConversationList.sortedCollection.indexOfBy(el => el.section && el.section.getId() == event.sectionId) : -1;\n                        if (idx >= 0) {\n                            remoteConversationList.sortedCollection.triggerBaseUpdateElement(remoteConversationList.sortedCollection.get(idx));\n                        }\n                    }\n                    let session = this.app.sessionManager.getSessionByHostHash(event.hostHash);\n                    this.updateSidebarHostElement(session);\n                }\n            });\n            this.app.addEventListener<UpdateNotes2SettingEvent>(\"update-notes2-setting\", event => {\n                if (event.setting == ViewSettings.SHOW_FILE_PREVIEW && this.lastPreviewRequestEvent) {\n                    this.processPreviewRequestEvent(this.lastPreviewRequestEvent).fin(() => {\n                        this.callViewMethod(\"updateSetting\", event.setting, event.value == 1);\n                    });\n                }\n                else {\n                    this.callViewMethod(\"updateSetting\", event.setting, event.value == 1);\n                }\n                if (event.setting == ViewSettings.SHOW_FILE_PREVIEW) {\n                    if (event.value == 1) {\n                        if (this.reusableOpener && this.reusableOpener.win && (\"afterShowIframe\" in this.reusableOpener.win)) {\n                            (<any>this.reusableOpener.win).afterShowIframe();\n                        }\n                    }\n                    else {\n                        if (this.dockedEditor && (\"afterIframeHide\" in this.dockedEditor)) {\n                            (<any>this.dockedEditor).afterIframeHide();\n                        }\n                    }\n                }\n            });\n            this.app.dispatchEvent({type: \"focusChanged\",windowId: \"notes2\"});\n        });\n    }\n    \n    async openDefaultSection(): Promise<void> {\n        let firstLoginSectionId: string;\n        let handled: boolean = false;\n        let priv = this.notes2Plugin.sectionManager.getMyPrivateSection();\n        if (this.notes2Plugin.isFirstLogin()) {\n            this.notes2Plugin.setFirstLoginDone();\n            this.notes2Plugin.sectionManager.sectionsCollection.list.forEach(section => {\n                if (section.secured && section.secured.extraOptions && section.secured.extraOptions.openOnFirstLogin) {\n                    firstLoginSectionId = section.getId();\n                    return;\n                }\n            })\n            if (firstLoginSectionId && this.notes2Plugin.sectionManager.getSection(firstLoginSectionId)) {\n                await this.openChannel(firstLoginSectionId);\n                this.sidebar.setActive({\n                    type: component.sidebar.SidebarElementType.SECTION,\n                    section: this.notes2Plugin.sectionManager.getSection(firstLoginSectionId),\n                }, true);\n                this.activateFiles(firstLoginSectionId);\n                this.activeFilesList.loadFilePreview();\n                handled = true;\n            }\n        }\n        if (handled) {\n            return;\n        }\n        if (priv) {\n            await this.openMy()\n        }\n        else {\n            await this.openAll();\n        }\n    }\n    \n    openNewFiles(hashmails: string[] = []): void {\n        this.app.ioc.create(window.selectcontacts.SelectContactsWindowController, [this, {\n            message: this.i18n(\"plugin.notes2.window.notes2.selectContacts.header.newChat.text\"),\n            editable: true,\n            hashmails: hashmails,\n            fromServerUsers: true\n        }])\n        .then(win => {\n            let singletonSuffix = !hashmails || hashmails.length == 0 || !this.activeFilesList ? \"new-conv2\" : this.activeFilesList.fileListId;\n            this.app.openSingletonWindow(\"selectContacts-\" + singletonSuffix , win);\n            win.getPromise().then(hashmails => {\n                this.openConversationViewFromHashmails(hashmails);\n            });\n        });\n    }\n    \n\n    onFilesSectionChange(session: mail.session.Session, event: Types.utils.collection.CollectionEvent<mail.section.SectionService>) {\n        if (event.element != null) {\n            if (event.element.hasFileModule()) {\n                this.fsManager.addSectionAndInit(event.element, session).then(sec => {\n                    if (sec != null) {\n                        return this.finishFileTreePreparation(sec, session.hostHash);\n                    }\n                })\n                .fail(this.errorCallback);\n            }\n            if (event.type == \"remove\") {\n                if (this.activeFilesList && this.activeFilesList.destination == event.element.getId()) {\n                    this.clearActive();\n                }\n            }\n        }\n    }\n    \n    finishFileTreePreparation(fsMgrEntry: FsManagerEntry, hostHash: string, isConversation?: boolean): Q.Promise<void> {\n        return Q().then(() => {\n            let ntree = fsMgrEntry.tree;\n            let section = fsMgrEntry.section;\n            let manager = this.trees[ntree.root.ref.id];\n            if (manager == null) {\n                this.trees[ntree.root.ref.id] = manager = this.addComponent(\"fileTreeManager/\" + ntree.root.ref.id, ntree);\n                this.filesBaseCollection.addCollection(ntree.collection);\n            }\n            if (section == this.notes2Plugin.sectionManager.getMyPrivateSection()) {\n                this.myFileTreeManager = manager;\n            }\n            let collectionId: string;\n            let session = this.app.sessionManager.getSessionByHostHash(hostHash);\n            if (isConversation) {\n                let conversation = session ? session.conv2Service.collection.find(x => x.section == section) : null;\n                if (!conversation) {\n                    return;\n                }\n                collectionId = Notes2WindowController.getConversationId(session, conversation);\n                return conversation.prepareFilesCollection().then(() => {\n                    if (conversation.section) {\n                        this.channelsTrees[collectionId] = manager;\n                        this.sessionsByCollectionName[collectionId] = session;\n                        if (this.collections[collectionId]) {\n                            this.collections[collectionId].refresh();\n                        }\n                    }\n                });\n            }\n            else {\n                collectionId = Notes2WindowController.getChannelId(session, section);\n                this.channelsTrees[collectionId] = manager;\n                this.sessionsByCollectionName[collectionId] = session;\n                if (this.collections[collectionId]) {\n                    this.collections[collectionId].refresh();\n                }\n            }\n        });\n    }\n    \n    getModel(): Model {\n        return {\n            activeId: this.getActiveId(),\n            hashmail: this.identity.hashmail,\n            iframeId: this.dockedEditor && this.reusableOpener ? this.reusableOpener.iframeId : null,\n            iframeLoad: this.dockedEditor && this.reusableOpener ? this.reusableOpener.load : null,\n            directory: this.directoryModel,\n            showLocalFS: this.app.isElectronApp(),\n            showFilePreview: this.showFilePreview(),\n        };\n    }\n    \n    getActiveId(): string {\n        return this.activeFilesList ? this.activeFilesList.fileListId : null;\n    }\n    \n    showFilePreview(): boolean {\n        let fileListId = this.activeFilesList ? this.activeFilesList.fileListId : null;\n        return this.notes2Plugin.getSetting(this.app.sessionManager.getLocalSession(), ViewSettings.SHOW_FILE_PREVIEW, fileListId, ViewContext.Notes2Window) == 1;\n    }\n    \n    //===========================\n    //       VIEW EVENTS\n    //===========================\n    \n    onViewLoad(): void {\n        let activeId = this.getActiveId();\n        if (activeId) {\n            this.activateFiles(this.getActiveId());\n        }\n        if (this.dockedEditor && this.reusableOpener) {\n            this.callViewMethod(\"showIframe\", this.reusableOpener.iframeId, this.reusableOpener.load);\n        }\n        else if (this.directoryModel) {\n            this.callViewMethod(\"showDirectoryPreview\", this.directoryModel);\n        }\n        this.callViewMethod(\"changeIsSearchOn\", this.isSearchOn);\n    }\n    \n    onViewActivatePreview(): void {\n        if (this.dockedEditor) {\n            this.dockedEditor.onNwinFocus();\n        }\n    }\n    \n    onViewDragDrop(fileHandle: Types.app.FileHandle[]) {\n        if (this.activeFilesList.filesInfo.type == FilesListType.CONVERSATION) {\n            let conversation = this.activeFilesList.filesInfo.conversation;\n            if (conversation.hasDeletedUserOnly()) {\n                return;\n            }\n        }\n        this.activeFilesList.processDragDrop(fileHandle);\n    }\n    \n    onViewRefresh(): void {\n        if (this.activeFilesList) {\n            this.activeFilesList.refreshTree(undefined, true);\n        }\n    }\n    \n    //===========================\n    //          MISC\n    //===========================\n    \n    reloadAll(): Q.Promise<void> {\n        return this.fsManager.refresh();\n    }\n    \n    applyHistoryState(processed: boolean, state: string) {\n        const context = this.contextHistory.getCurrent();\n        let oldActive = this.activeFilesList;\n        let handled = false;\n\n        if (context) {              \n            if (this.app.switchModuleWithContext() || state) {\n                if (context.getType() == \"section\") {\n                    let contextSection = this.notes2Plugin.sectionManager.getSection(context.getSectionIdFromContextId());\n                    if (contextSection && contextSection.isFileModuleEnabled()) {\n                        this.openChannel(contextSection.getId());\n                        handled = true;\n                    }\n                }\n                else if (context.getType() == \"conversation\") {\n                    this.openConversationView(context.getContextId());\n                    handled = true;\n                }\n                else if (context.getType() == \"custom\") {\n                    if (context.getContextId() == FilesListController.MY_FILES) {\n                        this.openMy();\n                        handled = true;\n                    }\n                    else\n                    if (context.getContextId() == FilesListController.LOCAL_FILES) {\n                        this.openLocal();\n                        handled = true;\n                    }\n                    else\n                    if (context.getContextId() == FilesListController.ALL_FILES) {\n                        this.openAll();\n                        handled = true;\n                    }\n                    else\n                    if (context.getContextId() == FilesListController.TRASH_FILES) {\n                        this.openTrash();\n                        handled = true;\n                    }\n                }\n            }\n            this.app.resetModuleSwitchingModifier();\n\n            if (oldActive != this.activeFilesList) {\n                if (oldActive) {\n                    oldActive.deactivate();\n                }\n                if (this.activeFilesList) {\n                    this.activeFilesList.activate();\n                }\n            }\n        }\n        if (handled) {\n            return;\n        }\n        this.openDefaultSection();    \n    }\n    \n    onChildTabSwitch(child: window.base.BaseWindowController, shiftKey: boolean, ctrlKey: boolean): void {\n        super.onChildTabSwitch(child, shiftKey, ctrlKey);\n        if (!ctrlKey) {\n            this.focusMe();\n            this.callViewMethod(\"switchPanelFromPreview\", shiftKey);\n        }\n    }\n\n    onSidebarButtonAction(event: component.sidebar.SidebarButtonActionEvent) {\n        if (event.sidebarButton.id == \"new-section\") {\n            this.openSectionsWindow();\n        }\n    }\n    \n    openSectionsWindow(): void {\n        // this.app.openSingletonWindow(\"sections\", window.sections.SectionsWindowController);\n        this.app.openNewSectionDialogFromSidebar();\n    }\n\n    //===========================\n    //       FILES VIEWS\n    //===========================\n    \n    addFilesListComponent(sessionInfo: SessionInfo, id: string, destination: string, collection: utils.collection.BaseCollection<FileEntryBase>,\n        filesInfo: FilesInfo, editable: boolean, onRefresh: () => Q.Promise<void>): Q.Promise<FilesListController> {\n        let filesList = this.filesLists[id] = this.addComponent(id, this.componentFactory.createComponent(\"notes2filelist\", [this]));\n        let localFS = id == FilesListController.LOCAL_FILES ? this.localFS : null;\n        let session = sessionInfo.sessionType == \"local\" ? this.app.sessionManager.getLocalSession() : this.app.sessionManager.getSessionByHostHash(sessionInfo.hostHash);\n        return Q().then(() => {\n            return this.app.sessionManager.init(session.hostHash)\n        })\n        .then(() => {\n            return filesList.setSession(session);\n        })\n        .then(() => {\n            return filesList.setComponentData(id, destination, collection, filesInfo, editable, onRefresh, localFS);\n        })\n        .then(() => {\n            filesList.addEventListener<RemoveFileEvent>(\"fileremoved\", event => {\n                event.result = this.closeDockedEditor().thenResolve(null);\n            });\n            filesList.addEventListener<PreviewRequestEvent>(\"previewrequest\", event => {\n                this.lastPreviewRequestEvent = event;\n                if (!this.showFilePreview()) {\n                    return;\n                }\n                this.processPreviewRequestEvent(event);\n            });\n            return filesList;\n    \n        })\n    }\n    \n    singletonGetOrCreateFilesList(key: string, creatorFunc: () => Q.Promise<FilesListController>): Q.Promise<FilesListController> {\n        if (!(key in this.pendingGetOrCreateFilesList)) {\n            this.pendingGetOrCreateFilesList[key] = creatorFunc();\n        }\n        return this.pendingGetOrCreateFilesList[key];\n    }\n    \n    processPreviewRequestEvent(event: PreviewRequestEvent): Q.Promise<void> {\n        let session = this.app.sessionManager.getSessionByHostHash(event.hostHash);\n        if (event.elementType == \"file\") {\n            return this.loadFilePreview(session, event.openableElement);\n        }\n        else if (event.elementType == \"directory\") {\n            return this.loadDirectoryPreview(session, event.directory);\n        }\n        else if (event.elementType == \"clear\") {\n            return this.clearPreview();\n        }\n        else if (event.elementType == \"multi\") {\n            return this.clearPreview(event.selectedCount);\n        }\n        return Q();\n    }\n    \n    getOrCreateMy(): Q.Promise<FilesListController> {\n        return Q().then(() => {\n            let id = FilesListController.MY_FILES;\n            if (!(id in this.filesLists)) {\n                let tree = this.myFileTreeManager;\n                let collection = this.getOrCreateCollectionMy();\n                return this.addFilesListComponent({sessionType: \"local\"}, id, id, collection, {\n                    type: FilesListType.OTHER,\n                    conversation: null,\n                    section: this.notes2Plugin.sectionManager.getMyPrivateSection()\n                }, true, () => {\n                    return tree.refreshDeep(true);\n                })\n                .then(() => {\n                    return this.filesLists[id];\n                })\n            }\n            return this.filesLists[id];\n        })\n    }\n    \n    getOrCreateCollectionMy(): utils.collection.FilteredCollection<FileEntryBase> {\n        if (this.collections[FilesListController.MY_FILES]) {\n            return this.collections[FilesListController.MY_FILES];\n        }\n        let tree = this.myFileTreeManager;\n        this.sessionsByCollectionName[FilesListController.MY_FILES] = this.app.sessionManager.getLocalSession();\n        let collection = this.collections[FilesListController.MY_FILES] = new utils.collection.FilteredCollection(this.filesBaseCollection, x => {\n            return Notes2Utils.isFsFileEntry(x) && x.tree == tree && x.path.indexOf(FilesConst.TRASH_PATH) == -1 && !mail.thumbs.ThumbsManager.isThumb(x.path);\n        });\n        collection.changeEvent.add(() => {\n            let index = this.sidebar.customElementList.customElementsCollection.indexOfBy(x => x.id == FilesListController.MY_FILES);\n            if (index != -1) {\n                this.sidebar.customElementList.customElementsCollection.triggerUpdateAt(index);\n            }\n        }, \"multi\");\n        return collection;\n    }\n    \n    openMy(): Q.Promise<void> {\n        let id = FilesListController.MY_FILES;\n        if (this.getActiveId() == id) {\n            return Q();\n        }\n        return Q().then(() => {\n            return this.singletonGetOrCreateFilesList(id, () => this.getOrCreateMy());\n        })\n        .then(my => {\n            const context = app.common.Context.create({\n                moduleName: Types.section.NotificationModule.NOTES2,\n                contextType: \"custom\",\n                contextId: id,\n                hostHash: this.app.sessionManager.getLocalSession().hostHash\n            });\n\n            this.contextHistory.append(context);\n            this.activeFilesList = my;\n            this.sidebar.setActive({\n                type: component.sidebar.SidebarElementType.CUSTOM_ELEMENT,\n                customElement: this.sidebar.customElementList.customElementsCollection.find(x => x.id == id)\n            }, false);\n            this.activateFiles(id);\n            this.activeFilesList.loadFilePreview();\n    \n        })\n    }\n    \n    getOrCreateAll(): Q.Promise<FilesListController> {\n        let id = FilesListController.ALL_FILES;\n        const context = app.common.Context.create({\n            moduleName: Types.section.NotificationModule.NOTES2,\n            contextType: \"custom\",\n            contextId: id,\n            hostHash: this.app.sessionManager.getLocalSession().hostHash\n        });\n\n        return Q().then(() => {\n            if (!(id in this.filesLists)) {\n                let collection = this.getOrCreateCollectionAll();\n                return this.addFilesListComponent({sessionType: \"local\"}, id, id, collection, {\n                    type: FilesListType.OTHER,\n                    conversation: null,\n                    section: this.notes2Plugin.sectionManager.getMyPrivateSection()\n                }, true, () => {\n                    return this.reloadAll();\n                })\n                .then(() => {\n                    return this.filesLists[id];\n                })\n            }\n            return this.filesLists[id];\n        })\n    }\n    \n    getOrCreateCollectionAll(): utils.collection.FilteredCollection<FileEntryBase> {\n        if (this.collections[FilesListController.ALL_FILES]) {\n            return this.collections[FilesListController.ALL_FILES];\n        }\n        this.sessionsByCollectionName[FilesListController.ALL_FILES] = this.app.sessionManager.getLocalSession();\n        let collection = this.collections[FilesListController.ALL_FILES] = new utils.collection.FilteredCollection(this.filesBaseCollection, (x: Entry|Types.mail.AttachmentEntry) => {\n            return Notes2Utils.isAttachmentEntry(x) || (x.isFile() && x.path.indexOf(FilesConst.TRASH_PATH) == -1) && !mail.thumbs.ThumbsManager.isThumb(x.path) && this.isLocalEntry(x);\n        });\n        collection.changeEvent.add(() => {\n            let index = this.sidebar.customElementList.customElementsCollection.indexOfBy(x => x.id == FilesListController.ALL_FILES);\n            if (index != -1) {\n                this.sidebar.customElementList.customElementsCollection.triggerUpdateAt(index);\n            }\n        }, \"multi\");\n        return collection;\n    }\n    \n    openAll(): Q.Promise<void> {\n        let id = FilesListController.ALL_FILES;\n        if (this.getActiveId() == id) {\n            return Q();\n        }\n        const context = app.common.Context.create({\n            moduleName: Types.section.NotificationModule.NOTES2,\n            contextType: \"custom\",\n            contextId: id,\n            hostHash: this.app.sessionManager.getLocalSession().hostHash\n        });\n\n        return Q().then(() => {\n            return this.singletonGetOrCreateFilesList(id, () => this.getOrCreateAll());\n        })\n        .then(list => {\n            this.activeFilesList = list;\n            this.sidebar.setActive({\n                type: component.sidebar.SidebarElementType.CUSTOM_ELEMENT,\n                customElement: this.sidebar.customElementList.customElementsCollection.find(x => x.id == id)\n            }, false);\n            this.activateFiles(id);\n            this.activeFilesList.loadFilePreview();\n        })\n    }\n    \n    getOrCreateLocal(): Q.Promise<FilesListController> {\n        let id = FilesListController.LOCAL_FILES;\n        const context = app.common.Context.create({\n            moduleName: Types.section.NotificationModule.NOTES2,\n            contextType: \"custom\",\n            contextId: id,\n            hostHash: this.app.sessionManager.getLocalSession().hostHash\n        });\n\n\n        return Q().then(() => {\n            if (!(id in this.filesLists)) {\n                let collection = this.localFilesBaseCollection;\n                return this.addFilesListComponent({sessionType: \"local\"}, id, id, collection, {\n                    type: FilesListType.OTHER,\n                    conversation: null,\n                    section: null\n                }, true, () => {\n                    return this.reloadAll();\n                })\n                .then(() => {\n                    return this.filesLists[id];\n                })\n            }\n            return this.filesLists[id];\n        })\n    }\n    \n    openLocal(): Q.Promise<void> {\n        let id = FilesListController.LOCAL_FILES;\n        if (this.getActiveId() == id) {\n            return Q();\n        }\n        const context = app.common.Context.create({\n            moduleName: Types.section.NotificationModule.NOTES2,\n            contextType: \"custom\",\n            contextId: id,\n            hostHash: this.app.sessionManager.getLocalSession().hostHash\n        });\n\n\n        return Q().then(() => {\n            return this.singletonGetOrCreateFilesList(id, () => this.getOrCreateLocal());\n        })\n        .then(list => {\n            this.activeFilesList = list;\n            this.sidebar.setActive({\n                type: component.sidebar.SidebarElementType.CUSTOM_ELEMENT,\n                customElement: this.sidebar.customElementList.customElementsCollection.find(x => x.id == id)\n            }, false);\n            this.activateFiles(id);\n            this.activeFilesList.loadFilePreview();\n        })\n    }\n    \n    getOrCreateChannel(id: string, sectionId: string, section: mail.section.SectionService): Q.Promise<FilesListController> {\n        let collectionId = Notes2WindowController.getChannelId(this.app.sessionManager.getLocalSession(), section);\n        return Q().then(() => {\n            if (!(id in this.filesLists)) {\n                let collection = this.getOrCreateCollectionChannel(section);\n                return this.addFilesListComponent({sessionType: \"local\"}, id, sectionId, collection, {\n                    type: FilesListType.CHANNEL,\n                    conversation: null,\n                    section: section\n                }, this.channelsTrees[collectionId] != null, () => {\n                    return this.channelsTrees[collectionId] ? this.channelsTrees[collectionId].refreshDeep(true) : Q();\n                })\n                .then(() => {\n                    return section.getChatSinkIndex().then(() => {\n                        section.getChatModule().filesMessagesCollection.changeEvent.add(() => {\n                            this.sidebar.sectionList.sortedCollection.triggerBaseUpdateElement(section);\n                        }, \"multi\");\n                    })\n                    .then(() => {\n                        return this.filesLists[id];\n                    })\n  \n                })\n            }\n            return this.filesLists[id];\n        })\n        .then(() => {\n            return this.filesLists[id];\n        })\n    }\n    \n    getOrCreateCollectionChannel(section: mail.section.SectionService): utils.collection.FilteredCollection<FileEntryBase> {\n        let collectionId = Notes2WindowController.getChannelId(this.app.sessionManager.getLocalSession(), section);\n        if (this.collections[collectionId]) {\n            return this.collections[collectionId];\n        }\n        let sink = section.isChatModuleEnabled() ? section.getChatSink() : null;\n        let sinkId = sink ? sink.id : null;\n        this.sessionsByCollectionName[collectionId] = this.app.sessionManager.getLocalSession();\n        let collection = this.collections[collectionId] = new utils.collection.FilteredCollection(this.filesBaseCollection, (x: Entry|Types.mail.AttachmentEntry) => {\n            if (Notes2Utils.isFsFileEntry(x)) {\n                return x.tree == this.channelsTrees[collectionId] && x.path.indexOf(FilesConst.TRASH_PATH) == -1 && !mail.thumbs.ThumbsManager.isThumb(x.path);\n            }\n            return x.entry.index.sink.id == sinkId;\n        });\n        collection.changeEvent.add(() => {\n            this.sidebar.sectionList.sortedCollection.triggerBaseUpdateElement(section);\n        }, \"multi\");\n        return collection;\n    }\n    \n    openChannel(sectionId: string): Q.Promise<void> {\n        let section = this.notes2Plugin.sectionManager.getSection(sectionId);\n        let filesId = Notes2WindowController.getChannelId(this.app.sessionManager.getLocalSession(), section);\n\n        const context = app.common.Context.create({\n            moduleName: Types.section.NotificationModule.NOTES2,\n            contextType: \"section\",\n            contextId: \"section:\" + sectionId,\n            hostHash: this.app.sessionManager.getLocalSession().hostHash\n        });\n\n        this.contextHistory.append(context);\n        if (this.getActiveId() == filesId) {\n            this.sidebar.setActive({\n                type: component.sidebar.SidebarElementType.SECTION,\n                section: section\n            }, false);\n            this.callViewMethod(\"toggleDisabledSection\", !section.isFileModuleEnabled());\n            if (filesId) {\n                this.callViewMethod(\"hideLoading\");\n            }\n            return Q();\n        }\n\n        if (section == null) {\n            return Q();\n        }\n        this.notes2Plugin.activeSinkId = section.getChatSink().id;\n        this.notes2Plugin.activeSinkHostHash = this.app.sessionManager.getLocalSession().hostHash;\n        if (! section.isFileModuleEnabled()) {\n            this.openDisabledSectionView(section);\n            return Q();\n        }\n        return Q().then(() => {\n            return this.singletonGetOrCreateFilesList(filesId, () => this.getOrCreateChannel(filesId, sectionId, section));\n        })\n        .then(list => {\n            this.activeFilesList = list;\n            this.notes2Plugin.activeFilesList = this.activeFilesList;\n            this.sidebar.setActive({\n                type: component.sidebar.SidebarElementType.SECTION,\n                section: section\n            }, false);\n            this.activateFiles(filesId);\n            this.activeFilesList.loadFilePreview();\n        });\n    }\n    \n    openDisabledSectionView(section: mail.section.SectionService) {\n        this.disabledSection.setSection(section);\n        this.sidebar.setActive({\n            type: component.sidebar.SidebarElementType.SECTION,\n            section: section\n        }, false);\n        this.callViewMethod(\"toggleDisabledSection\", true);\n    }\n    \n    getOrCreateTrash(): Q.Promise<FilesListController> {\n        let id = FilesListController.TRASH_FILES;\n        return Q().then(() => {\n            if (!(id in this.filesLists)) {\n                let collection = this.getOrCreateCollectionTrash();\n                return this.addFilesListComponent({sessionType: \"local\"}, id, id, collection, {\n                    type: FilesListType.OTHER,\n                    conversation: null,\n                    section: null\n                }, true, () => {\n                    return this.reloadAll();\n                })\n                .then(() => {\n                    return this.filesLists[id];\n                })\n            }\n            return this.filesLists[id];\n    \n        })\n    }\n    \n    getOrCreateCollectionTrash(): utils.collection.FilteredCollection<FileEntryBase> {\n        if (this.collections[FilesListController.TRASH_FILES]) {\n            return this.collections[FilesListController.TRASH_FILES];\n        }\n        this.sessionsByCollectionName[FilesListController.TRASH_FILES] = this.app.sessionManager.getLocalSession();\n        let collection = this.collections[FilesListController.TRASH_FILES] = new utils.collection.FilteredCollection(this.filesBaseCollection, x => {\n            return Notes2Utils.isFsFileEntry(x) && x.path.indexOf(FilesConst.TRASH_PATH + \"/\") == 0 && !mail.thumbs.ThumbsManager.isThumb(x.path) && this.isLocalEntry(x);\n        });\n        collection.changeEvent.add(() => {\n            let index = this.sidebar.customElementList.customElementsCollection.indexOfBy(x => x.id == FilesListController.TRASH_FILES);\n            if (index != -1) {\n                this.sidebar.customElementList.customElementsCollection.triggerUpdateAt(index);\n            }\n        }, \"multi\");\n        return collection;\n    }\n    \n    openTrash(): Q.Promise<void> {\n        let id = FilesListController.TRASH_FILES;\n        if (this.getActiveId() == id) {\n            return Q();\n        }\n        const context = app.common.Context.create({\n            moduleName: Types.section.NotificationModule.NOTES2,\n            contextType: \"custom\",\n            contextId: id,\n            hostHash: this.app.sessionManager.getLocalSession().hostHash\n        });\n\n        return Q().then(() => {\n            return this.singletonGetOrCreateFilesList(id, () => this.getOrCreateTrash());\n        })\n        .then(list => {\n            this.activeFilesList = list;\n            this.sidebar.setActive({\n                type: component.sidebar.SidebarElementType.CUSTOM_ELEMENT,\n                customElement: this.sidebar.customElementList.customElementsCollection.find(x => x.id == id)\n            }, false);\n            this.activateFiles(id);\n            this.activeFilesList.loadFilePreview();\n        })\n    }\n    \n    openConversationViewFromHashmails(hashmails: string[]): Q.Promise<void> {\n        let conversationId = this.conv2Service.getConvIdFromHashmails(hashmails);\n        const context = app.common.Context.create({\n            moduleName: Types.section.NotificationModule.NOTES2,\n            contextType: \"conversation\",\n            contextId: conversationId,\n            hostHash: this.app.sessionManager.getLocalSession().hostHash\n        });\n        this.contextHistory.append(context);\n        return this.openConversationView(conversationId);\n    }\n    \n    openConversationView(conversationId: string): Q.Promise<void> {\n        let users = this.conv2Service.getUsersFromConvId(conversationId);\n        let conversation = this.conv2Service.collection.find(x => x.id == conversationId);\n        if (conversation == null) {\n            conversation = this.conv2Service.getOrCreateConv(users, false);\n            if (conversation == null) {\n                return Q();\n            }\n        }\n        let filesId = Notes2WindowController.getConversationId(this.app.sessionManager.getLocalSession(), conversation);\n        if (this.getActiveId() == filesId) {\n            return Q();\n        }\n        this.notes2Plugin.activeSinkId = conversation.sinkIndex ? conversation.sinkIndex.sink.id : null;\n        this.notes2Plugin.activeSinkHostHash = this.app.sessionManager.getLocalSession().hostHash;\n        return Q().then(() => {\n            return this.singletonGetOrCreateFilesList(filesId, () => this.getOrCreateConversation(conversation));\n        })\n        .then(list => {\n            this.activeFilesList = list;\n            this.notes2Plugin.activeFilesList = this.activeFilesList;\n            this.sidebar.setActive({\n                type: component.sidebar.SidebarElementType.CONVERSATION,\n                conv2: conversation\n            }, false);\n            this.activateFiles(filesId);\n            this.activeFilesList.loadFilePreview();\n        });\n    }\n    \n    getOrCreateConversation(conversation: mail.section.Conv2Section): Q.Promise<FilesListController> {\n        let filesId = Notes2WindowController.getConversationId(this.app.sessionManager.getLocalSession(), conversation);\n        return Q().then(() => {\n            if (!(filesId in this.filesLists)) {\n                let collection = this.getOrCreateCollectionConversation(conversation);\n                return this.addFilesListComponent({sessionType: \"local\"}, filesId, conversation.id, collection, {\n                    type: FilesListType.CONVERSATION,\n                    conversation: conversation,\n                    section: null\n                }, true, () => {\n                    return conversation.fileTree ? conversation.fileTree.refreshDeep(true) : Q();\n                })\n                .then(() => {\n                    return conversation.prepareFilesCollection().then(() => {\n                        if (conversation.section) {\n                            collection.refresh();\n                        }\n                    })\n                    .fail(e => {\n                        this.getLogger().error(\"Error during preparing files\", e);\n                    });\n                })\n                .then(() => {\n                    return this.filesLists[filesId];\n                })\n            }\n            return this.filesLists[filesId];\n        })\n    }\n    \n    getOrCreateCollectionConversation(conversation: mail.section.Conv2Section): utils.collection.FilteredCollection<FileEntryBase> {\n        let collectionId = Notes2WindowController.getConversationId(this.app.sessionManager.getLocalSession(), conversation);\n        if (this.collections[collectionId]) {\n            return this.collections[collectionId];\n        }\n        this.sessionsByCollectionName[collectionId] = this.app.sessionManager.getLocalSession();\n        let collection = this.collections[collectionId] = new utils.collection.FilteredCollection(this.filesBaseCollection, (x: Entry|Types.mail.AttachmentEntry) => {\n            if (Notes2Utils.isFsFileEntry(x)) {\n                return x.tree == conversation.fileTree && x.path.indexOf(FilesConst.TRASH_PATH) == -1 && !mail.thumbs.ThumbsManager.isThumb(x.path);\n            }\n            return x.entry.index == conversation.sinkIndex;\n        });\n        conversation.prepareFilesCollection().then(() => {\n            if (conversation.section) {\n                collection.refresh();\n            }\n        });\n        collection.changeEvent.add(() => {\n            this.sidebar.conv2List.sortedCollection.triggerBaseUpdateElement(conversation);\n        }, \"multi\");\n        return collection;\n    }\n    \n    clearActive() {\n        this.activeFilesList = null;\n        this.activateFiles(null);\n    }\n    \n    activateFiles(id: string): void {\n        this.activateList(this.activeFilesList);\n        this.callViewMethod(\"activateFiles\", id);\n    }\n\n    onLoading(): void {\n        this.loading.callViewMethod(\"onStartLoading\");\n    }\n    \n    //===========================\n    //      SIDEBAR EVENTS\n    //===========================\n    \n    onBeforeActivateSidebarElement(event: component.sidebar.ElementBeforeActivateEvent) {\n        let prevActive = this.activeFilesList;\n        event.result = false;\n        Q().then(() => {\n            event.result = false;\n            if (event.element.type == component.sidebar.SidebarElementType.HOST) {\n                return this.expandRemoteSectionsList(event.element.host);\n            }\n            else if (event.element.type == component.sidebar.SidebarElementType.REMOTE_SECTION) {\n                const context = app.common.Context.create({\n                    moduleName: Types.section.NotificationModule.NOTES2,\n                    contextType: \"remote-section\",\n                    contextId: \"section:\" + event.element.section.getId(),\n                    hostHash: event.element.hostHash\n                });\n                this.contextHistory.append(context);\n                return this.openRemoteChannel(event.element.hostHash, event.element.section.getId());\n            }\n            else if (event.element.type == component.sidebar.SidebarElementType.REMOTE_CONVERSATION) {\n                const context = app.common.Context.create({\n                    moduleName: Types.section.NotificationModule.NOTES2,\n                    contextType: \"remote-conversation\",\n                    contextId: event.element.conv2.id,\n                    hostHash: event.element.hostHash\n                });\n                this.contextHistory.append(context);\n                return this.openRemoteConversationView(event.element.hostHash, event.element.conv2.id);\n            }\n            else if (event.element.type == component.sidebar.SidebarElementType.CONVERSATION) {\n                this.onLoading();\n                const context = app.common.Context.create({\n                    moduleName: Types.section.NotificationModule.NOTES2,\n                    contextType: \"conversation\",\n                    contextId: event.element.conv2.id,\n                    hostHash: this.app.sessionManager.getLocalSession().hostHash\n                });\n                this.contextHistory.append(context);\n                return this.openConversationView(event.element.conv2.id);\n            }\n            else if (event.element.type == component.sidebar.SidebarElementType.SECTION) {\n                this.onLoading();\n                const context = app.common.Context.create({\n                    moduleName: Types.section.NotificationModule.NOTES2,\n                    contextType: \"section\",\n                    contextId: \"section:\" + event.element.section.getId(),\n                    hostHash: this.app.sessionManager.getLocalSession().hostHash\n                });\n                this.contextHistory.append(context);\n                return this.openChannel(event.element.section.getId());\n\n            }\n            else if (event.element.type == component.sidebar.SidebarElementType.CUSTOM_ELEMENT) {\n                this.onLoading();\n                this.notes2Plugin.activeSinkId = null;\n                this.notes2Plugin.activeSinkHostHash = null;\n\n                const context = app.common.Context.create({\n                    moduleName: Types.section.NotificationModule.NOTES2,\n                    contextType: \"custom\",\n                    contextId: event.element.customElement.id,\n                    hostHash: this.app.sessionManager.getLocalSession().hostHash\n                });\n                this.contextHistory.append(context);\n\n                if (event.element.customElement.id == FilesListController.MY_FILES) {\n                    return this.openMy();\n                }\n                if (event.element.customElement.id == FilesListController.ALL_FILES) {\n                    return this.openAll();\n                }\n                if (event.element.customElement.id == FilesListController.LOCAL_FILES) {\n                    this.localFS = new LocalFS(this.localFilesBaseCollection, this.localFsInitialPathSetting.get(), newPath => {\n                        this.localFsInitialPathSetting.set(newPath);\n                    });    \n                    return this.openLocal();\n                }\n                if (event.element.customElement.id == FilesListController.TRASH_FILES) {\n                    return this.openTrash();\n                }\n            }\n        })\n        .then(() => {\n            this.deactivateList(prevActive);\n        })\n        .fail(e => console.log(e));\n\n    }\n\n    activateList(filesList: FilesListController): void {\n        this.notes2Plugin.activeFilesList = this.activeFilesList;\n        this.activeFilesList.activate();\n    }\n\n    deactivateList(filesList: FilesListController): void {\n        if (filesList && filesList != this.activeFilesList) {\n            filesList.deactivate();\n        }\n    }\n    \n    //===========================\n    //         PREVIEW\n    //===========================\n    \n    openDirectoryPreview(dir: mail.filetree.nt.Directory) {\n        return Q().then(() => {\n            return this.dockedEditor && this.reusableOpener ? true : this.closeDockedEditor();\n        })\n        .then(closed => {\n            if (!closed) {\n                return;\n            }\n            if (this.dockedEditor && this.reusableOpener) {\n                this.hideIframe(this.dockedEditor, this.reusableOpener);\n            }\n            this.stopPreviewPlayback();\n            this.reusableOpener = null;\n            this.dockedEditor = null;\n            this.directoryModel = {\n                path: dir.path,\n                name: dir.name,\n                lastModifiedDate: dir.dirStats.modifiedDate,\n                size: dir.dirStats.filesSize,\n                fileCount: dir.dirStats.filesCount\n            };\n            this.callViewMethod(\"showDirectoryPreview\", this.directoryModel);\n        })\n        .fail(this.errorCallback);\n    }\n    \n    onViewAfterShowIframe(id: number): void {\n        if (this.reusableOpener && this.reusableOpener.iframeId == id) {\n            if (\"afterShowIframe\" in this.reusableOpener.win) {\n                (<any>this.reusableOpener.win).afterShowIframe();\n            }\n        }\n    }\n    \n    openDockedEditorFor(session: mail.session.Session, oft: app.common.shelltypes.OpenableElement) {\n        let fileTree: mail.filetree.nt.Tree;\n        return Q().then(() => {\n            if (oft instanceof mail.section.OpenableSectionFile && oft.section) {\n                return oft.section.getFileTree();\n            }\n        }).then(sectionTree => {\n            fileTree = sectionTree ? sectionTree : null;\n            return this.dockedEditor && this.reusableOpener ? true : this.closeDockedEditor();\n        })\n        .then(closed => {\n            if (!closed) {\n                return;\n            }\n            \n            let options: app.common.shelltypes.ShellOpenOptions = {\n                element: oft,\n                action: app.common.shelltypes.ShellOpenAction.PREVIEW,\n                parent: this,\n                docked: true,\n                session: session\n            };\n            let appHandle = this.app.shellRegistry.resolveApplicationByElement(options);\n            if (appHandle == null) {\n                throw new Error(\"Cannot perform shell open at given parameter\");\n            }\n            let creatingNewEditor = !(appHandle.id in this.reusableEditors);\n            this.directoryModel = null;\n            this.stopPreviewPlayback();\n            let dockedEditor = this.dockedEditor;\n            let reusableOpener = this.reusableOpener;\n            if (!creatingNewEditor) {\n                let entry = this.reusableEditors[appHandle.id];\n                if (!entry.win.hasOpenedEntry || !entry.win.hasOpenedEntry(oft)) {\n                    entry.win.release();\n                    entry.win.reopen(options.element);\n                }\n                this.reusableOpener = entry;\n                this.dockedEditor = entry.win;\n                this.callViewMethod(\"showIframe\", entry.iframeId, entry.load);\n                if (\"afterIframeShow\" in this.dockedEditor) {\n                    (<any>this.dockedEditor).afterIframeShow();\n                }\n                return Q().then(() => {\n                    let def: Q.Deferred<void> = Q.defer();\n                    setTimeout(() => {\n                        if (dockedEditor && dockedEditor.id != entry.iframeId && reusableOpener && reusableOpener.appId != this.reusableOpener.appId) {\n                            this.hideIframe(dockedEditor, reusableOpener);\n                        }\n                        def.resolve();\n                    }, 50);\n                    return def.promise;\n                });\n            }\n            else {\n                return Q().then(() => {\n                    if (fileTree && oft instanceof mail.section.OpenableSectionFile) {\n                        let entry = fileTree.collection.list.filter(x => x.path == oft.path)[0];\n                        if (entry) {\n                            return this.app.fileStyleResolver.getStyle(entry);\n                        }\n                    }\n                })\n                .then(style => {\n                    this.callViewMethod(\"showEditorLoader\", style ? style.styleName : \"default\");\n                    if (this.dockedEditor && this.reusableOpener) {\n                        this.hideIframe(dockedEditor, reusableOpener);\n                    }\n                    return appHandle.open(options).then(win => {\n                        let rwin = <ReusableOpener><any>win;\n                        let iframeId = this.editorsId++;\n                        if (rwin.release && rwin.reopen) {\n                            this.reusableOpener = this.reusableEditors[appHandle.id] = {\n                                appId: appHandle.id,\n                                iframeId: iframeId,\n                                win: rwin,\n                                load: null\n                            };\n                        }\n                        else {\n                            this.reusableOpener = null;\n                        }\n                        this.dockedEditor = win;\n                        this.registerInstance(win);\n                        win.onClose = () => {\n                            if (this.reusableEditors[appHandle.id]) {\n                                delete this.reusableEditors[appHandle.id];\n                            }\n                            win.destroy();\n                            win.nwin.close(true);\n                            this.callViewMethod(\"removeIframe\", iframeId);\n                            this.stopPreviewPlayback();\n                            this.dockedEditor = null;\n                        };\n                        win.openDocked(this.nwin, iframeId);\n                        let docked = <app.common.window.DockedWindow>win.nwin;\n                        this.callViewMethod(\"showIframe\", docked.id, docked.load);\n                        if (this.reusableOpener) {\n                            this.reusableOpener.load = docked.load;\n                        }\n                    });\n                });\n            }\n        })\n        .fail(this.errorCallback);\n    }\n    \n    hideIframe(dockedEditor: window.base.BaseWindowController, reusableOpener: ReusableOpenerEntry): void {\n        this.callViewMethod(\"hideIframe\", reusableOpener.iframeId);\n        if (\"afterIframeHide\" in dockedEditor) {\n            (<any>dockedEditor).afterIframeHide();\n        }\n    }\n    \n    onDockedLoad(): void {\n        this.callViewMethod(\"hideEditorLoader\");\n    }\n    \n    closeDockedEditor(): Q.Promise<boolean> {\n        return Q().then(() => {\n            if (this.dockedEditor) {\n                return Q().then(() => {\n                    return this.dockedEditor.close();\n                })\n                .then(() => {\n                    return true;\n                })\n                .fail(e => {\n                    return e ? Q.reject<boolean>(e) : false;\n                });\n            }\n            return true;\n        });\n    }\n    \n    stopPreviewPlayback(): void {\n        if (this.dockedEditor && \"stopPlayback\" in this.dockedEditor) {\n            (<any>this.dockedEditor).stopPlayback();\n        }\n    }\n    \n    loadFilePreview(session: mail.session.Session, element: app.common.shelltypes.OpenableElement): Q.Promise<void> {\n        let deferred = Q.defer<void>();\n        this.elementToPreview = element;\n        this.previewElement = element;\n        clearTimeout(this.previewLoadTid);\n        this.previewLoadTid = setTimeout(() => {\n            if (this.elementToPreview) {\n                this.openDockedEditorFor(session, this.elementToPreview).then(deferred.resolve, deferred.reject);\n                this.elementToPreview = null;\n            }\n            else {\n                deferred.reject();\n            }\n        }, 100);\n        if (element instanceof mail.section.OpenableSectionFile && element.section) {\n            let oft = element;\n            Q.all([element.section.getFileTree(), deferred.promise]).then(([tree]) => {\n                if (this.previewElement != oft) {\n                    this.clearPreviewTrashedInfo();\n                    return;\n                }\n                let entry = tree.collection.list.filter(x => x.id == oft.id)[0];\n                if (entry) {\n                    this.updatePreviewTrashedInfo(session, entry.getTrashedInfo(), tree.section);\n                }\n            });\n            deferred.promise.fail(() => {\n                this.clearPreviewTrashedInfo();\n            });\n        }\n        else {\n            this.clearPreviewTrashedInfo();\n        }\n        return deferred.promise;\n    }\n    \n    loadDirectoryPreview(session: mail.session.Session, element: mail.filetree.nt.Directory): Q.Promise<void> {\n        let deferred = Q.defer<void>();\n        this.directoryToPreview = element;\n        this.previewElement = element;\n        clearTimeout(this.previewLoadTid);\n        this.previewLoadTid = setTimeout(() => {\n            if (this.directoryToPreview) {\n                this.openDirectoryPreview(this.directoryToPreview).then(deferred.resolve, deferred.reject);\n                this.directoryToPreview = null;\n            }\n            else {\n                deferred.reject();\n            }\n        }, 100);\n        if (element instanceof mail.filetree.nt.Directory && element.tree) {\n            let dir = element;\n            Q([deferred.promise]).then(() => {\n                let tree = element.tree;\n                if (this.previewElement != dir) {\n                    this.clearPreviewTrashedInfo();\n                    return;\n                }\n                let entry = tree.collection.list.filter(x => x.id == dir.id)[0];\n                if (entry) {\n                    this.updatePreviewTrashedInfo(session, entry.getTrashedInfo(), tree.section);\n                }\n            });\n            deferred.promise.fail(() => {\n                this.clearPreviewTrashedInfo();\n            });\n        }\n        else {\n            this.clearPreviewTrashedInfo();\n        }\n        return deferred.promise;\n    }\n    \n    updatePreviewTrashedInfo(session: mail.session.Session, info: TrashedInfo, section: mail.section.SectionService): void {\n        if (!info || !section) {\n            this.clearPreviewTrashedInfo();\n            return;\n        }\n        let user = session.conv2Service.contactService.contactCollection.find(x => x.user && x.user.user == info.who);\n        let trashedInfoModel: TrashedInfoModel = {\n            when: info.when,\n            who: user ? user.getDisplayName() : info.who,\n            sectionName: section.getName(),\n            sectionId: section.getId(),\n            fullSectionName: section.getFullSectionName(),\n        };\n        let trashedInfoModelStr = JSON.stringify(trashedInfoModel);\n        if (trashedInfoModelStr != this.currPreviewTrashedInfoModelStr) {\n            this.callViewMethod(\"setPreviewTrashedInfo\", trashedInfoModelStr);\n            this.currPreviewTrashedInfoModelStr = trashedInfoModelStr;\n        }\n    }\n    \n    clearPreviewTrashedInfo(): void {\n        let trashedInfoModelStr: string = null;\n        if (trashedInfoModelStr != this.currPreviewTrashedInfoModelStr) {\n            this.callViewMethod(\"setPreviewTrashedInfo\", trashedInfoModelStr);\n            this.currPreviewTrashedInfoModelStr = trashedInfoModelStr;\n        }\n    }\n    \n    clearPreview(selectedItemsCount: number = 0): Q.Promise<void> {\n        this.callViewMethod(\"hideDirectoryPreview\", selectedItemsCount);\n        this.clearPreviewTrashedInfo();\n        if (this.dockedEditor && this.reusableOpener) {\n            this.reusableOpener.win.release();\n            this.hideIframe(this.dockedEditor, this.reusableOpener);\n            this.stopPreviewPlayback();\n            this.dockedEditor = null;\n            this.reusableOpener = null;\n            return Q();\n        }\n        else {\n            return this.closeDockedEditor().thenResolve(null);\n        }\n    }\n    \n    createCollections(): void {\n        let localSession = this.app.sessionManager.getLocalSession();\n        this.getOrCreateCollectionMy();\n        this.getOrCreateCollectionAll();\n        this.getOrCreateCollectionTrash();\n        this.notes2Plugin.files2Sections[localSession.hostHash].list.forEach(section => {\n            this.getOrCreateCollectionChannel(section);\n        });\n        this.conv2Service.collection.list.forEach(conv2Section => {\n            this.getOrCreateCollectionConversation(conv2Section);\n        });\n    }\n    \n    getCustomElementSearchCount(customElement: component.customelementlist.CustomElement): number {\n        let session = this.app.sessionManager.getLocalSession();\n        let searchResults = this.getSearchResults(session);\n        if (!searchResults) {\n            return 0;\n        }\n        if (customElement.id == FilesListController.MY_FILES) {\n            return searchResults[FilesListController.MY_FILES] || 0;\n        }\n        else if (customElement.id == FilesListController.ALL_FILES) {\n            return searchResults[FilesListController.ALL_FILES] || 0;\n        }\n        else if (customElement.id == FilesListController.TRASH_FILES) {\n            return searchResults[FilesListController.TRASH_FILES] || 0;\n        }\n        return 0;\n    }\n    \n    getConv2ListSearchCount(session: mail.session.Session, conv2Section: mail.section.Conv2Section): number {\n        let searchResults = this.getSearchResults(session);\n        if (!searchResults) {\n            return 0;\n        }\n        let collectionId = Notes2WindowController.getConversationId(session, conv2Section);\n        return searchResults[collectionId] || 0;\n    }\n    \n    getSectionSearchCount(session: mail.session.Session, section: mail.section.SectionService): number {\n        let searchResults = this.getSearchResults(session);\n        if (!searchResults) {\n            return 0;\n        }\n        let collectionId = Notes2WindowController.getChannelId(session, section);\n        return searchResults[collectionId] || 0;\n    }\n    \n    getCustomElementWithSpinner(customElement: component.customelementlist.CustomElement): boolean {\n        let localSession = this.app.sessionManager.getLocalSession();\n        if (!this.notes2Plugin.sectionsWithSpinner[localSession.hostHash]) {\n            return false;\n        }\n        if (this.notes2Plugin.sectionsWithSpinner[localSession.hostHash][\"__all__\"]) {\n            return true;\n        }\n        return !!this.notes2Plugin.sectionsWithSpinner[localSession.hostHash][customElement.id];\n    }\n    \n    getConv2WithSpinner(session: mail.session.Session, conv2Section: mail.section.Conv2Section): boolean {\n        if (!this.notes2Plugin.sectionsWithSpinner[session.hostHash]) {\n            return false;\n        }\n        if (this.notes2Plugin.sectionsWithSpinner[session.hostHash][\"__all__\"]) {\n            return true;\n        }\n        return !!this.notes2Plugin.sectionsWithSpinner[session.hostHash][conv2Section.id];\n    }\n    \n    getSectionWithSpinner(session: mail.session.Session, section: mail.section.SectionService): boolean {\n        if (!this.notes2Plugin.sectionsWithSpinner[session.hostHash]) {\n            return false;\n        }\n        if (this.notes2Plugin.sectionsWithSpinner[session.hostHash][\"__all__\"]) {\n            return true;\n        }\n        return !!this.notes2Plugin.sectionsWithSpinner[session.hostHash][section.getId()];\n    }\n    \n    onFilterFiles(): void {\n        this.searchCountFilterUpdater.updateFilter(this.app.searchModel.get());\n    }\n    \n    updateSearchCounts(): boolean {\n        let data = this.app.searchModel.get();\n        let searchStr = data.visible ? app.common.SearchFilter.prepareNeedle(data.value) : \"\";\n        let localSession = this.app.sessionManager.getLocalSession();\n        for (let collectionName in this.collections) {\n            let collection = this.collections[collectionName];\n            let session = this.sessionsByCollectionName[collectionName];\n            let searchCount = 0;\n            if (searchStr != \"\") {\n                collection.list.forEach(f => {\n                    if (!f || Notes2Utils.isLocalEntry(f) || Notes2Utils.isParentEntry(f)) {\n                        return;\n                    }\n                    let name = Notes2Utils.isAttachmentEntry(f) ? f.attachment.getName() : f.name;\n                    if (app.common.SearchFilter.matches(searchStr, name)) {\n                        ++searchCount;\n                    }\n                });\n            }\n            let searchResults = this.getSearchResults(session);\n            if (searchResults[collectionName] != searchCount) {\n                searchResults[collectionName] = searchCount;\n                let parsedId = Notes2WindowController.parseChannelOrConversationId(collectionName);\n                if (collectionName == FilesListController.MY_FILES || collectionName == FilesListController.ALL_FILES || collectionName == FilesListController.TRASH_FILES) {\n                    let idx = this.sidebarOptions.customElementList.baseCollection.indexOfBy(el => el.id == collectionName);\n                    if (idx != -1) {\n                        this.sidebarOptions.customElementList.baseCollection.triggerUpdateAt(idx);\n                    }\n                }\n                else if (parsedId && parsedId.type == \"conversation\") {\n                    let collection = parsedId.hostHash == localSession.hostHash ? this.sidebar.conv2List.sortedCollection : (this.sidebar.remoteConv2Lists[parsedId.hostHash] ? this.sidebar.remoteConv2Lists[parsedId.hostHash].sortedCollection : null);\n                    if (collection) {\n                        let idx = collection.indexOfBy(el => el.id == parsedId.id);\n                        if (idx != -1) {\n                            collection.triggerUpdateAt(idx);\n                        }\n                    }\n                }\n                else if (parsedId && parsedId.type == \"channel\") {\n                    let collection = parsedId.hostHash == localSession.hostHash ? this.sidebar.sectionList.sortedCollection : (this.sidebar.remoteSectionsLists[parsedId.hostHash] ? this.sidebar.remoteSectionsLists[parsedId.hostHash].sortedCollection : null);\n                    if (collection) {\n                        let idx = collection.indexOfBy(el => el.getId() == parsedId.id);\n                        if (idx != -1) {\n                            collection.triggerUpdateAt(idx);\n                        }\n                    }\n                }\n            }\n        }\n        for (let session of this.notes2Plugin.getReadySessions()) {\n            if (session.hostHash != localSession.hostHash) {\n                this.sidebar.remoteSectionsLists[session.hostHash].sortedCollection.refresh();\n                this.sidebar.remoteConv2Lists[session.hostHash].sortedCollection.refresh();\n                this.updateSidebarHostElement(session);\n            }\n        }\n        this.sidebar.sectionList.sortedCollection.refresh();\n        this.sidebar.conv2List.sortedCollection.refresh();\n        this.isSearchOn = searchStr != \"\";\n        this.callViewMethod(\"changeIsSearchOn\", this.isSearchOn);\n        return true;\n    }\n    \n    getSearchResults(session: mail.session.Session): SearchResults {\n        if (!this.searchCounts[session.hostHash]) {\n            this.searchCounts[session.hostHash] = {};\n        }\n        return this.searchCounts[session.hostHash];\n    }\n    \n    getCustomElementUnread(customElement: component.customelementlist.CustomElement): number {\n        let localSession = this.app.sessionManager.getLocalSession();\n        if (customElement.id == FilesListController.MY_FILES) {\n            let privateSection = this.notes2Plugin.sectionManager.getMyPrivateSection();\n            let ufbs = this.notes2Plugin.unreadFilesBySection[localSession.hostHash];\n            return privateSection && ufbs ? ufbs[privateSection.getId()] || 0 : 0;\n        }\n        else if (customElement.id == FilesListController.ALL_FILES) {\n            //return (this.notes2Plugin.unreadFiles - this.notes2Plugin.unreadFilesBySection[FilesListController.TRASH_FILES]) || 0;\n            return null;\n        }\n        else if (customElement.id == FilesListController.TRASH_FILES) {\n            let ufbs = this.notes2Plugin.unreadFilesBySection[localSession.hostHash];\n            return ufbs ? ufbs[FilesListController.TRASH_FILES] || 0 : 0;\n        }\n        return 0;\n    }\n    \n    getElementsCountWithoutRoot(count: number): number {\n        //Have to remove one element couse some collection contains root directory, which should not be included\n        return count > 0 ? count - 1 : 0;\n    }\n    \n    getCustomElementElementsCount(customElement: component.customelementlist.CustomElement): number {\n        if (customElement.id == \"my\") {\n            return this.getElementsCountWithoutRoot(this.getOrCreateCollectionMy().size());\n        }\n        if (customElement.id == \"all\") {\n            return this.getOrCreateCollectionAll().size();\n        }\n        if (customElement.id == \"trash\") {\n            return this.getOrCreateCollectionTrash().size();\n        }\n        return null;\n    }\n    \n    getSectionUnread(session: mail.session.Session, section: mail.section.SectionService): number {\n        let ufbs = this.notes2Plugin.unreadFilesBySection[session.hostHash];\n        return (ufbs ? ufbs[section.getId()] : 0) || 0;\n    }\n    \n    getSectionElementsCount(session: mail.session.Session, section: mail.section.SectionService): number {\n        let localSession = this.app.sessionManager.getLocalSession();\n        let count = session.host == localSession.host ? this.getOrCreateCollectionChannel(section).size() : this.getOrCreateRemoteCollectionChannel(session.hostHash, section).size();\n        return this.getElementsCountWithoutRoot(count);\n    }\n    \n    getConversationUnread(session: mail.session.Session, conv2Section: mail.section.Conv2Section): number {\n        if (!conv2Section.section) {\n            return 0;\n        }\n        return this.getSectionUnread(session, conv2Section.section);\n    }\n    \n    getConv2ElementsCount(session: mail.session.Session, conv2Section: mail.section.Conv2Section): number {\n        let localSession = this.app.sessionManager.getLocalSession();\n        let count = session.host == localSession.host ? this.getOrCreateCollectionConversation(conv2Section).size() : this.getOrCreateRemoteCollectionConversation(session.hostHash, conv2Section).size();\n        return this.getElementsCountWithoutRoot(count);\n    }\n\n    /////////////////////////////\n    //// REMOTE SECTIONS ////////\n    /////////////////////////////\n\n    expandRemoteSectionsList(hostEntry: component.remotehostlist.HostEntry): void {\n        let session: mail.session.Session;\n        let hostHash = this.app.sessionManager.getHashFromHost(hostEntry.host);\n        let checkSessionExists: boolean = this.app.sessionManager.isSessionExistsByHostHash(hostHash);\n        if (checkSessionExists && hostEntry.sectionList != null && hostEntry.conv2List != null) {\n            this.callViewMethod(\"expandRemoteSectionsList\", hostEntry.host, hostHash);\n            return;\n        }\n        \n        Q().then(() => {\n            this.sidebar.callViewMethod(\"showHostLoading\", hostHash, true);\n            if (!checkSessionExists) {\n                return this.app.sessionManager.createRemoteSession(hostEntry.host)\n                .then(() => {\n                    return this.app.sessionManager.init(hostHash);\n                })\n                .fail(() => {\n                    this.sidebar.callViewMethod(\"showHostLoading\", hostHash, false);\n                    return this.errorCallback;\n                });\n            }\n        })\n        .then(() => {\n            session = this.app.sessionManager.getSessionByHostHash(hostHash);\n            let tasksPlugin = this.app.getComponent(\"tasks-plugin\");\n            return Q.all([\n                Q.all(session.sectionManager.sectionsCollection.list\n                    .filter(x => !x.isPrivateOrUserGroup())\n                    .map(x => this.fsManager.addSectionAndInit(x, session).then(y => y ? this.finishFileTreePreparation(y, hostHash) : null))),\n                Q.all(session.conv2Service.collection.list\n                    .map(x => this.fsManager.addConversationAndInit(x, session).then(y => y ? this.finishFileTreePreparation(y, hostHash, true) : null))),\n                tasksPlugin ? tasksPlugin.ensureSessionProjectsInitialized(session) : Q(),\n            ]);\n        })\n        .then(() => {\n            return this.notes2Plugin.initializeSessionCollectionsAndTrees(session);\n        })\n        .then(() => {\n            if (! this.remoteServers) {\n                this.remoteServers = {};\n            }\n                \n            this.initRemoteHostComponents(hostEntry, session);\n            this.callViewMethod(\"expandRemoteSectionsList\", hostEntry.host, hostHash);\n            this.isHostLoaded[hostHash] = true;\n        })\n        .then(() => {\n            this.updateSidebarHostElement(session);\n        })\n        .fail(e => {\n            console.log(e);\n        });\n    }\n\n    checkRemoteHostComponentsInitialized(hostHash: string): boolean {\n        let ret = (hostHash in this.remoteServers) && this.remoteServers[hostHash].sectionList != null && this.remoteServers[hostHash].conv2List != null;\n        return ret;\n    }\n\n    initRemoteHostComponents(hostEntry: component.remotehostlist.HostEntry, session: mail.session.Session): void {\n        let hostHash = session.hostHash;\n        if (this.checkRemoteHostComponentsInitialized(hostHash)) {\n            return;\n        }\n\n        let sectionsListOptions: component.remotesectionlist.RemoteSectionListOptions = {\n            baseCollection: session.sectionManager.filteredCollection,\n            unreadProvider: section => this.getSectionUnread(session, section),\n            elementsCountProvider: section => this.getRemoteSectionElementsCount(hostHash, section),\n            searchCountProvider: section => this.getSectionSearchCount(session, section),\n            searchAllSearchedProvider: null,\n            sorter: (a, b) => {\n                let res = b.getFileMessageLastDate() - a.getFileMessageLastDate();\n                return res == 0 ? component.sectionlist.SectionListController.nameSectionSorter(a, b) : res;\n            },\n            moduleName: Types.section.NotificationModule.NOTES2,\n            checkShowAllAvailSections: false,\n            session: session\n        }\n\n        let conv2ListOptions: component.remoteconv2list.RemoteConv2ListOptions = {\n            unreadProvider: c2s => this.getConversationUnread(session, c2s),\n            elementsCountProvider: c2s => this.getRemoteConv2ElementsCount(hostHash, c2s),\n            searchCountProvider: c2s => this.getConv2ListSearchCount(session, c2s),\n            searchAllSearchedProvider: null,\n            withSpinnerProvider: c2s => this.getConv2WithSpinner(session, c2s),\n            session: session\n        };\n        let hostList = hostEntry;\n        hostList.sectionList = this.addComponent(\"remoteSectionsList-\" + hostHash, this.componentFactory.createComponent(\"remotesectionlist\", [this, sectionsListOptions]));\n        hostList.sectionList.ipcMode = true;\n        hostList.conv2List = this.addComponent(\"remoteConv2List-\" + hostHash, this.componentFactory.createComponent(\"remoteconv2list\", [this, conv2ListOptions]));\n        hostList.conv2List.ipcMode = true;\n        this.remoteServers[hostHash] = hostList;\n        this.sidebar.registerRemoteSectionsList(hostHash, hostList.sectionList);\n        this.sidebar.registerRemoteConv2List(hostHash, hostList.conv2List);\n    }\n\n\n    openRemoteChannel(hostHash: string, sectionId: string): Q.Promise<void> {\n        return Q().then(() => {\n            return this.app.sessionManager.init(hostHash);\n        })\n        .then(() => {\n            let session = this.app.sessionManager.getSessionByHostHash(hostHash);\n            let section = session.sectionManager.getSection(sectionId);\n            let filesId = Notes2WindowController.getChannelId(session, section);\n\n            if (this.getActiveId() == filesId) {\n                this.sidebar.setActive({\n                    type: component.sidebar.SidebarElementType.REMOTE_SECTION,\n                    section: section,\n                    hostHash: hostHash,\n                }, false);\n                this.callViewMethod(\"toggleDisabledSection\", !section.isFileModuleEnabled());\n                return;\n            }\n    \n            if (section == null) {\n                return;\n            }\n            this.notes2Plugin.activeSinkId = section.getChatSink().id;\n            this.notes2Plugin.activeSinkHostHash = session.hostHash;\n            \n            if (! section.isFileModuleEnabled()) {\n                this.openDisabledSectionView(section);\n                return;\n            }\n            \n            return this.singletonGetOrCreateFilesList(filesId, () => this.getOrCreateRemoteChannel(hostHash, filesId, sectionId, section))\n            .then(newList => {\n                this.activeFilesList = newList;\n                \n                this.notes2Plugin.activeFilesList = this.activeFilesList;\n                this.sidebar.setActive({\n                    type: component.sidebar.SidebarElementType.REMOTE_SECTION,\n                    section: section,\n                    hostHash: hostHash\n                }, false);\n                this.activateFiles(filesId);\n                this.activeFilesList.loadFilePreview();\n            })\n        })\n    }\n\n    getOrCreateRemoteChannel(hostHash: string, id: string, sectionId: string, section: mail.section.SectionService): Q.Promise<FilesListController> {\n        let session = this.app.sessionManager.getSessionByHostHash(hostHash);\n        let collectionId = Notes2WindowController.getChannelId(session, section);\n        \n        return Q().then(() => {\n            if (!(id in this.filesLists)) {\n                return this.fsManager.addSectionAndInit(section, session).then(sec => {\n                    if (sec != null) {\n                        return this.finishFileTreePreparation(sec, hostHash);\n                    }\n                })\n                .then(() => {\n                    let collection = this.getOrCreateRemoteCollectionChannel(hostHash, section);\n                    return this.addFilesListComponent({sessionType: \"remote\", hostHash: hostHash}, id, sectionId, collection, {\n                        type: FilesListType.CHANNEL,\n                        conversation: null,\n                        section: section\n                    }, this.channelsTrees[collectionId] != null, () => {\n                        return this.channelsTrees[collectionId] ? this.channelsTrees[collectionId].refreshDeep(true) : Q();\n                    })\n                })\n                .then(() => {\n                    return section.getChatSinkIndex().then(() => {\n                        section.getChatModule().filesMessagesCollection.changeEvent.add(() => {\n                            this.sidebar.remoteSectionsLists[hostHash].sortedCollection.triggerBaseUpdateElement(section);\n                            this.updateSidebarHostElement(this.app.sessionManager.getSessionByHostHash(hostHash));\n                        }, \"multi\");\n                    });\n                })\n                .then(() => {\n                    return this.filesLists[id];\n                })\n            }\n            return this.filesLists[id];\n        })\n    }\n    \n    getOrCreateRemoteCollectionChannel(hostHash: string, section: mail.section.SectionService): utils.collection.FilteredCollection<FileEntryBase> {\n        let session = this.app.sessionManager.getSessionByHostHash(hostHash);\n        let collectionId = Notes2WindowController.getChannelId(session, section);\n        if (this.collections[collectionId]) {\n            return this.collections[collectionId];\n        }\n        let sink = section.isChatModuleEnabled() ? section.getChatSink() : null;\n        let sinkId = sink ? sink.id : null;\n        this.sessionsByCollectionName[collectionId] = session;\n        let collection = this.collections[collectionId] = new utils.collection.FilteredCollection(this.filesBaseCollection, (x: Entry|Types.mail.AttachmentEntry) => {\n            if (Notes2Utils.isFsFileEntry(x)) {\n                return x.tree == this.channelsTrees[collectionId] && x.path.indexOf(FilesConst.TRASH_PATH) == -1 && !mail.thumbs.ThumbsManager.isThumb(x.path);\n            }\n            return x.entry.index.sink.id == sinkId;\n        });\n        collection.changeEvent.add(() => {\n            this.sidebar.remoteSectionsLists[hostHash].sortedCollection.triggerBaseUpdateElement(section);\n            this.updateSidebarHostElement(this.app.sessionManager.getSessionByHostHash(hostHash));\n        }, \"multi\");\n        return collection;\n    }\n    \n    openRemoteConversationView(hostHash: string, conversationId: string): Q.Promise<void> {\n        return Q().then(() => {\n            return this.app.sessionManager.init(hostHash);\n        })\n        .then(() => {\n            let session = this.app.sessionManager.getSessionByHostHash(hostHash);\n            let users = session.conv2Service.getUsersFromConvId(conversationId);\n            let conversation = session.conv2Service.collection.find(x => x.id == conversationId);\n            if (conversation == null) {\n                conversation = session.conv2Service.getOrCreateConv(users, true);\n                if (conversation == null) {\n                    return Q();\n                }\n            }\n            let filesId = Notes2WindowController.getConversationId(session, conversation);\n            if (this.getActiveId() == filesId) {\n                return;\n            }\n            this.notes2Plugin.activeSinkId = conversation.sinkIndex ? conversation.sinkIndex.sink.id : null;\n            this.notes2Plugin.activeSinkHostHash = session.hostHash;\n            \n            return Q().then(() => {\n                return this.singletonGetOrCreateFilesList(filesId, () => this.getOrCreateRemoteConversation(hostHash, conversation));\n            })\n            .then(list => {\n                this.activeFilesList = list;\n                this.notes2Plugin.activeFilesList = this.activeFilesList;\n                this.sidebar.setActive({\n                    type: component.sidebar.SidebarElementType.REMOTE_CONVERSATION,\n                    conv2: conversation,\n                    hostHash: hostHash,\n                }, false);\n                this.activateFiles(filesId);\n                this.activeFilesList.loadFilePreview();\n            });\n        });\n    }\n\n    getOrCreateRemoteConversation(hostHash: string, conversation: mail.section.Conv2Section): Q.Promise<FilesListController> {\n        let session = this.app.sessionManager.getSessionByHostHash(hostHash);\n        return Q().then(() => {\n            let id = Notes2WindowController.getConversationId(session, conversation);\n            // console.log(\"getOrCreateRemoteConversation id\", id);\n            if (!(id in this.filesLists)) {\n                let collection: utils.collection.FilteredCollection<FileEntryBase> = null;\n                return this.fsManager.addConversationAndInit(conversation, session).then(sec => {\n                    if (sec != null) {\n                        return this.finishFileTreePreparation(sec, hostHash);\n                    }\n                })\n                .then(() => {\n                    collection = this.getOrCreateRemoteCollectionConversation(hostHash, conversation);\n                    return this.addFilesListComponent({ sessionType: \"remote\", hostHash: hostHash }, id, conversation.id, collection, {\n                        type: FilesListType.CONVERSATION,\n                        conversation: conversation,\n                        section: null,\n                    }, true, () => {\n                        return conversation.fileTree ? conversation.fileTree.refreshDeep(true) : Q();\n                    })\n                })\n                .then(() => {\n                    return conversation.prepareFilesCollection().then(() => {\n                        if (conversation.section) {\n                            collection.refresh();\n                        }\n                    })\n                    .fail(e => {\n                        this.getLogger().error(\"Error during preparing files\", e);\n                    });\n                })\n                .then(() => {\n                    return this.filesLists[id];\n                });\n            }\n            return this.filesLists[id];\n    \n        })\n    }\n    \n    getOrCreateRemoteCollectionConversation(hostHash: string, conversation: mail.section.Conv2Section): utils.collection.FilteredCollection<FileEntryBase> {\n        let session = this.app.sessionManager.getSessionByHostHash(hostHash);\n        let id = Notes2WindowController.getConversationId(session, conversation);\n        if (this.collections[id]) {\n            return this.collections[id];\n        }\n        this.sessionsByCollectionName[id] = session;\n        let collection = this.collections[id] = new utils.collection.FilteredCollection(this.filesBaseCollection, (x: Entry|Types.mail.AttachmentEntry) => {\n            if (Notes2Utils.isFsFileEntry(x)) {\n                return x.tree == conversation.fileTree && x.path.indexOf(FilesConst.TRASH_PATH) == -1 && !mail.thumbs.ThumbsManager.isThumb(x.path);\n            }\n            return x.entry.index == conversation.sinkIndex;\n        });\n        conversation.prepareFilesCollection().then(() => {\n            if (conversation.section) {\n                collection.refresh();\n            }\n        });\n        collection.changeEvent.add(() => {\n            this.sidebar.remoteConv2Lists[hostHash].sortedCollection.triggerBaseUpdateElement(conversation);\n            this.updateSidebarHostElement(this.app.sessionManager.getSessionByHostHash(hostHash));\n        }, \"multi\");\n        return collection;\n    }\n    \n    updateSidebarHostElement(session: mail.session.Session): void {\n        if (this.app.sessionManager.getLocalSession() == session) {\n            return;\n        }\n        if (!this.isHostLoaded[session.hostHash]) {\n            return;\n        }\n        let element = this.sidebar.hostList.hostsSortedCollection.find(x => x.host == session.host);\n        if (element) {\n            this.sidebar.hostList.hostsSortedCollection.triggerBaseUpdateElement(element);\n        }\n    }\n    \n    getRemoteSectionElementsCount(hostHash: string, section: mail.section.SectionService): number {\n        return this.getElementsCountWithoutRoot(this.getOrCreateRemoteCollectionChannel(hostHash, section).size());\n    }\n    \n    getRemoteConv2ElementsCount(hostHash: string, conv2Section: mail.section.Conv2Section): number {\n        return this.getElementsCountWithoutRoot(this.getOrCreateRemoteCollectionConversation(hostHash, conv2Section).size());\n    }\n    \n    isLocalEntry(entry: mail.filetree.nt.Entry): boolean {\n        return Notes2Utils.isEntryFromSession(entry, this.app.sessionManager.getLocalSession());\n    }\n    \n    static getChannelId(session: mail.session.Session, section: mail.section.SectionService): string {\n        return `channel-${session.hostHash}-${section.getId()}`;\n    }\n    \n    static getConversationId(session: mail.session.Session, conversation: mail.section.Conv2Section): string {\n        return `conversation-${session.hostHash}-${conversation.id}`;\n    }\n    \n    static parseChannelOrConversationId(id: string): { type: \"channel\" | \"conversation\", hostHash: string, id: string } {\n        if (!id) {\n            return null;\n        }\n        let parts = id.split(\"-\");\n        if (parts.length < 3) {\n            return null;\n        }\n        return {\n            type: parts[0] == \"channel\" ? \"channel\" : \"conversation\",\n            hostHash: parts[1],\n            id: parts.slice(2).join(\"-\"),\n        };\n    }\n    \n}\n\n(<any>FsManagerEntry.prototype).className = \"com.privmx.plugin.notes2.window.notes2.FsManagerEntry\";\n(<any>FsManager.prototype).className = \"com.privmx.plugin.notes2.window.notes2.FsManager\";\n(<any>Notes2WindowController.prototype).className = \"com.privmx.plugin.notes2.window.notes2.Notes2WindowController\";"],"sourceRoot":"../../../src"}