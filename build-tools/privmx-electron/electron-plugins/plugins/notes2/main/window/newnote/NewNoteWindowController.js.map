{"version":3,"sources":["window/newnote/NewNoteWindowController.ts"],"names":[],"mappings":"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","file":"NewNoteWindowController.js","sourcesContent":["import {app, component, utils, window, Q, Types, privfs, mail} from \"pmc-mail\";\nimport {Notes2Plugin} from \"../../main/Notes2Plugin\";\nimport { i18n } from \"./i18n\";\nimport Inject = utils.decorators.Inject;\nimport Dependencies = utils.decorators.Dependencies;\n\nexport type Result = {\n    destination: string;\n    content: privfs.lazyBuffer.IContent;\n    openAfterCreate: boolean;\n}\n\nexport interface Options {\n    defaultDestination: string;\n}\n\nexport interface ActionItemModel {\n    id: string;\n    labelKey: string;\n    icon: string;\n    defaultName: string;\n}\n\nexport interface ChannelModel {\n    id: string;\n    name: string;\n    scope: string;\n}\n\nexport interface Model {\n    defaultDestination: string;\n    channels: ChannelModel[];\n    hashmail: string;\n    actions: ActionItemModel[];\n}\n\nexport interface OrderedActions extends app.common.shelltypes.ShellAppActionOptions {\n    order: number;\n}\n\n@Dependencies([\"persons\", \"conversationlist\"])\nexport class NewNoteWindowController extends window.base.BaseWindowController {\n    \n    static textsPrefix: string = \"plugin.notes2.window.newNote.\";\n    \n    static registerTexts(localeService: mail.LocaleService): void {\n        localeService.registerTexts(i18n, this.textsPrefix);\n    }\n    \n    @Inject identity: privfs.identity.Identity;\n    \n    defaultDestination: string;\n    defered: Q.Deferred<Result>;\n    actions: OrderedActions[];\n    content: privfs.lazyBuffer.IContent;\n    conversations: component.conv2list.Conv2ListController;\n    personsComponent: component.persons.PersonsController;\n    notes2Plugin: Notes2Plugin;\n    uploadAction: {actionId: string, fileName: string} = null;\n    \n    constructor(parentWindow: Types.app.WindowParent, options?: Options) {\n        super(parentWindow, __filename, __dirname);\n        this.ipcMode = true;\n        this.defaultDestination = options ? options.defaultDestination : \"\";\n        this.actions = <OrderedActions[]>this.app.shellRegistry.getActions(app.common.shelltypes.ShellActionType.CREATE);\n        \n        this.actions.forEach( action => {\n            if (action.id.indexOf(\"text\") > -1) {\n                action.order = 0;\n                action.labelKey = \"plugin.notes2.window.newNote.fileType.text.label\";\n            } else\n            if (action.id.indexOf(\"mind\") > -1) {\n                action.order = 1;\n                action.labelKey = \"plugin.notes2.window.newNote.fileType.mindmap.label\";\n            }\n            else {\n                action.order = 2;\n            }\n        })\n        this.actions = this.actions.filter( x => { return x.id != \"core.upload\" && x.id != \"core.upload-multi\"});\n        this.defered = Q.defer();\n        this.setPluginViewAssets(\"notes2\");\n        this.notes2Plugin = this.app.getComponent(\"notes2-plugin\");\n        this.openWindowOptions = {\n            modal: true,\n            toolbar: false,\n            maximized: false,\n            show: false,\n            position: \"center\",\n            width: 496,\n            height: 400,\n            resizable: false,\n            title: this.i18n(\"plugin.notes2.window.newNote.title\")\n        };\n    }\n    \n    init() {\n        this.personsComponent = this.addComponent(\"personsComponent\", this.componentFactory.createComponent(\"persons\", [this]));\n        this.conversations = this.addComponent(\"conversations\", this.componentFactory.createComponent(\"conv2list\", [this, {}]));\n    }\n    \n    getResult(): Q.Promise<Result> {\n        return this.defered.promise;\n    }\n    \n    getModel(): Model {\n        return {\n            defaultDestination: this.defaultDestination,\n            hashmail: this.identity.hashmail,\n            channels: this.notes2Plugin.sectionManager.filteredCollection.findAll(x => x.isChatModuleEnabled() || x.isFileModuleEnabled()).map(x => {\n                return {\n                    id: x.getId(),\n                    name: x.getName(),\n                    scope: x.getScope()\n                };\n            }),\n            actions: this.actions.sort((a, b) => a.order - b.order).map(x => {\n                return {\n                    id: x.id,\n                    labelKey: x.labelKey,\n                    icon: x.icon,\n                    defaultName: x.defaultName\n                };\n            })\n        };\n    }\n    \n    onViewCreateFile(actionId: string, destination: string, fileName: string, openAfterCreate: boolean): void {\n        if (this.content) {\n            this.content = this.content.create(null, fileName);\n            this.defered.resolve({destination: destination, content: this.content, openAfterCreate: openAfterCreate});\n            this.close();\n        }\n        else {\n            this.app.shellRegistry.callAppAction(actionId, fileName).then(content => {\n                this.defered.resolve({destination: destination, content: content, openAfterCreate: openAfterCreate});\n                this.close();\n            })\n            .fail(this.errorCallback);\n        }\n    }\n    \n    onViewChooseAction(actionId: string, fileName: string, fromClick?: boolean) {\n        this.uploadAction = null;\n        if (actionId.indexOf(\"upload\") > -1 && !fromClick) {\n            this.uploadAction = {actionId, fileName};\n            return;\n        }\n        let appAction = this.app.shellRegistry.getAppAction(actionId);\n        if (appAction.overwritesName) {\n            this.app.shellRegistry.callAppAction(actionId, fileName).then(content => {\n                this.content = content;\n                this.callViewMethod(\"setName\", this.content.getName())\n            })\n            .fail(this.errorCallback);\n        }\n        else {\n            this.content = null;\n        }\n    }\n    \n    onViewUploadActionConfirmed() {\n        if (this.uploadAction && !this.content) {\n            let appAction = this.app.shellRegistry.getAppAction(this.uploadAction.actionId);\n            if (appAction.overwritesName) {\n                this.app.shellRegistry.callAppAction(this.uploadAction.actionId, this.uploadAction.fileName).then(content => {\n                    this.content = content;\n                    this.callViewMethod(\"setName\", this.content.getName())\n                })\n                .fail(this.errorCallback);\n            }\n            else {\n                this.content = null;\n            }\n        }\n    }\n    \n    onViewCancel(): void {\n        this.close();\n    }\n    \n}\n\n(<any>NewNoteWindowController.prototype).className = \"com.privmx.plugin.notes2.window.newnote.NewNoteWindowController\";"],"sourceRoot":"../../../src"}