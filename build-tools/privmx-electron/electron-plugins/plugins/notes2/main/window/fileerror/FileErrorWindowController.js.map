{"version":3,"sources":["window/fileerror/FileErrorWindowController.ts"],"names":[],"mappings":"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","file":"FileErrorWindowController.js","sourcesContent":["import {mail, window, Q, Types, privfs} from \"pmc-mail\";\nimport {Notes2Plugin} from \"../../main/Notes2Plugin\";\nimport {OperationType} from \"../../main/Common\";\nimport {Helper} from \"../../main/Helper\";\nimport { i18n } from \"./i18n\";\n\nexport interface Model {\n    operationType: OperationType;\n    error: number;\n    dirNotEmptyError: boolean;\n    source: {\n        name: string;\n        path: string;\n    };\n    destination: {\n        name: string;\n        path: string;\n    };\n}\n\nexport interface FCRResult {\n    abort: boolean;\n    retry: boolean;\n}\n\nexport class FileErrorWindowController extends window.base.BaseWindowController {\n    \n    static textsPrefix: string = \"plugin.notes2.window.fileerror.\";\n    \n    static registerTexts(localeService: mail.LocaleService): void {\n        localeService.registerTexts(i18n, this.textsPrefix);\n    }\n    \n    notes2Plugin: Notes2Plugin;\n    defer: Q.Deferred<FCRResult>;\n    \n    constructor(parentWindow: Types.app.WindowParent, public model: Model) {\n        super(parentWindow, __filename, __dirname);\n        this.ipcMode = true;\n        this.setPluginViewAssets(\"notes2\");\n        this.notes2Plugin = this.app.getComponent(\"notes2-plugin\");\n        this.openWindowOptions = {\n            modal: true,\n            toolbar: false,\n            show: false,\n            position: \"center\",\n            width: 440,\n            height: 350,\n            widget: false,\n            draggable: false,\n            resizable: false,\n            title: this.i18n(\"plugin.notes2.window.fileerror.title\")\n        };\n        this.defer = Q.defer<FCRResult>();\n    }\n    \n    getPromise() {\n        return this.defer.promise;\n    }\n    \n    getModel(): Model {\n        return this.model;\n    }\n    \n    beforeClose(): Q.IWhenable<void> {\n        this.defer.resolve({\n            abort: true,\n            retry: false\n        });\n    }\n    \n    onViewAbort() {\n        this.close();\n    }\n    \n    onViewOmit() {\n        this.defer.resolve({\n            abort: false,\n            retry: false\n        });\n        this.close();\n    }\n    \n    onViewRetry() {\n        this.defer.resolve({\n            abort: false,\n            retry: true\n        });\n        this.close();\n    }\n    \n    static convertModel(result: privfs.fs.file.multi.OperationResult): Model {\n        let model: Model = {\n            operationType: Helper.convertOperationType(result.operation.type),\n            error: result.status,\n            dirNotEmptyError: result.status == privfs.fs.file.multi.OperationStatus.DIRECTORY_NOT_EMPTY,\n            source: {\n                name: mail.filetree.Path.parsePath(result.operation.source.path).name.original,\n                path: result.operation.source.path\n            },\n            destination: result.operation.destination ? {\n                name: mail.filetree.Path.parsePath(result.operation.destination.path).name.original,\n                path: result.operation.destination.path\n            } : null\n        };\n        return model;\n    }\n}\n\n(<any>FileErrorWindowController.prototype).className = \"com.privmx.plugin.notes2.window.fileerror.FileErrorWindowController\";"],"sourceRoot":"../../../src"}