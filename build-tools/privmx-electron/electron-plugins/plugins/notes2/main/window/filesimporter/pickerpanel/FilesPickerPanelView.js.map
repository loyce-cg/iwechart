{"version":3,"sources":["window/filesimporter/pickerpanel/FilesPickerPanelView.ts"],"names":[],"mappings":";;;;;;;;;;;;AACA,8DAAqE;AACrE,2DAA0D;AAC1D,wCAA2C;AAE3C;IAA0D,wCAAkC;IAOxF,8BAAY,MAAoC,EAAS,gBAA+C;QAAxG,YACI,kBAAM,MAAM,EAAE,gBAAgB,CAAC,SAClC;QAFwD,sBAAgB,GAAhB,gBAAgB,CAA+B;;IAExG,CAAC;IAEM,yDAA0B,GAAjC;QACI,IAAI,CAAC,WAAW,GAAG;YACf,QAAQ,EAAE,sBAAe;SAC5B,CAAA;IACL,CAAC;IAED,+CAAgB,GAAhB,UAAiB,KAAiB;QAAlC,iBAqBC;QApBG,KAAK,CAAC,eAAe,EAAE,CAAC;QACxB,IAAI,OAAO,GAAG,uBAAY,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;QAC5C,IAAI,OAAO,CAAC,IAAI,IAAI,WAAW,EAAE;YAC7B,OAAO;SACV;QAED,IAAI,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,WAAW,IAAI,OAAO,CAAC,EAAE,EAAE;YACrD,YAAY,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;YAChC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;YACzB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;YACxB,IAAI,CAAC,YAAY,CAAC,gBAAgB,EAAE,OAAO,CAAC,EAAE,EAAE,OAAO,CAAC,QAAQ,CAAC,CAAC;SACrE;aACI;YACD,IAAI,CAAC,WAAW,GAAG,OAAO,CAAC,EAAE,CAAC;YAC9B,IAAI,CAAC,YAAY,GAAG,UAAU,CAAC;gBAC3B,KAAI,CAAC,YAAY,GAAG,IAAI,CAAC;gBACzB,KAAI,CAAC,WAAW,GAAG,IAAI,CAAC;YAE5B,CAAC,EAAE,oBAAoB,CAAC,iBAAiB,CAAC,CAAC;SAC9C;IACL,CAAC;IAED,yCAAU,GAAV,UAAW,KAAiB;QACxB,KAAK,CAAC,eAAe,EAAE,CAAC;QACxB,IAAI,OAAO,GAAG,uBAAY,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;QAC5C,IAAI,CAAC,YAAY,CAAC,cAAc,EAAE,OAAO,CAAC,EAAE,CAAC,CAAC;IAClD,CAAC;IAES,0CAAW,GAArB;QACI,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,OAAO,EAAE,+CAA+C,EAAE,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;QAC/G,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,OAAO,EAAE,6BAA6B,EAAE,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;IAC3F,CAAC;IAhDuB,sCAAiB,GAAW,GAAG,CAAC;IAiD5D,2BAAC;CAlDD,AAkDC,CAlDyD,uCAAkB,GAkD3E;AAlDY,oDAAoB;AAmD3B,oBAAoB,CAAC,SAAU,CAAC,SAAS,GAAG,gFAAgF,CAAC","file":"FilesPickerPanelView.js","sourcesContent":["import {component, Types, webUtils, window as wnd, JQuery as $} from \"pmc-web\";\nimport { func as sectionTemplate } from \"./template/file-entry.html\";\nimport { BaseItemsPanelView } from \"./BaseItemsPanelView\";\nimport { ViewTreeItem } from \"../TreeItem\";\n\nexport class FilesPickerPanelView<FileEntryModel> extends BaseItemsPanelView<FileEntryModel> {\n    private static readonly DOUBLE_CLICK_TIME: number = 250;\n    items: component.extlist.ExtListView<FileEntryModel>;\n    $container: JQuery;\n    lastClickTid: NodeJS.Timer;\n    lastClickId: string;\n\n    constructor(parent: wnd.base.BaseWindowView<any>, public personsComponent: component.persons.PersonsView) {\n        super(parent, personsComponent);\n    }\n\n    public setupListOptionsBeforeInit(): void {\n        this.listOptions = {\n            template: sectionTemplate,\n        }\n    }\n\n    onDirectoryClick(event: MouseEvent): void {      \n        event.stopPropagation();\n        let element = ViewTreeItem.fromEvent(event);\n        if (element.type != \"directory\") {\n            return;\n        }\n\n        if (this.lastClickTid && this.lastClickId == element.id) {\n            clearTimeout(this.lastClickTid);\n            this.lastClickTid = null;\n            this.lastClickId = null;\n            this.triggerEvent(\"directoryClick\", element.id, element.parentId);\n        }\n        else {\n            this.lastClickId = element.id;\n            this.lastClickTid = setTimeout(() => {\n                this.lastClickTid = null;\n                this.lastClickId = null;\n                //Single click - do nothing, active already selected\n            }, FilesPickerPanelView.DOUBLE_CLICK_TIME);\n        }\n    }\n\n    onAddClick(event: MouseEvent): void {      \n        event.stopPropagation();\n        let element = ViewTreeItem.fromEvent(event);\n        this.triggerEvent(\"addItemClick\", element.id);\n    }\n\n    protected onAfterInit(): void {\n        this.$container.on(\"click\", \".file-entry[data-type='directory'] .file-name\", this.onDirectoryClick.bind(this));\n        this.$container.on(\"click\", \".file-entry .add-remove-btn\", this.onAddClick.bind(this));\n    }\n}\n(<any>FilesPickerPanelView.prototype).className = \"com.privmx.plugin.notes2.window.filesimporter.pickerpanel.FilesPickerPanelView\";"],"sourceRoot":"../../../../src"}