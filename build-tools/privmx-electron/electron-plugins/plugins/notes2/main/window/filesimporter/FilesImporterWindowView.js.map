{"version":3,"sources":["window/filesimporter/FilesImporterWindowView.ts"],"names":[],"mappings":"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","file":"FilesImporterWindowView.js","sourcesContent":["import {component, JQuery as $, window, Types, Q, webUtils} from \"pmc-web\";\nimport {func as mainTemplate} from \"./template/main.html\";\n\nimport {Model} from \"./FilesImporterWindowController\";\nimport { ViewTreeItem } from \"./TreeItem\";\nimport { SectionsPickerPanelView } from \"./pickerpanel/SectionsPickerPanelView\";\nimport { SectionEntryModel, FileEntryModel } from \"./pickerpanel/Types\";\nimport { FilesPickerPanelView } from \"./pickerpanel/FilesPickerPanelView\";\nimport { FilesToImportPanelView } from \"./pickerpanel/FilesToImportPanelView\";\n\nexport class FilesImporterWindowView extends window.base.BaseWindowView<Model> {\n    \n    static DOUBLE_CLICK_TIME = 400;\n    \n    // files: component.tree.TreeView<FileEntry>;\n    sizeCounter: number;\n    $sizeCounterContainer: JQuery;\n    $countContainer: JQuery;\n    personsComponent: component.persons.PersonsView;\n    sectionsPicker: SectionsPickerPanelView<SectionEntryModel>;\n    filesPicker: FilesPickerPanelView<FileEntryModel>;\n    choosenFiles: FilesToImportPanelView<FileEntryModel>;\n    panelsSplitter: component.splitter.SplitterView;\n    $topBarRightPanel: JQuery;\n    $topBarLeftPanel: JQuery;\n\n    $bottomBarRightPanel: JQuery;\n    $bottomBarLeftPanel: JQuery;\n\n    constructor(parent: Types.app.ViewParent) {\n        super(parent, mainTemplate);\n        this.personsComponent = this.addComponent(\"personsComponent\", new component.persons.PersonsView(this, this.helper));\n\n        this.sectionsPicker = this.addComponent(\"sectionsPicker\", new SectionsPickerPanelView(this, null));\n        this.sectionsPicker.ipcMode = true;\n\n        this.filesPicker = this.addComponent(\"filesPicker\", new FilesPickerPanelView(this, null));\n        this.filesPicker.ipcMode = true;\n\n        this.choosenFiles = this.addComponent(\"choosenFiles\", new FilesToImportPanelView(this, null));\n        this.choosenFiles.ipcMode = true;\n\n\n        this.panelsSplitter = this.addComponent(\"panelsSplitter\", new component.splitter.SplitterView(this, {\n            firstPanelMinSize: 200,\n            secondPanelMinSize: () => {\n                return 200\n            },\n            type: \"vertical\",\n            handlePlacement: \"right\",\n            handleDot: false,\n        }));\n        this.panelsSplitter.addEventListener(\"handleMove\", this.onHandleMove.bind(this));\n    }\n    \n    initWindow(_model: Model): Q.Promise<void> {\n        this.$main.on(\"click\", \"[data-action=import]\", this.onImportSelected.bind(this));\n        this.$main.on(\"click\", \"[data-action=close]\", this.onClose.bind(this));\n        this.$main.find(\"input[name=hidden-files]\").change(this.onHiddenChange.bind(this));\n\n        return Q().then(() => {\n            $(document).on(\"keydown\", this.onKeyDown.bind(this));\n\n            this.panelsSplitter.$container = this.$main.find(\".content\");\n            return this.panelsSplitter.triggerInit();\n        })\n        .then(() => {\n            // this.sectionsPicker.$container = this.panelsSplitter.$left;\n            this.filesPicker.$container = this.panelsSplitter.$left;\n            this.choosenFiles.$container = this.panelsSplitter.$right;\n            this.personsComponent.$main = this.$main;\n\n            this.$sizeCounterContainer = this.$main.find(\".bottom-bar .totalSize\");        \n            this.$countContainer = this.$main.find(\".bottom-bar .count\");        \n\n            return Q.all([\n                this.choosenFiles.triggerInit(),\n                this.filesPicker.triggerInit(),\n                this.personsComponent.triggerInit()\n            ]);\n        })\n        .then(() => {\n            this.$topBarRightPanel = this.$main.find(\".top-bar .right\");\n            this.$topBarLeftPanel = this.$main.find(\".top-bar .left\");\n\n            this.$bottomBarRightPanel = this.$main.find(\".bottom-bar .right\");\n            this.$bottomBarLeftPanel = this.$main.find(\".bottom-bar .left\");\n\n            const handlePos = this.panelsSplitter.$handle.css(\"left\");\n            this.setPanelsPos(handlePos);\n            this.hidePathIfRoot(_model.destDirectory);\n            this.personsComponent.refreshAvatars();\n            this.$main.focus();\n        });\n    }\n\n    onHiddenChange(event: Event): void {\n        this.triggerEvent(\"hiddenChanged\", this.$main.find(\"input[name=hidden-files]\").prop(\"checked\"));\n    }\n\n    // onDirectoryClick(event: MouseEvent): void {\n    //     event.stopPropagation();\n    //     let element = ViewTreeItem.fromEvent(event);\n\n    //     if (element.type != \"directory\") {\n    //         return;\n    //     }\n    //     this.triggerEvent(\"directoryClick\", element.id, element.parentId);\n    // }\n\n    // onSelectionChange(event: Event): void {\n    //     let element = ViewTreeItem.fromEvent(event);\n    //     if (element.type == \"directory\") {\n    //         if (element.checked) {\n    //             element.$el.find(\".on-progress\").append($('<i class=\"fa fa-circle-o-notch fa-spin\"></i>'));\n    //         }\n    //         else {\n    //             element.$el.find(\".on-progress\").empty();\n    //         }\n    //     }\n    //     let serialized = element.serialize();\n    //     this.triggerEvent(\"itemSelectionChange\", serialized);\n    // }\n\n    onKeyDown(e: KeyboardEvent): void {\n        if (e.keyCode === webUtils.KEY_CODES.escape) {\n            e.preventDefault();\n            this.triggerEvent(\"close\");\n        }\n    }\n\n    onImportSelected(): void {\n        this.setImportButtonLocked(true);\n        this.triggerEvent(\"importFiles\");\n    }\n\n    setImportButtonLocked(locked: boolean): void {\n        this.$main.find(\"[data-action=import]\").toggleClass(\"disabled\", locked);\n    }\n\n    toggle(elementId: string, show: boolean): void {\n        this.$main.find(\".file-entry[data-id='\"+elementId+\"'] .tree-children\").toggleClass(\"hide\", !show);\n    }\n        \n    onCloseClick() {\n        this.triggerEvent(\"close\");\n    }\n    \n    onAfterFilesListRender() {\n        this.scrollTo(this.$main.find(\".active\"));\n    }\n    \n    scrollTo($ele: JQuery): void {\n        if ($ele.length == 0) {\n            return;\n        }\n        let ch = this.$main.find(\".table-container\")[0];\n        let eBB = $ele[0].getBoundingClientRect();\n        let lBB = ch.getBoundingClientRect();\n        if (eBB.bottom > lBB.bottom) {\n            ch.scrollTo(0, ch.scrollTop + (eBB.bottom - lBB.bottom));\n        }\n        if (eBB.top < lBB.top) {\n            ch.scrollTo(0, ch.scrollTop - (lBB.top - eBB.top));\n        }\n    }\n\n    resetSizeCounter(): void {\n        this.sizeCounter = 0;\n        this.$sizeCounterContainer.text(this.sizeCounter);\n    }\n\n    addSizeToCounter(size: number): void {\n        this.sizeCounter += size;\n        this.$sizeCounterContainer.text(this.helper.bytesSize2(this.sizeCounter));\n\n    }\n    updateFilesTotal(count: number, size: number): void {\n        this.$sizeCounterContainer.text(this.helper.bytesSize2(size));\n        this.$countContainer.text(count);\n    }\n\n    doneProcessing(entryId: string): void {\n        let element = ViewTreeItem.fromId(this.$main[0], entryId);\n        if (element) {\n            element.$el.find(\".on-progress\").empty();\n        }\n    }\n\n    onClose(): void {\n        this.triggerEvent(\"close\");\n    }\n\n    private setPanelsPos(position: number|string): void {\n        let posString = typeof position == \"number\" ? position.toString() : position;\n        let posPx = posString.includes(\"px\") ? posString : posString + \"px\"; \n        this.$topBarLeftPanel.css(\"width\", posPx);\n        this.$bottomBarLeftPanel.css(\"width\", posPx);\n    }\n\n    private hidePathIfRoot(path: string): void {\n        if (path == \"/\") {\n            this.$topBarRightPanel.toggleClass(\"with-path\", false);\n        }\n    }\n\n    onHandleMove(event: any): void {\n        this.setPanelsPos(event.position);\n    }\n\n    updateCurrentDir(dir: string): void {\n        this.$topBarLeftPanel.find(\".current-path\").text(dir);\n    }\n}\n\n(<any>FilesImporterWindowView.prototype).className = \"com.privmx.plugin.notes2.window.filesimporter.FilesImporterWindowView\";"],"sourceRoot":"../../../src"}