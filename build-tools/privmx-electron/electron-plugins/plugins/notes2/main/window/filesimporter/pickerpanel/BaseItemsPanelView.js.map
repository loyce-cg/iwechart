{"version":3,"sources":["window/filesimporter/pickerpanel/BaseItemsPanelView.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,mCAAkF;AAElF,kDAA4D;AAE5D;IAAoD,sCAA4B;IAM5E,4BAAY,MAAoC,EAAS,gBAA+C;QAAxG,YACI,kBAAM,MAAM,CAAC,SAChB;QAFwD,sBAAgB,GAAhB,gBAAgB,CAA+B;;IAExG,CAAC;IAED,iCAAI,GAAJ,UAAK,KAAY;QAAjB,iBAUC;QATG,OAAO,WAAC,EAAE,CAAC,IAAI,CAAC;;;;;wBACZ,IAAI,CAAC,0BAA0B,EAAE,CAAC;wBAClC,IAAI,CAAC,gBAAgB,EAAE,CAAC;wBACxB,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;wBACf,cAAc,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;wBACzD,IAAI,CAAC,KAAK,CAAC,UAAU,GAAG,cAAc,CAAC;wBACvC,WAAM,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE,EAAA;;wBAA9B,SAA8B,CAAC;wBAC/B,IAAI,CAAC,WAAW,EAAE,CAAC;;;;aACtB,CAAC,CAAA;IACN,CAAC;IAEO,6CAAgB,GAAxB;QACI,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,OAAO,EAAE,IAAI,mBAAS,CAAC,OAAO,CAAC,WAAW,CAAC,IAAI,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;IACvG,CAAC;IAED,mCAAM,GAAN,UAAO,KAAY;QACf,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,gBAAY,CAAC,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;IACxG,CAAC;IAIL,yBAAC;AAAD,CAhCA,AAgCC,CAhCmD,mBAAS,CAAC,IAAI,CAAC,aAAa,GAgC/E;AAhCqB,gDAAkB;AAiClC,kBAAkB,CAAC,SAAU,CAAC,SAAS,GAAG,8EAA8E,CAAC","file":"BaseItemsPanelView.js","sourcesContent":["import {component, Types, webUtils, window as wnd, JQuery as $, Q} from \"pmc-web\";\nimport {Model} from \"./BaseItemsPanelController\";\nimport { func as mainTemplate } from \"./template/main.html\";\n\nexport abstract class BaseItemsPanelView<U> extends component.base.ComponentView {\n    items: component.extlist.ExtListView<U>;\n    $container: JQuery;\n    listOptions: any;\n\n\n    constructor(parent: wnd.base.BaseWindowView<any>, public personsComponent: component.persons.PersonsView) {\n        super(parent);\n    }\n\n    init(model: Model): Q.Promise<void> {\n        return Q().then(async () => {\n            this.setupListOptionsBeforeInit();\n            this.createComponents();\n            this.render(model);\n            let $listContainer = this.$container.find(\".items-list\");\n            this.items.$container = $listContainer;\n            await this.items.triggerInit();\n            this.onAfterInit();\n        })\n    }\n\n    private createComponents(): void {\n        this.items = this.addComponent(\"items\", new component.extlist.ExtListView(this, this.listOptions));\n    }\n\n    render(model: Model): void {\n        this.$container.empty().append(this.templateManager.createTemplate(mainTemplate).renderToJQ(model));\n    }\n\n    public abstract setupListOptionsBeforeInit(): void;\n    protected abstract onAfterInit(): void;\n}\n(<any>BaseItemsPanelView.prototype).className = \"com.privmx.plugin.notes2.window.filesimporter.pickerpanel.BaseItemsPanelView\";"],"sourceRoot":"../../../../src"}