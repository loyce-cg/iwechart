{"version":3,"sources":["window/filesimporter/pickerpanel/SectionsPickerPanelController.ts"],"names":[],"mappings":"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","file":"SectionsPickerPanelController.js","sourcesContent":["import { BaseItemsPanelController } from \"./BaseItemsPanelController\";\nimport { utils, window, component, mail } from \"pmc-mail\";\nimport { SectionEntry, SectionEntryModel } from \"./Types\";\n\nclass EntryFromSectionService implements SectionEntry {\n    name: string;\n    id: string;\n    breadcrumbs: string;\n    root: boolean;\n    visible: boolean;\n    enabled: boolean;\n    scope: string;\n    descripion: string;\n    primary: boolean;\n    constructor(section: mail.section.SectionService) {\n        this.name = section.getName();\n        this.id = section.getId();\n        this.breadcrumbs = \"\";\n        this.root = section.isRoot();\n        this.visible = section.isVisible();\n        this.enabled = section.isValid();\n        this.scope = section.getScope();\n        this.descripion = section.getDescription();\n        this.primary = section.isPrimary();\n    }\n    getName(): string {\n        return this.name;\n    }    \n    getId(): string {\n        return this.id;\n    }\n    isRoot(): boolean {\n        return this.root;\n    }\n    isVisible(): boolean {\n        return this.visible;\n    }\n    getBreadcrumb(): string {\n        return this.breadcrumbs;\n    }\n    getScope(): string {\n        return this.scope;\n    }\n    isEnabled(): boolean {\n        return this.enabled;\n    }\n    getDescription(): string {\n        return this.descripion;\n    }\n    isPrimary(): boolean {\n        return this.primary;\n    }\n}\n\nexport class SectionsPickerPanelController extends BaseItemsPanelController<SectionEntry, SectionEntryModel> {\n    entriesCollection: utils.collection.TransformCollection<SectionEntry, mail.section.SectionService>;\n    \n    constructor (\n        parent: window.base.BaseWindowController, \n        public personsComponent: component.persons.PersonsController, \n        public sourceCollection: utils.collection.BaseCollection<mail.section.SectionService>) {\n        \n        super(parent, personsComponent);\n\n        this.entriesCollection = this.addComponent(\"transformCollection-\" + this.constructor.name, new utils.collection.TransformCollection<SectionEntry, mail.section.SectionService>(this.sourceCollection, this.convertSectionServiceToSectionEntry.bind(this)));\n        super.addBaseCollection(this.entriesCollection);\n    }\n    \n    protected filterEntry(entry: SectionEntry): boolean {\n        return true;\n    }    \n    \n    protected convertEntry(entry: SectionEntry): SectionEntryModel {\n        return {\n            name: entry.getName(),\n            id: entry.getId(),\n            isRoot: entry.isRoot(),\n            breadcrumb: entry.getBreadcrumb(),\n            visible: entry.isVisible(),\n            scope: entry.getScope(),\n            enabled: entry.isEnabled(),\n            description: entry.getDescription(),\n            primary: entry.isPrimary()\n        }\n    }\n    \n    protected sortEntry(a: SectionEntryModel, b: SectionEntryModel): number {\n        return 0;\n    }\n\n    private convertSectionServiceToSectionEntry(entry: mail.section.SectionService): SectionEntry {\n        return new EntryFromSectionService(entry);\n    }\n\n    protected onActiveCollectionChange(event: any): void {\n        \n    }\n}\n(<any>SectionsPickerPanelController.prototype).className = \"com.privmx.plugin.notes2.window.filesimporter.pickerpanel.SectionsPickerPanelController\";"],"sourceRoot":"../../../../src"}