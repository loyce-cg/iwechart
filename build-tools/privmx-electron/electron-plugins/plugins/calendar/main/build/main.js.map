{"version":3,"sources":["build/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import * as Mail from \"pmc-mail\";\nimport { MainWindowController } from \"../window/main/MainWindowController\";\nimport { CalendarPlugin } from \"../main/CalendarPlugin\";\nimport { CalendarPanelController } from \"../component/calendarPanel/CalendarPanelController\";\nimport { DatePickerController } from \"../component/datePicker/DatePickerController\";\nimport { DateTimePickerController } from \"../component/dateTimePicker/DateTimePickerController\";\nimport { CalendarWindowController } from \"../window/calendar/CalendarWindowController\";\nimport { ViewContext } from \"../main/Types\";\nlet Logger = Mail.Logger.get(\"privfs-calendar-plugin.main\");\n\nexport class Plugin {\n    \n    register(mail: typeof Mail, app: Mail.app.common.CommonApplication) {\n        let calendarPlugin = app.addComponent(\"calendar-plugin\", new CalendarPlugin(app));\n        \n        // i18n: main\n        calendarPlugin.registerTexts(app.localeService);\n        \n        // i18n: components\n        CalendarPanelController.registerTexts(app.localeService);\n        DatePickerController.registerTexts(app.localeService);\n        DateTimePickerController.registerTexts(app.localeService);\n        \n        // i18n: windows\n        CalendarWindowController.registerTexts(app.localeService);\n        MainWindowController.registerTexts(app.localeService);\n        \n        app.ioc.registerComponent(\"calendarPanel\", CalendarPanelController);\n        app.ioc.registerComponent(\"datePicker\", DatePickerController);\n        app.ioc.registerComponent(\"dateTimePicker\", DateTimePickerController);\n        \n        app.addEventListener<Mail.Types.event.AfterLoginEvent>(\"afterlogin\", event => {\n            let cnt = <Mail.window.container.ContainerWindowController>app.windows.container;\n            let entry = cnt.registerAppWindow(<any>{\n                id: \"calendar\",\n                label: app.localeService.i18n(\"plugin.calendar.app.navbar.label\"),\n                controllerClass: MainWindowController,\n                icon: \"privmx-icon-calendar\",\n                historyPath: \"/calendar\",\n                order: 40,\n                countFullyLoaded: calendarPlugin.calendarUnreadCountFullyLoadedModel,\n            });\n        }, \"calendar\", \"ethernal\");\n        \n        app.addEventListener<Mail.Types.event.InstanceRegisteredEvent<Mail.window.sectionsummary.SectionSummaryWindowController>>(\"instanceregistered\", event => {\n            if (event.instance && event.instance.className == \"com.privmx.core.window.sectionsummary.SectionSummaryWindowController\") {\n                event.instance.addViewStyle({path: \"window/component/calendarPanel/template/main.css\", plugin: \"calendar\"});\n                event.instance.addViewScript({path: \"build/view.js\", plugin: \"calendar\"});\n                app.ioc.create(CalendarPanelController, [event.instance, event.instance.personsComponent]).then(ele => {\n                    ele.context = event.instance.loadSingleModule ? ViewContext.CalendarWindow : ViewContext.SummaryWindow;\n                    ele.calendarId = 1;\n                    event.instance.registerModule(\"calendar\", ele);\n                    ele.afterViewLoaded.promise.then(() => {\n                        ele.activate();\n                    });\n                    let origBeforeClose = event.instance.beforeClose;\n                    event.instance.beforeClose = force => {\n                        origBeforeClose(force);\n                        Mail.Q().then(() => {\n                            ele.beforeClose();\n                        });\n                    };\n                });\n            }\n        }, \"calendar\", \"ethernal\");\n        \n        app.addEventListener<Mail.Types.event.SinkIndexManagerReady>(\"sinkindexmanagerready\", () => {\n            calendarPlugin.checkInit().fail(e => {\n                Logger.error(\"error init tasks plugin\", e);\n            });\n        }, \"calendar\", \"ethernal\");\n        \n        app.addEventListener<Mail.Types.event.AfterLogoutPlugin>(\"afterlogout\", () => {\n            calendarPlugin.reset();\n        }, \"calendar\", \"ethernal\");\n    }\n}\n\n(<any>Plugin.prototype).className = \"com.privmx.plugin.calendar.build.Plugin\";"],"sourceRoot":"../../src"}