{"version":3,"sources":["window/calendar/CalendarWindowController.ts"],"names":[],"mappings":"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","file":"CalendarWindowController.js","sourcesContent":["import { window, component, Types, Q, utils, mail, app} from \"pmc-mail\";\nimport { CalendarPanelController } from \"../../component/calendarPanel/CalendarPanelController\";\nimport Dependencies = utils.decorators.Dependencies;\nimport { CalendarPlugin, CalendarTaskPreviewRequestEvent, CalendarDayPreviewRequestEvent, CalendarPreviewUpdateRequestEvent, CalendarTaskPreviewChangeVisibilityRequestEvent, HorizontalCalendarTaskPreviewWindowLayoutChangeRequestEvent, CalendarBadgesUpdateRequestEvent, CalendarSearchUpdateEvent, CalendarComponentFactory, CalendarDayPreviewChangeVisibilityRequestEvent, CalendarSettingChanged, CalendarsFileAdded, CalendarsFileRemoved, ExtraCalendarsChanged } from \"../../main/CalendarPlugin\";\nimport { CalendarTasksCountManager } from \"../../main/CalendarTasksCountManager\";\nimport { TaskPanelController } from \"privfs-mail-client-tasks-plugin/src/component/taskPanel/TaskPanelController\";\nimport { CustomTasksElements, ViewContext, Modes } from \"../../main/Types\";\nimport { DatePickerController } from \"../../component/datePicker/DatePickerController\";\nimport { Watchable, Action, EventHandler } from \"privfs-mail-client-tasks-plugin/src/main/Types\";\nimport { i18n } from \"./i18n/index\";\nimport Inject = utils.decorators.Inject;\n\nexport interface Model {\n    docked: boolean;\n    myId: string;\n    activeProjectId: string;\n    privateSectionId: string;\n    horizontalTaskLayout: boolean;\n    enableDayPreviewPanel: boolean;\n    showTaskPreviewPanel: boolean;\n    showTaskTooltip: boolean;\n}\n\n@Dependencies([\"splitter\", \"extlist\", \"persons\", \"notification\", \"calendarPanel\", \"sidebar\"])\nexport class CalendarWindowController extends window.base.BaseWindowController {\n    \n    static textsPrefix: string = \"plugin.calendar.window.calendar.\";\n    \n    static registerTexts(localeService: mail.LocaleService): void {\n        localeService.registerTexts(i18n, this.textsPrefix);\n    }\n    \n    static ENABLE_PREVIEW_IN_WEEK_MODE: boolean = false;\n    @Inject router: app.common.Router;\n    docked: boolean;\n    activeProjectId: string;\n    activeProjectHostHash: string;\n    verticalSplitter: component.splitter.SplitterController;\n    verticalSplitter2: component.splitter.SplitterController;\n    horizontalSplitter: component.splitter.SplitterController;\n    calendarsSplitter: component.splitter.SplitterController;\n    personsComponent: component.persons.PersonsController;\n    notifications: component.notification.NotificationController;\n    sectionTooltip: component.sectiontooltip.SectionTooltipController;\n    datePicker: DatePickerController;\n    sidebar: component.sidebar.SidebarController;\n    componentFactory: CalendarComponentFactory;\n    calendarPlugin: CalendarPlugin;\n    subSettings: { [key: string]: utils.Settings } = {};\n    afterViewLoaded: Q.Deferred<void> = Q.defer();\n    privateSection: mail.section.SectionService;\n    dirty: boolean = false;\n    calendarTasksCountManager: CalendarTasksCountManager;\n    remoteCalendarTasksCountManagers: { [hostHash: string]: CalendarTasksCountManager } = {};\n    calendar1PanelPromises: { [key: string]: Q.Promise<CalendarPanelController> } = {};\n    calendar2PanelPromises: { [key: string]: Q.Promise<CalendarPanelController> } = {};\n    previewPanel: TaskPanelController;\n    activePanel1: CalendarPanelController;\n    activePanel2: CalendarPanelController;\n    disabledSection: component.disabledsection.DisabledSectionController;\n    dataChangedListener: EventHandler;\n    remoteDataChangedListeners: { [hostHash: string]: EventHandler } = {};\n    historyStateProjectId: string;\n    \n    remoteServers: {[hostHash: string]: component.remotehostlist.HostEntry} = {};\n\n    constructor(parentWindow: Types.app.WindowParent, docked: boolean) {\n        super(parentWindow, __filename, __dirname, {\n            isPublic: false,\n            subs: {\n                \"calendar-splitter-vertical\": { defaultValue: 340 },\n                \"calendar-splitter-vertical2-proportional\": { defaultValue: JSON.stringify({handlePos:600,totalSize:1600}) },\n                \"calendar-splitter-horizontal-proportional\": { defaultValue: JSON.stringify({handlePos:300,totalSize:1000}) },\n                \"left-panel-sections-splitter-proportional\": { defaultValue: JSON.stringify({handlePos:250,totalSize:1000}) },\n                \"calendar-splitter-calendars-proportional\": { defaultValue: JSON.stringify({handlePos:800,totalSize:1600}) },\n            }\n        });\n        this.ipcMode = true;\n        \n        this.docked = docked;\n        let localSession = this.app.sessionManager.getLocalSession();\n        this.setPluginViewAssets(\"calendar\");\n        this.addViewStyle({path: \"window/component/taskPanel/template/main.css\", plugin: \"tasks\"});\n        this.addViewScript({path: \"build/view.js\", plugin: \"tasks\"});\n        this.openWindowOptions.position = \"center\";\n        this.openWindowOptions.width = 900;\n        this.openWindowOptions.height = 500;\n        this.openWindowOptions.cssClass = \"app-window\";\n        this.openWindowOptions.title = this.i18n(\"plugin.calendar.window.calendar.title\");\n        this.openWindowOptions.icon = \"icon fa fa-calendar\";\n        this.calendarPlugin = this.app.getComponent(\"calendar-plugin\");\n        this.personsComponent = this.addComponent(\"personsComponent\", this.componentFactory.createComponent(\"persons\", [this]));\n        this.notifications = this.addComponent(\"notifications\", this.componentFactory.createComponent(\"notification\", [this]));\n        this.sectionTooltip = this.addComponent(\"sectiontooltip\", this.componentFactory.createComponent(\"sectiontooltip\", [this]));\n        this.datePicker = this.addComponent(\"datePicker\", this.componentFactory.createComponent(\"datePicker\", [this, {\n            prev: true,\n            next: true,\n            day: true,\n            month: true,\n            year: true,\n            buttons: false,\n        }]));\n        this.disabledSection = this.addComponent(\"disabled-section\", this.componentFactory.createComponent(\"disabledsection\", [this, Types.section.NotificationModule.CALENDAR]));\n        this.bindEvent<CalendarSettingChanged>(this.app, \"calendar-setting-changed\", async (event) => {\n            if (event.setting == \"enable-day-preview-panel\") {\n                await this.onToggleDayPreviewPanel(!!event.value);\n            }\n            else if (event.setting == \"horizontal-task-preview-window-layout\") {\n                this.previewPanel.overrideIsHorizontalLayout = !!this.calendarPlugin.getSetting(localSession, \"horizontal-task-preview-window-layout\", null, null);\n                this.previewPanel.refreshIsHorizontalLayout();\n            }\n            else if (event.setting == \"show-files\") {\n                let showFiles = !!this.calendarPlugin.getSetting(localSession, \"show-files\", null, null);\n                let refreshSidebarCounts = false;\n                if (this.calendarTasksCountManager && this.calendarTasksCountManager.countFiles != showFiles) {\n                    this.calendarTasksCountManager.countFiles = showFiles;\n                    refreshSidebarCounts = true;\n                }\n                for (let hostHash in this.remoteCalendarTasksCountManagers) {\n                    if (this.remoteCalendarTasksCountManagers[hostHash].countFiles != showFiles) {\n                        this.remoteCalendarTasksCountManagers[hostHash].countFiles = showFiles;\n                        refreshSidebarCounts = true;\n                    }\n                }\n                if (refreshSidebarCounts) {\n                    this.refreshSidebarCounts();\n                }\n            }\n        });\n        this.bindEvent<Types.event.ActiveAppWindowChangedEvent>(this.app, \"active-app-window-changed\", e => {\n            this.callViewMethod(\"setIsCalendarTabOpen\", e.appWindowId == \"calendar\");\n        });\n        this.dataChangedListener = this.onDataChanged.bind(this);\n        this.calendarPlugin.tasksPlugin.watch(localSession, \"*\", \"*\", \"*\", this.dataChangedListener);\n    }\n    \n    onViewLoad(): void {\n        this.afterViewLoaded.resolve();\n        let data = this.app.searchModel.get();\n        let isSearchOn = data.visible && data.value.length > 1;\n        this.callViewMethod(\"onSearchChanged\", isSearchOn, false);\n        \n        this.initSpellChecker();\n    }\n    \n    beforeClose(): void {\n        this.calendarPlugin.tasksPlugin.unWatch(this.app.sessionManager.getLocalSession(), \"*\", \"*\", \"*\", this.dataChangedListener);\n        for (let hostHash in this.remoteDataChangedListeners) {\n            this.calendarPlugin.tasksPlugin.unWatch(this.app.sessionManager.sessions[hostHash], \"*\", \"*\", \"*\", this.remoteDataChangedListeners[hostHash]);\n        }\n        for (let id in this.calendar1PanelPromises) {\n            this.calendar1PanelPromises[id].then(panel => panel.beforeClose());\n        }\n        for (let id in this.calendar2PanelPromises) {\n            this.calendar2PanelPromises[id].then(panel => panel.beforeClose());\n        }\n        this.previewPanel.beforeClose();\n    }\n    \n    init() {\n        let localSession = this.app.sessionManager.getLocalSession();\n        this.privateSection = localSession.sectionManager.getMyPrivateSection();\n        this.calendarTasksCountManager = new CalendarTasksCountManager(localSession, this.privateSection, this.calendarPlugin, this.calendarPlugin.tasksPlugin, this.sidebar, !!this.calendarPlugin.getSetting(localSession, \"show-files\", null, null));\n        \n        this.previewPanel = this.addComponent(\"previewPanel\", (<any>this.componentFactory).createComponent(\"taskpanel\", [this, localSession, this.personsComponent, {\n            close: () => this.close(),\n            confirm: (msg: string) => this.confirm(msg),\n            confirmEx: this.confirmEx.bind(this),\n            openWindowParent: this,\n            openChildWindow: this.openChildWindow.bind(this),\n            updateDirty: this.updateDirty.bind(this),\n        }, true, false, []]));\n        this.previewPanel.overrideIsHorizontalLayout = !!this.calendarPlugin.getSetting(localSession, \"horizontal-task-preview-window-layout\", null, null);\n        this.verticalSplitter = this.addComponent(\"verticalSplitter\", this.componentFactory.createComponent(\"splitter\", [this, this.settings.create(\"calendar-splitter-vertical\")]));\n        this.verticalSplitter2 = this.addComponent(\"verticalSplitter2\", this.componentFactory.createComponent(\"splitter\", [this, this.settings.create(\"calendar-splitter-vertical2-proportional\")]));\n        this.horizontalSplitter = this.addComponent(\"horizontalSplitter\", this.componentFactory.createComponent(\"splitter\", [this, this.settings.create(\"calendar-splitter-horizontal-proportional\")]));\n        this.calendarsSplitter = this.addComponent(\"calendarsSplitter\", this.componentFactory.createComponent(\"splitter\", [this, this.settings.create(\"calendar-splitter-calendars-proportional\")]));\n        this.verticalSplitter.ipcMode = true;\n        this.verticalSplitter2.ipcMode = true;\n        this.horizontalSplitter.ipcMode = true;\n        this.calendarsSplitter.ipcMode = true;\n        \n        this.subSettings[\"active-project-id\"] = this.settings.create(\"active-project-id\");\n        \n        this.activeProjectId = this.historyStateProjectId ? this.historyStateProjectId : this.calendarPlugin.getPrivateSectionId();\n        this.activeProjectHostHash = localSession.hostHash;\n        this.calendarPlugin.tasksPlugin.projectsReady.then(() => {\n            this.selectProject(this.getActiveSession(), this.activeProjectId ? this.activeProjectId : this.calendarPlugin.getPrivateSectionId());\n        });\n        \n        let promProjectCreator = Q();\n        let prevUpdate: Date = null;\n        this.registerChangeEvent(this.calendarPlugin.tasksPlugin.tasksSectionsCollection[localSession.hostHash].changeEvent, event => {\n            if (event.type == \"add\") {\n                promProjectCreator = promProjectCreator.then(() => <any>this.calendarPlugin.tasksPlugin.ensureProjectExists(event.element.getId(), event.element.getName(), localSession)).then(() => {\n                    return <any>Q.resolve();\n                })\n                .fail(e => {\n                    this.getLogger().error(\"Error during adding project\", e);\n                })\n            }\n            else if (event.type == \"update\") {\n                let now = new Date();\n                if (prevUpdate != null) {\n                    if (<any>now - <any>prevUpdate < 5) {\n                        prevUpdate = now;\n                        return;\n                    }\n                }\n                prevUpdate = now;\n                setTimeout(() => {\n                    promProjectCreator = promProjectCreator.then(() => {\n                        this.callViewMethod(\"renderProjectsPanel\");\n                        return <any>Q.resolve();\n                    });\n                }, 100);\n            }\n        });\n        for (let element of this.calendarPlugin.tasksPlugin.tasksSectionsCollection[localSession.hostHash].list) {\n            let id = element.getId();\n            let name = element.getName();\n            if (id == this.calendarPlugin.getPrivateSectionId()) {\n                name = this.i18n(\"plugin.calendar.window.calendar.sidebar.private\");\n            }\n            promProjectCreator = promProjectCreator.then(() => <any>this.calendarPlugin.tasksPlugin.ensureProjectExists(id, name, localSession));\n        }\n        \n        this.bindEvent<CalendarsFileAdded>(this.app, \"calendars-file-added\", e => {\n            if (e.hostHash == localSession.hostHash) {\n                this.calendarTasksCountManager.addFile(e.identifier);\n            }\n            else {\n                this.getOrCreateRemoteTasksCountManager(e.hostHash).addFile(e.identifier);\n            }\n        });\n        this.bindEvent<CalendarsFileRemoved>(this.app, \"calendars-file-removed\", e => {\n            if (e.hostHash == localSession.hostHash) {\n                this.calendarTasksCountManager.removeFile(e.identifier);\n            }\n            else {\n                this.getOrCreateRemoteTasksCountManager(e.hostHash).removeFile(e.identifier);\n            }\n        });\n        this.bindEvent<ExtraCalendarsChanged>(this.app, \"extra-calendars-changed\", e => {\n            this.refreshSidebarCounts();\n        });\n        \n        this.bindEvent(this.app, \"focusChanged\", (event) => {\n            let windowId = (<any>event).windowId;\n            this.calendarPlugin.activeWindowFocused = windowId == \"main-window\" || windowId == \"focus-restored\" ? (<window.container.ContainerWindowController>this.parent.parent).activeModel.get() : windowId;\n            if (windowId == \"tasks\" || (windowId == \"main-window\" && (<window.container.ContainerWindowController>this.parent.parent).activeModel.get() == \"tasks\") ) {\n                setTimeout(() => {\n                    this.callViewMethod(\"grabFocus\", true);\n                }, 200);\n            }\n        });\n        this.bindEvent(this.app, \"focusLost\", (event) => {\n            this.calendarPlugin.activeWindowFocused = null;\n        });\n        \n        \n        this.bindEvent(this.app, \"onToggleMaximize-notify\", () => {\n            setTimeout(() => {\n                this.callViewMethod(\"grabFocus\", false);\n            }, 10);\n        });\n        \n        this.bindEvent(this.app, \"focusLost\", () => {\n            this.callViewMethod(\"pauseTimeAgoRefresher\");\n        });\n        \n        this.bindEvent(this.app, \"focusChanged\", event => {\n            if ((<any>event).windowId == \"main-window\") {\n                this.callViewMethod(\"resumeTimeAgoRefresher\");\n            }\n        });\n        \n        return Q().then(() => {\n            return Q.all([\n                this.app.mailClientApi.privmxRegistry.getIdentityProvider(),\n                this.calendarPlugin.sectionManager.isSectionsLimitReached()\n            ])\n        })\n        .then(res => {\n            let [identityProvider, isSectionsLimitReached] = res;\n            let customElements: component.customelementlist.CustomElement[] = [];\n            if (this.calendarPlugin.getPrivateSectionId()) {\n                customElements.push(\n                    {\n                        id: this.calendarPlugin.getPrivateSectionId(),\n                        icon: {\n                            type: \"hashmail\",\n                            value: this.calendarPlugin.identity.hashmail,\n                        },\n                        label: this.i18n(\"plugin.calendar.window.calendar.sidebar.private\"),\n                        private: true,\n                        emphasized: true,\n                    }\n                );\n            }\n            customElements.push(\n                {\n                    id: CustomTasksElements.ALL_TASKS_ID,\n                    icon: {\n                        type: \"fa\",\n                        value: \"privmx-icon privmx-icon-calendar\",\n                    },\n                    label: this.i18n(\"plugin.calendar.window.calendar.sidebar.all\"),\n                    private: false,\n                },\n                {\n                    id: CustomTasksElements.TASKS_CREATED_BY_ME_ID,\n                    icon: {\n                        type: \"hashmail\",\n                        value: this.calendarPlugin.identity.hashmail,\n                    },\n                    label: this.i18n(\"plugin.calendar.window.calendar.sidebar.created-by-me\"),\n                    private: false,\n                },\n                {\n                    id: CustomTasksElements.TASKS_ASSIGNED_TO_ME_ID,\n                    icon: {\n                        type: \"hashmail\",\n                        value: this.calendarPlugin.identity.hashmail,\n                    },\n                    label: this.i18n(\"plugin.calendar.window.calendar.sidebar.assigned-to-me\"),\n                    private: false,\n                    alternative: true,\n                    emphasized: true,\n                },\n                {\n                    id: CustomTasksElements.TRASH_ID,\n                    icon: {\n                        type: \"fa\",\n                        value: \"ico-bin\",\n                    },\n                    label: this.i18n(\"plugin.calendar.window.calendar.sidebar.trash\"),\n                    private: false,\n                }\n            );\n            \n            let sidebarOptions: component.sidebar.SidebarOptions = {\n                sectionsLimitReached: isSectionsLimitReached,\n                customElementList: {\n                    baseCollection: new utils.collection.MutableCollection(customElements),\n                    elementsCountProvider: ce => this.calendarTasksCountManager.getCustomElementElementsCount(ce),\n                    unreadProvider: ce => this.getUnread(localSession, ce),\n                    searchCountProvider: ce => this.calendarPlugin.getSearchCount(localSession, ce),\n                    unmutedUnreadProvider: ce => this.getUnread(localSession, ce, true),\n                    searchAllSearchedProvider: null,\n                },\n                conv2List: {\n                    elementsCountProvider: c2s => this.calendarTasksCountManager.getConv2ElementsCount(c2s),\n                    unreadProvider: c2s => this.getUnread(localSession, c2s),\n                    searchCountProvider: c2s => this.calendarPlugin.getSearchCount(localSession, c2s),\n                    searchAllSearchedProvider: null,\n                    unmutedUnreadProvider: c2s => this.getUnread(localSession, c2s, true),\n                    sorter: (a, b) => {\n                        return this.calendarTasksCountManager.getConv2LastDate(b) - this.calendarTasksCountManager.getConv2LastDate(a);\n                    },\n                    hideConversations: true,\n                    assignedTo: true,\n                },\n                sectionList: {\n                    baseCollection: this.calendarPlugin.sidebarSectionsCollection,\n                    elementsCountProvider: section => this.calendarTasksCountManager.getSectionElementsCount(section),\n                    unreadProvider: section => this.getUnread(localSession, section),\n                    searchCountProvider: section => this.calendarPlugin.getSearchCount(localSession, section),\n                    searchAllSearchedProvider: null,\n                    moduleName: Types.section.NotificationModule.CALENDAR,\n                    sorter: (a, b) => {\n                        let res = this.calendarTasksCountManager.getSectionLastDate(b) - this.calendarTasksCountManager.getSectionLastDate(a);\n                        return res == 0 ? component.sectionlist.SectionListController.nameSectionSorter(a, b) : res;\n                    }\n                },\n                customSectionList: {\n                    baseCollection: null,\n                    unreadProvider: null,\n                    elementsCountProvider: null,\n                    searchCountProvider: null,\n                    searchAllSearchedProvider: null,\n                    moduleName: Types.section.NotificationModule.CALENDAR,\n                    sorter: null\n                },\n                remoteHostList: {\n                    elementCountsAggregationStrategy: component.remotehostlist.ElementCountsAggregationStrategy.SECTIONS,\n                },\n                conv2ListEnabled: true,\n                conv2Splitter: this.settings.create(\"left-panel-sections-splitter-proportional\"),\n                sidebarButtons: [],\n            };\n            if (identityProvider.getRights().indexOf(\"normal\") != -1) {\n                sidebarOptions.sidebarButtons.push(\n                    {\n                        id: \"new-section\",\n                        label: this.i18n(\"plugin.calendar.window.calendar.sidebar.newsection\"),\n                        title: this.i18n(\"plugin.calendar.window.calendar.sidebar.newsection\"),\n                        icon: \"ico-comment\",\n                        windowOpener: true,\n                        onSectionList: true\n                    }\n                );\n            }\n\n            this.sidebar = this.addComponent(\"sidebar\", this.componentFactory.createComponent(\"sidebar\", [this, sidebarOptions]));\n            this.bindEvent(this.sidebar, \"elementbeforeactivate\", this.onBeforeActivateSidebarElement.bind(this));\n            this.bindEvent(this.sidebar, \"elementactivated\", this.onActivatedSidebarElement.bind(this));\n            this.bindEvent(this.sidebar, \"sidebarbuttonaction\", this.onSidebarButtonAction.bind(this));\n            this.sidebar.usersListTooltip.getContent = (sectionId: string): string => {\n                return this.app.getUsersListTooltipContent(this.app.sessionManager.getLocalSession(), sectionId);\n            }\n            \n            this.bindEvent(this.app, \"reopen-section\", (event: component.disabledsection.ReopenSectionEvent) => {\n                this.selectProject(localSession, event.element.getId());\n            });\n            this.bindEvent<Types.event.SectionsLimitReachedEvent>(this.app, \"sectionsLimitReached\", event => {\n                this.sidebar.onSectionsLimitReached(event.reached);\n            });\n            this.calendarTasksCountManager.sidebar = this.sidebar;\n            this.initSessionEvents(localSession);\n            this.setSidebarActiveItem(this.getActiveSession(), this.activeProjectId);\n            \n            this.bindEvent<CalendarSearchUpdateEvent>(this.app, \"calendar-search-update\", event => {\n                let refreshAvatars = this.updateSidebarCustomElements(this.app.sessionManager.getLocalSession(), this.sidebar.customElementList.customElementsCollection);\n                this.updateBadges();\n                this.callViewMethod(\"onSearchChanged\", event.searchString.length > 0, refreshAvatars);\n            });\n            \n            this.app.dispatchEvent({type: \"focusChanged\", windowId: \"tasks\"});\n            return <any>this.calendarPlugin.checkInit().then(() => this.calendarPlugin.tasksPlugin.projectsReady).then(() => {\n                return this.datePicker.init();\n            }).then(() => {\n                return this.previewPanel.init();\n            })\n            .then(() => {\n                this.selectProject(this.getActiveSession(), this.activeProjectId);\n            });\n        })\n    }\n    \n    getActiveSession(): mail.session.Session {\n        if (this.activeProjectHostHash && this.app.sessionManager.isSessionExistsByHostHash(this.activeProjectHostHash)) {\n            return this.app.sessionManager.getSessionByHostHash(this.activeProjectHostHash);\n        }\n        return this.app.sessionManager.getLocalSession();\n    }\n    \n    isSectionPrimary(session: mail.session.Session, section: mail.section.SectionService) {\n        let cps = this.calendarPlugin.calendarPrimarySections;\n        return cps && cps[session.hostHash].contains(section);\n    }\n    \n    openDisabledSectionView(session: mail.session.Session, section: mail.section.SectionService) {\n        this.sidebar.setActive({\n            type: this.isSectionPrimary(session, section) ? component.sidebar.SidebarElementType.CUSTOM_SECTION : component.sidebar.SidebarElementType.SECTION,\n            section: section,\n        }, false);\n        this.calendarPlugin.activeSinkId = section.getChatSink().id;\n        this.calendarPlugin.activeSinkHostHash = session.hostHash;\n        this.disabledSection.setSection(section);\n        this.callViewMethod(\"toggleDisabledSection\", true);\n    }\n    \n    updateSidebarCustomElements(session: mail.session.Session, collection: utils.collection.BaseCollection<component.customelementlist.CustomElement>, all: boolean = false): boolean {\n        let hostHash = session.hostHash;\n        let refreshAvatars = false;\n        let len = collection.size();\n        for (let i = 0; i < len; ++i) {\n            let el = collection.get(i);\n            if (all || this.calendarPlugin.searchCountsModified[hostHash][el.id]) {\n                collection.triggerUpdateAt(i);\n                if (el.icon.type == \"hashmail\") {\n                    refreshAvatars = true;\n                }\n            }\n        }\n        return refreshAvatars;\n    }\n    \n    updateSidebarSections(session: mail.session.Session, collection: utils.collection.SortedCollection<mail.section.SectionService>, all: boolean = false) {\n        let hostHash = session.hostHash;\n        let len = collection.size();\n        for (let i = 0; i < len; ++i) {\n            if (all || this.calendarPlugin.searchCountsModified[hostHash][collection.get(i).getId()]) {\n                collection.triggerUpdateAt(i);\n            }\n        }\n    }\n    \n    updateConv2Sections(session: mail.session.Session, collection: utils.collection.SortedCollection<mail.section.Conv2Section>, all: boolean = false) {\n        let hostHash = session.hostHash;\n        let len = collection.size();\n        for (let i = 0; i < len; ++i) {\n            if (all || this.calendarPlugin.searchCountsModified[hostHash][collection.get(i).id]) {\n                collection.triggerUpdateAt(i);\n            }\n        }\n    }\n    \n    onBeforeActivateSidebarElement(event: component.sidebar.ElementBeforeActivateEvent) {\n        let localSession = this.app.sessionManager.getLocalSession();\n        event.result = false;\n        if (event.element.type == component.sidebar.SidebarElementType.HOST) {\n            this.expandRemoteSectionsList(event.element.host);\n        }\n        if (event.element.type == component.sidebar.SidebarElementType.SECTION) {\n            const context = app.common.Context.create({\n                moduleName: Types.section.NotificationModule.CALENDAR,\n                contextType: \"section\",\n                contextId: \"section:\" + event.element.section.getId(),\n                hostHash: localSession.hostHash\n            });            \n            this.contextHistory.append(context);\n            this.selectProject(localSession, event.element.section.getId());\n        }\n        else if (event.element.type == component.sidebar.SidebarElementType.REMOTE_SECTION) {\n            let session = this.app.sessionManager.getSessionByHostHash(event.element.hostHash);\n            const context = app.common.Context.create({\n                moduleName: Types.section.NotificationModule.CALENDAR,\n                contextType: \"remote-section\",\n                contextId: \"section:\" + event.element.section.getId(),\n                hostHash: event.element.hostHash\n            });            \n            this.contextHistory.append(context);\n            this.selectProject(session, event.element.section.getId());\n        }\n        else if (event.element.type == component.sidebar.SidebarElementType.REMOTE_CONVERSATION) {\n            let session = this.app.sessionManager.getSessionByHostHash(event.element.hostHash);\n            const context = app.common.Context.create({\n                moduleName: Types.section.NotificationModule.CALENDAR,\n                contextType: \"remote-conversation\",\n                contextId: event.element.conv2.id,\n                hostHash: event.element.hostHash\n            });            \n            this.contextHistory.append(context);\n            this.selectProject(session, event.element.conv2.id);\n        }\n        else if (event.element.type == component.sidebar.SidebarElementType.CUSTOM_ELEMENT) {\n            const context = app.common.Context.create({\n                moduleName: Types.section.NotificationModule.CALENDAR,\n                contextType: \"custom\",\n                contextId: event.element.customElement.id,\n                hostHash: localSession.hostHash\n            });            \n            this.contextHistory.append(context);\n            this.selectProject(localSession, event.element.customElement.id);\n        }\n        else if (event.element.type == component.sidebar.SidebarElementType.CONVERSATION) {\n            const context = app.common.Context.create({\n                moduleName: Types.section.NotificationModule.CALENDAR,\n                contextType: \"conversation\",\n                contextId: event.element.conv2.id,\n                hostHash: localSession.hostHash\n            });            \n            this.contextHistory.append(context);\n            this.selectProject(localSession, event.element.conv2.id);\n        }\n    }\n    \n    onSidebarButtonAction(event: component.sidebar.SidebarButtonActionEvent) {\n        if (event.sidebarButton.id == \"new-section\") {\n            this.openSectionsWindow();\n        }\n    }\n    \n    openSectionsWindow(): void {\n        this.app.openNewSectionDialogFromSidebar();\n    }\n    \n    onActivatedSidebarElement(event: component.sidebar.ElementActivatedEvent) {\n    }\n    \n    onSinkChange(session: mail.session.Session, event: Types.utils.collection.CollectionEvent<mail.SinkIndex>) {\n        if (event.element == null) {\n            return;\n        }\n        let section = session.sectionManager.getSectionBySinkIndex(event.element);\n        if (section == null) {\n            return;\n        }\n        if (session.hostHash == this.app.sessionManager.getLocalSession().hostHash) {\n            this.sidebar.sectionList.sortedCollection.triggerBaseUpdateElement(section);\n        }\n        else {\n            let list = this.sidebar.remoteSectionsLists[session.hostHash];\n            if (list) {\n                list.sortedCollection.triggerBaseUpdateElement(section);\n            }\n        }\n    }\n    \n    getUnread(session: mail.session.Session, section: mail.section.SectionService|mail.section.Conv2Section|component.customelementlist.CustomElement, skipMuted: boolean = false): number {\n        // if (section instanceof mail.section.SectionService) {\n        //     return this.calendarPlugin.getUnreadForSection(section.getId());\n        // }\n        // else if (section instanceof mail.section.Conv2Section) {\n        //     return this.calendarPlugin.getUnreadForConv2Section(section.id, skipMuted);\n        // }\n        // else if (section.id == CustomTasksElements.ALL_TASKS_ID) {\n        //     return null;\n        // }\n        // else if (section.id == CustomTasksElements.TASKS_ASSIGNED_TO_ME_ID) {\n        //     return this.calendarPlugin.getUnread(true, false);\n        // }\n        // else if (section.id == CustomTasksElements.TASKS_CREATED_BY_ME_ID) {\n        //     return this.calendarPlugin.getUnread(false, true, skipMuted);\n        // }\n        // else if (section.id == CustomTasksElements.TRASH_ID) {\n        //     return this.calendarPlugin.getUnread(false, false, false, true);\n        // }\n        return 0;\n    }\n    \n    applyHistoryState(processed: boolean, state: string) {\n        let usedState = state;\n        let localSession = this.app.sessionManager.getLocalSession();\n        const context = this.contextHistory.getCurrent();\n\n        if (context) {\n            if (this.app.switchModuleWithContext() || state) {\n                if (context.getType() == \"section\") {\n                    let contextSection = localSession.sectionManager.getSection(context.getSectionIdFromContextId());\n                    if (contextSection && contextSection.isCalendarModuleEnabled()) {\n                        usedState = context.getSectionIdFromContextId();\n                    }\n                }\n                else if (context.getType() == \"conversation\") {\n                    const contextData = context.getContextId().split(\":\");\n                    if (contextData[2].split(\"|\").length < 3) {\n                        usedState = context.getContextId();\n                    }\n                }\n                else if (context.getType() == \"custom\") {\n                    const subId = context.getContextId();\n                    if (subId == \"private\") {\n                        let privateSection = localSession.sectionManager.getMyPrivateSection();\n                        if (privateSection) {\n                            usedState = privateSection.getId();\n                        }    \n                    }\n                    else {\n                        usedState = subId;\n                    }\n                }\n            }\n        }\n        this.app.resetModuleSwitchingModifier();\n\n        if (usedState != null) {\n            this.historyStateProjectId = usedState;\n            if (this.activeProjectId !== usedState && this.activeProjectHostHash !== localSession.hostHash) {\n                this.activeProjectId = usedState;\n                this.activeProjectHostHash = localSession.hostHash;\n                this.selectProject(localSession, usedState);\n            }\n        }\n    }\n    \n    updateBadges(): void {\n        this.updateSidebarCustomElements(this.app.sessionManager.getLocalSession(), this.sidebar.customElementList.customElementsCollection, true);\n        this.updateSidebarSections(this.app.sessionManager.getLocalSession(), this.sidebar.sectionList.sortedCollection, true);\n        this.updateConv2Sections(this.app.sessionManager.getLocalSession(), this.sidebar.conv2List.sortedCollection, true);\n        this.sidebar.conv2List.sortedCollection.refresh();\n        this.sidebar.sectionList.sortedCollection.refresh();\n        for (let hostHash in this.sidebar.remoteSectionsLists) {\n            let rsl = this.sidebar.remoteSectionsLists[hostHash];\n            this.updateSidebarSections(this.app.sessionManager.getSessionByHostHash(hostHash), rsl.sortedCollection, true);\n            rsl.sortedCollection.refresh();\n        }\n        for (let hostHash in this.sidebar.remoteConv2Lists) {\n            let rsl = this.sidebar.remoteConv2Lists[hostHash];\n            this.updateConv2Sections(this.app.sessionManager.getSessionByHostHash(hostHash), rsl.sortedCollection, true);\n            rsl.sortedCollection.refresh();\n        }\n        for (let hostHash in this.remoteCalendarTasksCountManagers) {\n            this.remoteCalendarTasksCountManagers[hostHash].updateSidebarHostElement();\n        }\n    }\n    \n    getModel(): Model {\n        let localSession = this.app.sessionManager.getLocalSession();\n        return {\n            docked: this.docked,\n            myId: this.calendarPlugin.getMyId(this.app.sessionManager.getLocalSession()),\n            activeProjectId: this.activeProjectId,\n            privateSectionId: this.calendarPlugin.getPrivateSectionId(),\n            horizontalTaskLayout: this.calendarPlugin.getSetting(localSession, \"horizontal-task-preview-window-layout\", null, null) ? true : false,\n            enableDayPreviewPanel: this.calendarPlugin.getSetting(localSession, \"enable-day-preview-panel\", null, null) ? true : false,\n            showTaskPreviewPanel: this.calendarPlugin.getSetting(localSession, \"show-task-preview-panel\", null, null) ? true : false,\n            showTaskTooltip: this.calendarPlugin.getSetting(localSession, \"show-task-tooltip\", null, null) ? true : false,\n        };\n    }\n    \n    setSidebarActiveItem(session: mail.session.Session, projectId: string): void {\n        let fixedSectionsNames = [\n            CustomTasksElements.ALL_TASKS_ID,\n            CustomTasksElements.TASKS_ASSIGNED_TO_ME_ID,\n            CustomTasksElements.TASKS_CREATED_BY_ME_ID,\n            CustomTasksElements.TRASH_ID,\n            this.calendarPlugin.getPrivateSectionId(),\n        ];\n        if (session.sessionType == \"local\") {\n            if (fixedSectionsNames.indexOf(projectId) >= 0) {\n                this.sidebar.setActive({\n                    type: component.sidebar.SidebarElementType.CUSTOM_ELEMENT,\n                    customElement: this.sidebar.options.customElementList.baseCollection.find(x => x.id == projectId),\n                }, false);\n                this.calendarPlugin.activeSinkId = null;\n                this.calendarPlugin.activeSinkHostHash = null;\n            }\n            else if (this.calendarPlugin.tasksPlugin.isConv2Project(projectId)) {\n                let conv2 = this.calendarPlugin.conv2Service.collection.find(c2s => c2s.id == projectId);\n                this.sidebar.setActive({\n                    type: component.sidebar.SidebarElementType.CONVERSATION,\n                    conv2: conv2,\n                }, false);\n                this.calendarPlugin.activeSinkId = conv2 && conv2.sinkIndex ? conv2.sinkIndex.sink.id : null;\n                this.calendarPlugin.activeSinkHostHash = session.hostHash;\n            }\n            else if (session.sectionManager.getSection(projectId)) {\n                this.sidebar.setActive({\n                    type: component.sidebar.SidebarElementType.SECTION,\n                    section: session.sectionManager.getSection(projectId),\n                }, false);\n                this.calendarPlugin.activeSinkId = session.sectionManager.getSection(projectId).getChatSink().id;\n                this.calendarPlugin.activeSinkHostHash = session.hostHash;\n            }\n        }\n        else if (session.sessionType == \"remote\") {\n            if (this.calendarPlugin.tasksPlugin.isConv2Project(projectId)) {\n                let conv2 = session.conv2Service.collection.find(c2s => c2s.id == projectId);\n                this.sidebar.setActive({\n                    type: component.sidebar.SidebarElementType.REMOTE_CONVERSATION,\n                    conv2: conv2,\n                    hostHash: session.hostHash,\n                }, false);\n                this.calendarPlugin.activeSinkId = conv2 && conv2.sinkIndex ? conv2.sinkIndex.sink.id : null;\n                this.calendarPlugin.activeSinkHostHash = session.hostHash;\n            }\n            else if (session.sectionManager.getSection(projectId)) {\n                this.sidebar.setActive({\n                    type: component.sidebar.SidebarElementType.REMOTE_SECTION,\n                    section: session.sectionManager.getSection(projectId),\n                    hostHash: session.hostHash,\n                }, false);\n                this.calendarPlugin.activeSinkId = session.sectionManager.getSection(projectId).getChatSink().id;\n                this.calendarPlugin.activeSinkHostHash = session.hostHash;\n            }\n        }\n    }\n    \n    selectProject(session: mail.session.Session, projectId: string) {\n        if (!this.sidebar) {\n            return;\n        }\n        let fixedSectionsNames = [\n            CustomTasksElements.ALL_TASKS_ID,\n            CustomTasksElements.TASKS_ASSIGNED_TO_ME_ID,\n            CustomTasksElements.TASKS_CREATED_BY_ME_ID,\n            CustomTasksElements.TRASH_ID,\n            this.calendarPlugin.getPrivateSectionId(),\n        ];\n        this.setSidebarActiveItem(session, projectId);\n        let activeId: string;\n        let rootId: string;\n        this.callViewMethod(\"toggleDisabledSection\", false);\n        let prom1 = Q();\n        let prom2 = Q();\n        if (fixedSectionsNames.indexOf(projectId) >= 0) {\n            const context = app.common.Context.create({\n                moduleName: Types.section.NotificationModule.CALENDAR,\n                contextType: \"custom\",\n                contextId: projectId,\n                hostHash: session.hostHash\n            });    \n            this.contextHistory.append(context);\n\n            activeId = projectId;\n            rootId = projectId;\n            if (projectId == this.calendarPlugin.getPrivateSectionId()) {\n                if (this.privateSection) {\n                    prom1 = this.openCalendar1Panel(session, this.privateSection);\n                    prom2 = this.openCalendar2Panel(session, this.privateSection);\n                }\n            }\n            else {\n                prom1 = this.openCalendar1Panel(session, projectId);\n                prom2 = this.openCalendar2Panel(session, projectId);\n            }\n        }\n        else if (this.calendarPlugin.tasksPlugin.isConv2Project(projectId)) {\n            let c2s = this.calendarPlugin.tasksPlugin.getConv2Section(session, projectId);\n            if (c2s) {\n                const context = app.common.Context.create({\n                    moduleName: Types.section.NotificationModule.CALENDAR,\n                    contextType: \"conversation\",\n                    contextId: projectId,\n                    hostHash: session.hostHash\n                });    \n                this.contextHistory.append(context);\n    \n                this.afterViewLoaded.promise.then(() => {\n                    prom1 = this.openCalendar1Panel(session, c2s);\n                    prom2 = this.openCalendar2Panel(session, c2s);\n                });\n                activeId = c2s.id;\n                rootId = c2s.id;\n            }\n        }\n        else {\n            let section = session.sectionManager.getSection(projectId);\n            const context = app.common.Context.create({\n                moduleName: Types.section.NotificationModule.CALENDAR,\n                contextType: \"section\",\n                contextId: \"section:\" + projectId,\n                hostHash: session.hostHash\n            });    \n            this.contextHistory.append(context);\n\n            if (section instanceof mail.section.SectionService && !section.isCalendarModuleEnabled()) {\n                this.disabledSection.setSection(section);\n                this.callViewMethod(\"toggleDisabledSection\", true);\n                return;\n            }\n            \n            let state = session.sectionManager.getDescantsForModule(projectId, \"calendar\");\n            if (state == null) {\n                return;\n            }\n            this.afterViewLoaded.promise.then(() => {\n                prom1 = this.openCalendar1Panel(session, state.active);\n                prom2 = this.openCalendar2Panel(session, state.active);\n            });\n            activeId = state.active.getId();\n            rootId = state.active.getId();\n        }\n        let enableDayPreview = !!this.calendarPlugin.getSetting(this.getActiveSession(), \"enable-day-preview-panel\", this.activeProjectId, ViewContext.CalendarWindow);\n        this.afterViewLoaded.promise.then(() => {\n            Q.all([prom1, prom2]).then(() => {\n                return this.onToggleDayPreviewPanel(enableDayPreview, activeId, session);\n            });\n        });\n    }\n    \n    onSectionsCollectionChange(session: mail.session.Session, event: Types.utils.collection.CollectionEvent<mail.section.SectionService>): void {\n        // if (event.type == \"update\" && event.element) {\n        //     // this.callViewMethod(\"updateProjectName\", event.element.getId(), event.element.getName());\n        // }\n        // else if (event.type == \"remove\" && event.element) {\n        if (event.type == \"remove\" && event.element) {\n            let countsManager: CalendarTasksCountManager = null;\n            let customElementList: component.customelementlist.CustomElementListController = null;\n            let sectionList: component.sectionlist.SectionListController | component.remotesectionlist.RemoteSectionListController = null;\n            let conv2List: component.conv2list.Conv2ListController | component.remoteconv2list.RemoteConv2ListController = null;\n            if (session.hostHash == this.app.sessionManager.getLocalSession().hostHash) {\n                countsManager = this.calendarTasksCountManager;\n                customElementList = this.sidebar.customElementList;\n                sectionList = this.sidebar.sectionList;\n                conv2List = this.sidebar.conv2List;\n            }\n            else {\n                countsManager = this.getOrCreateRemoteTasksCountManager(session.hostHash);\n                customElementList = null;\n                sectionList = this.sidebar.remoteSectionsLists[session.hostHash];\n                conv2List = this.sidebar.remoteConv2Lists[session.hostHash];\n            }\n            if (countsManager) {\n                countsManager.conv2Count = {};\n                countsManager.customsCount = {};\n                countsManager.sectionsCount = {};\n            }\n            if (customElementList) {\n                this.updateSidebarCustomElements(session, customElementList.customElementsCollection, true);\n            }\n            if (sectionList) {\n                this.updateSidebarSections(session, sectionList.sortedCollection, true);\n            }\n            if (conv2List) {\n                this.updateConv2Sections(session, conv2List.sortedCollection, true);\n            }\n        }\n    }\n    \n    setActiveProjectId(session: mail.session.Session, value: string): void {\n        this.activeProjectId = value;\n        this.activeProjectHostHash = session.hostHash;\n    }\n    \n    getProjectId(section: mail.section.SectionService|mail.section.Conv2Section|string): string {\n        if (section instanceof mail.section.Conv2Section) {\n            return section.id;\n        }\n        return typeof(section) == \"string\" ? section : (section ? section.getId() : null);\n    }\n    \n    getCalendar1Panel(session: mail.session.Session, section: mail.section.SectionService|mail.section.Conv2Section|string): Q.Promise<CalendarPanelController> {\n        return this.createCalendar1Panel(session, this.getProjectId(section));\n    }\n    \n    createCalendar1Panel(session: mail.session.Session, projectId: string): Q.Promise<CalendarPanelController> {\n        let calendarPanelKey = this.getCalendarPanelKey(session.hostHash, projectId);\n        if (calendarPanelKey in this.calendar1PanelPromises) {\n            return this.calendar1PanelPromises[calendarPanelKey];\n        }\n        \n        let panel = this.addComponent(\"calendar1Panel-\" + calendarPanelKey, this.componentFactory.createComponent(\"calendarPanel\", [this, this.personsComponent]));\n        return this.calendar1PanelPromises[calendarPanelKey] = Q().then(() => {\n            return this.calendarPlugin.initSession(session);\n        })\n        .then(() => {\n            return panel.setSession(session);\n        })\n        .then(() => {\n            panel.calendarId = 1;\n            panel.init();\n            this.bindEvent<CalendarTaskPreviewRequestEvent>(panel, \"calendar-task-preview-request\", event => {\n                if (this.activeProjectId != projectId || this.activeProjectHostHash != session.hostHash) {\n                    return;\n                }\n                this.afterViewLoaded.promise.then(() => {\n                    this.previewPanel.setTaskId(session, event.task);\n                    let calendarPanelKey = this.getCalendarPanelKey(session.hostHash, projectId);\n                    let otherPanelPromise = this.calendar2PanelPromises[calendarPanelKey];\n                    if (otherPanelPromise) {\n                        otherPanelPromise.then(otherPanel => otherPanel.markTaskAsSelected(event.task));\n                    }\n                    if (!event.task) {\n                        return;\n                    }\n                    \n                    let task = this.calendarPlugin.tasksPlugin.tasks[session.hostHash][event.task];\n                    if (task && this.calendarPlugin.wasTaskUnread(session, task, task.getProjectId())) {\n                        this.calendarPlugin.markTaskAsWatched(session, task.getId(), task.getProjectId());\n                        this.updateBadges();\n                    }\n                });\n            });\n            this.bindEvent<CalendarDayPreviewRequestEvent>(panel, \"calendar-day-preview-request\", event => {\n                if (this.activeProjectId != projectId || this.activeProjectHostHash != session.hostHash) {\n                    return;\n                }\n                this.afterViewLoaded.promise.then(() => {\n                    this.previewDay(event.day);\n                });\n            });\n            this.bindEvent<CalendarPreviewUpdateRequestEvent>(panel, \"calendar-preview-update-request\", () => {\n                if (this.activeProjectId != projectId || this.activeProjectHostHash != session.hostHash) {\n                    return;\n                }\n                this.afterViewLoaded.promise.then(() => {\n                    this.previewPanel.updateView();\n                });\n            });\n            this.bindEvent<CalendarDayPreviewChangeVisibilityRequestEvent>(panel, \"calendar-day-preview-change-visibility-request\", event => {\n                if (this.activeProjectId != projectId || this.activeProjectHostHash != session.hostHash) {\n                    return;\n                }\n                this.afterViewLoaded.promise.then(async () => {\n                    let canFirstCalendarShowPreview = await this.canFirstCalendarShowPreview(session);\n                    this.callViewMethod(\"changeDayPreviewPanelVisibility\", !canFirstCalendarShowPreview && event.show);\n                });\n            });\n            this.bindEvent<CalendarTaskPreviewChangeVisibilityRequestEvent>(panel, \"calendar-task-preview-change-visibility-request\", event => {\n                if (this.activeProjectId != projectId || this.activeProjectHostHash != session.hostHash) {\n                    return;\n                }\n                this.afterViewLoaded.promise.then(() => {\n                    this.callViewMethod(\"changeTaskPreviewPanelVisibility\", event.show);\n                });\n            });\n            this.bindEvent<HorizontalCalendarTaskPreviewWindowLayoutChangeRequestEvent>(panel, \"horizontal-calendar-task-preview-window-layout-change-request\", event => {\n                if (this.activeProjectId != projectId || this.activeProjectHostHash != session.hostHash) {\n                    return;\n                }\n                this.afterViewLoaded.promise.then(() => {\n                    this.callViewMethod(\"updatePreviewLocation\", event.horizontalLayout);\n                });\n            });\n            this.bindEvent<CalendarBadgesUpdateRequestEvent>(panel, \"calendar-badges-update-request\", event => {\n                this.afterViewLoaded.promise.then(() => {\n                    this.updateBadges();\n                });\n            });\n            \n            this.afterViewLoaded.promise.then(() => {\n                this.afterViewLoaded.promise.then(() => {\n                    this.callViewMethod(\"createCalendar1Panel\", session.hostHash, projectId);\n                });\n            });\n            \n            return Q(panel);\n    \n        })\n    }\n    \n    openCalendar1Panel(session: mail.session.Session, section: mail.section.SectionService|mail.section.Conv2Section|string): Q.Promise<void> {\n        return this.openRemoteCalendar1Panel(session.hostHash, section);\n    }\n\n    openRemoteCalendar1Panel(hostHash: string, section: mail.section.SectionService|mail.section.Conv2Section|string): Q.Promise<void> {\n        return Q().then(() => {\n            return this.app.sessionManager.init(hostHash);\n        })\n        .then(() => {\n            let session = this.app.sessionManager.getSessionByHostHash(hostHash);\n            this.calendarPlugin.tasksPlugin.ensureSessionInit(session);\n            this.calendarPlugin.tasksPlugin.ensureInitSessionCollections(session);\n            return this.afterViewLoaded.promise.then(() => {\n                let projectId = typeof section == \"string\" ? section : this.getProjectId(section);\n                if (section instanceof mail.section.SectionService) {\n                    return this.calendarPlugin.tasksPlugin.ensureProjectExists(projectId, section.getName(), session);\n                }\n            })\n            .then(() => {\n                return this.getCalendar1Panel(session, section).then(panel => {\n                    if (!panel.wasDataSet) {\n                        return panel.setSectionData(section).then(() => Q(panel));\n                    }\n                    return panel;\n                })\n                .then(panel => {\n                    this.activeProjectId = this.getProjectId(section);\n                    this.activeProjectHostHash = hostHash;\n                    if (this.activePanel1) {\n                        this.activePanel1.deactivate();\n                    }\n                    panel.beforeActivate();\n                    this.activePanel1 = panel;\n                    panel.activate();\n                    this.afterViewLoaded.promise.then(() => {\n                        this.callViewMethod(\"openCalendar1Panel\", session.hostHash, this.getProjectId(section));\n                    });\n                });\n            });\n    \n        })\n    }\n\n\n    \n    getCalendar2Panel(session: mail.session.Session, section: mail.section.SectionService|mail.section.Conv2Section|string): Q.Promise<CalendarPanelController> {\n        return this.createCalendar2Panel(session, this.getProjectId(section));\n    }\n    \n    createCalendar2Panel(session: mail.session.Session, projectId: string): Q.Promise<CalendarPanelController> {\n        let calendarPanelKey = this.getCalendarPanelKey(session.hostHash, projectId);\n        if (calendarPanelKey in this.calendar2PanelPromises) {\n            return this.calendar2PanelPromises[calendarPanelKey];\n        }\n        \n        let panel = this.addComponent(\"calendar2Panel-\" + calendarPanelKey, this.componentFactory.createComponent(\"calendarPanel\", [this, this.personsComponent]));\n        return this.calendar2PanelPromises[calendarPanelKey] = Q().then(() => {\n            return this.calendarPlugin.initSession(session);\n        })\n        .then(() => {\n            return panel.setSession(session);\n        })\n        .then(() => {\n            panel.calendarId = 2;\n            panel.init();\n            this.bindEvent<CalendarTaskPreviewRequestEvent>(panel, \"calendar-task-preview-request\", event => {\n                if (this.activeProjectId != projectId || this.activeProjectHostHash != session.hostHash) {\n                    return;\n                }\n                let sess = this.app.sessionManager.getSessionByHostHash(event.hostHash);\n                this.afterViewLoaded.promise.then(() => {\n                    this.previewPanel.setTaskId(sess, event.task);\n                    let calendarPanelKey = this.getCalendarPanelKey(session.hostHash, projectId);\n                    let otherPanelPromise = this.calendar1PanelPromises[calendarPanelKey];\n                    if (otherPanelPromise) {\n                        otherPanelPromise.then(otherPanel => otherPanel.markTaskAsSelected(event.task));\n                    }\n                    if (!event.task) {\n                        return;\n                    }\n                    \n                    let task = this.calendarPlugin.tasksPlugin.tasks[sess.hostHash][event.task];\n                    if (task && this.calendarPlugin.wasTaskUnread(sess, task, task.getProjectId())) {\n                        this.calendarPlugin.markTaskAsWatched(sess, task.getId(), task.getProjectId());\n                        this.updateBadges();\n                    }\n                });\n            });\n            this.bindEvent<CalendarPreviewUpdateRequestEvent>(panel, \"calendar-preview-update-request\", () => {\n                if (this.activeProjectId != projectId || this.activeProjectHostHash != session.hostHash) {\n                    return;\n                }\n                this.afterViewLoaded.promise.then(() => {\n                    this.previewPanel.updateView();\n                });\n            });\n            this.bindEvent<CalendarDayPreviewChangeVisibilityRequestEvent>(panel, \"calendar-day-preview-change-visibility-request\", event => {\n                if (this.activeProjectId != projectId || this.activeProjectHostHash != session.hostHash) {\n                    return;\n                }\n                this.afterViewLoaded.promise.then(async () => {\n                    let canFirstCalendarShowPreview = await this.canFirstCalendarShowPreview(session);\n                    this.callViewMethod(\"changeDayPreviewPanelVisibility\", !canFirstCalendarShowPreview && event.show);\n                });\n            });\n            this.bindEvent<CalendarTaskPreviewChangeVisibilityRequestEvent>(panel, \"calendar-task-preview-change-visibility-request\", event => {\n                if (this.activeProjectId != projectId || this.activeProjectHostHash != session.hostHash) {\n                    return;\n                }\n                this.afterViewLoaded.promise.then(() => {\n                    this.callViewMethod(\"changeTaskPreviewPanelVisibility\", event.show);\n                });\n            });\n            this.bindEvent<HorizontalCalendarTaskPreviewWindowLayoutChangeRequestEvent>(panel, \"horizontal-calendar-task-preview-window-layout-change-request\", event => {\n                if (this.activeProjectId != projectId || this.activeProjectHostHash != session.hostHash) {\n                    return;\n                }\n                this.afterViewLoaded.promise.then(() => {\n                    this.callViewMethod(\"updatePreviewLocation\", event.horizontalLayout);\n                });\n            });\n            this.bindEvent<CalendarBadgesUpdateRequestEvent>(panel, \"calendar-badges-update-request\", event => {\n                this.afterViewLoaded.promise.then(() => {\n                    this.updateBadges();\n                });\n            });\n            \n            this.afterViewLoaded.promise.then(() => {\n                this.afterViewLoaded.promise.then(() => {\n                    this.callViewMethod(\"createCalendar2Panel\", session.hostHash, projectId);\n                });\n            });\n            \n            return Q(panel);\n    \n        })\n    }\n    \n    openCalendar2Panel(session: mail.session.Session, section: mail.section.SectionService|mail.section.Conv2Section|string): Q.Promise<void> {\n        return this.openRemoteCalendar2Panel(session.hostHash, section);\n    }\n\n    openRemoteCalendar2Panel(hostHash: string, section: mail.section.SectionService|mail.section.Conv2Section|string): Q.Promise<void> {\n        return Q().then(() => {\n            return this.app.sessionManager.init(hostHash);\n        })\n        .then(() => {\n            let session = this.app.sessionManager.getSessionByHostHash(hostHash);\n            this.calendarPlugin.tasksPlugin.ensureSessionInit(session);\n            this.calendarPlugin.tasksPlugin.ensureInitSessionCollections(session);\n            return this.afterViewLoaded.promise.then(() => {\n                let projectId = typeof section == \"string\" ? section : this.getProjectId(section);\n                if (section instanceof mail.section.SectionService) {\n                    return this.calendarPlugin.tasksPlugin.ensureProjectExists(projectId, section.getName(), session);\n                }\n            })\n            .then(() => {\n                return this.getCalendar2Panel(session, section).then(panel => {\n                    if (!panel.wasDataSet) {\n                        return panel.setSectionData(section).then(() => Q(panel));\n                    }\n                    return panel;\n                })\n                .then(panel => {\n                    this.activeProjectId = this.getProjectId(section);\n                    this.activeProjectHostHash = hostHash;\n                    if (this.activePanel2) {\n                        this.activePanel2.deactivate();\n                    }\n                    panel.beforeActivate();\n                    this.activePanel2 = panel;\n                    panel.activate();\n                    this.afterViewLoaded.promise.then(() => {\n                        this.callViewMethod(\"openCalendar2Panel\", session.hostHash, this.getProjectId(section));\n                    });\n                });\n            });\n        })\n    }\n    \n\n    updateDirty(dirty: boolean): void {\n        this.dirty = dirty;\n    }\n    \n    \n    \n    \n    \n    async onToggleDayPreviewPanel(show: boolean, projectId: string = null, session: mail.session.Session = null): Promise<boolean> {\n        if (projectId === null) {\n            projectId = this.activeProjectId;\n        }\n        if (session === null) {\n            session = this.getActiveSession();\n        }\n        if (show) {\n            return this.onEnableDayPreviewPanel(session, projectId);\n        }\n        else {\n            return this.onHideDayPreviewPanel(session, projectId);\n        }\n    }\n    \n    async onEnableDayPreviewPanel(session: mail.session.Session, projectId: string): Promise<boolean> {\n        let calendarPanelKey = this.getCalendarPanelKey(session.hostHash, projectId);\n        let panel1Promise = this.calendar1PanelPromises[calendarPanelKey];\n        let panel2Promise = this.calendar2PanelPromises[calendarPanelKey];\n        if (!panel1Promise || !panel2Promise) {\n            return false;\n        }\n        let panel1 = await panel1Promise;\n        let panel2 = await panel2Promise;\n        if (!panel1 || !panel2) {\n            return false;\n        }\n        if (!panel1.afterUserGoToToday) {\n            panel1.afterUserGoToToday = () => {\n                let now = new Date();\n                panel1.setSelectedDate(now.getDate(), now.getMonth(), now.getFullYear());\n                panel2.setSelectedDate(now.getDate(), now.getMonth(), now.getFullYear());\n            };\n        }\n        if (!panel2.afterUserPreviewDayChange) {\n            panel2.afterUserPreviewDayChange = (d: number, m: number, y: number) => {\n                panel1.setSelectedDate(d, m, y);\n            };\n        }\n        if (!panel1.modeChanged) {\n            panel1.modeChanged = async (mode: Modes) => {\n                if (mode == Modes.SINGLE_DAY || (!CalendarWindowController.ENABLE_PREVIEW_IN_WEEK_MODE && (mode == Modes.SINGLE_WEEK || mode == Modes.WEEK))) {\n                    await this.ensureDayPreviewState(session, false);\n                }\n                else {\n                    await this.ensureDayPreviewState(session, true);\n                }\n            };\n        }\n        // if (panel1.currMode == Modes.SINGLE_DAY) {\n        //     panel1.overrideMode(panel1.currMode == Modes.SINGLE_DAY ? Modes.SINGLE_WEEK : panel1.currMode);\n        // }\n        panel2.overrideMode(Modes.SINGLE_DAY);\n        \n        let d: number;\n        let m: number;\n        let y: number;\n        if (panel1.previewDay) {\n            [d, m, y] = panel1.previewDay.split(\".\").map(x => parseInt(x));\n        }\n        else if (panel1.currDataModel) {\n            d = panel1.currDataModel.selectedDay;\n            m = panel1.currDataModel.selectedMonth;\n            y = panel1.currDataModel.selectedYear;\n        }\n        else {\n            let now = new Date();\n            d = now.getDate();\n            m = now.getMonth();\n            y = now.getFullYear();\n        }\n        panel2.goToDate(d, m, y);\n        return true;\n    }\n    \n    async onHideDayPreviewPanel(session: mail.session.Session, projectId: string): Promise<boolean> {\n        let calendarPanelKey = this.getCalendarPanelKey(session.hostHash, projectId);\n        let panel1Promise = this.calendar1PanelPromises[calendarPanelKey];\n        let panel2Promise = this.calendar2PanelPromises[calendarPanelKey];\n        if (!panel1Promise || !panel2Promise) {\n            return false;\n        }\n        let panel1 = await panel1Promise;\n        let panel2 = await panel2Promise;\n        if (!panel1 || !panel2) {\n            return false;\n        }\n        panel1.overrideMode(null);\n        panel2.overrideMode(null);\n        return true;\n    }\n    \n    async previewDay(day: string): Promise<void> {\n        let projectId = this.activeProjectId;\n        let session = this.getActiveSession();\n        let calendarPanelKey = this.getCalendarPanelKey(session.hostHash, projectId);\n        let panel2Promise = this.calendar2PanelPromises[calendarPanelKey];\n        await this.ensureDayPreviewState(session, true);\n        if (!panel2Promise) {\n            return;\n        }\n        let panel2 = await panel2Promise;\n        if (panel2 && panel2.currDataModel && day) {\n            let [d, m, y] = day.split(\".\").map(x => parseInt(x));\n            panel2.goToDate(d, m, y);\n        }\n    }\n    \n    onDataChanged(type: Watchable, id: string, action: Action): void {\n        if (type == \"task\" && this.calendarTasksCountManager != null) {\n            this.calendarTasksCountManager.updateTasksCount(id, action);\n        }\n    }\n    \n    onRemoteDataChanged(type: Watchable, id: string, action: Action, hostHash: string): void {\n        if (type == \"task\") {\n            this.getOrCreateRemoteTasksCountManager(hostHash).updateTasksCount(id, action);\n        }\n    }\n    \n    async closeDayPreview(session: mail.session.Session): Promise<void> {\n        await this.ensureDayPreviewState(session, false);\n    }\n    \n    onViewCloseDayPreview(): void {\n        this.closeDayPreview(this.getActiveSession());\n    }\n    \n    async ensureDayPreviewState(session: mail.session.Session, enabled: boolean): Promise<void> {\n        let canFirstCalendarShowPreview = await this.canFirstCalendarShowPreview(session);\n        if (canFirstCalendarShowPreview) {\n            enabled = false;\n        }\n        if (this.calendarPlugin.getSetting(session, \"enable-day-preview-panel\", null, null)) {\n            this.callViewMethod(\"changeDayPreviewPanelVisibility\", enabled);\n        }\n    }\n    \n    async canFirstCalendarShowPreview(session: mail.session.Session): Promise<boolean> {\n        let calendarPanelKey = this.getCalendarPanelKey(session.hostHash, this.activeProjectId);\n        let panel1Promise = this.calendar1PanelPromises[calendarPanelKey];\n        if (!panel1Promise) {\n            return false;\n        }\n        let panel1 = await panel1Promise;\n        return panel1 && (panel1.currMode == Modes.SINGLE_DAY || (!CalendarWindowController.ENABLE_PREVIEW_IN_WEEK_MODE && (panel1.currMode == Modes.SINGLE_WEEK || panel1.currMode == Modes.WEEK)));\n    }\n    \n    onViewRefresh(): void {\n        if (this.activePanel1) {\n            this.activePanel1.onViewRefresh(true, true);\n        }\n        if (this.activePanel2) {\n            this.activePanel2.onViewRefresh(true, true);\n        }\n    }\n    \n    refreshSidebarCounts(): void {\n        this.calendarTasksCountManager.refresh();\n        for (let hostHash in this.remoteCalendarTasksCountManagers) {\n            this.remoteCalendarTasksCountManagers[hostHash].refresh();\n        }\n        this.sidebar.refresh();\n        for (let hostHash in this.remoteCalendarTasksCountManagers) {\n            this.sidebar.remoteSectionsLists[hostHash].refresh();\n            this.sidebar.remoteConv2Lists[hostHash].refresh();\n            this.remoteCalendarTasksCountManagers[hostHash].updateSidebarHostElement();\n        }\n    }\n\n    expandRemoteSectionsList(hostEntry: component.remotehostlist.HostEntry): void {\n        let session: mail.session.Session;\n        let hostHash = this.app.sessionManager.getHashFromHost(hostEntry.host);\n        let checkSessionExists: boolean = this.app.sessionManager.isSessionExistsByHostHash(hostHash);\n        if ( checkSessionExists && hostEntry.sectionList != null && hostEntry.conv2List != null) {\n            this.callViewMethod(\"expandRemoteSectionsList\", hostEntry.host, hostHash);\n            return;\n        }\n        \n        let watchEvents: boolean = false;\n        if (!this.remoteDataChangedListeners[hostHash]) {\n            watchEvents = true;\n            this.remoteDataChangedListeners[hostHash] = (t, i, a) => this.onRemoteDataChanged(t, i, a, hostHash);\n        }\n\n\n        Q().then(() => {\n            this.sidebar.callViewMethod(\"showHostLoading\", hostHash, true);\n            if (!checkSessionExists) {\n                return this.app.sessionManager.createRemoteSession(hostEntry.host)\n                .then(() => {\n                    return this.app.sessionManager.init(hostHash);\n                })\n                .fail(() => {\n                    this.sidebar.callViewMethod(\"showHostLoading\", hostHash, false);\n                    return this.errorCallback;\n                });\n            }\n        })\n        .then(() => {\n            session = this.app.sessionManager.getSessionByHostHash(hostHash);\n            if (watchEvents) {\n                this.calendarPlugin.tasksPlugin.watch(session, \"*\", \"*\", \"*\", this.remoteDataChangedListeners[hostHash]);\n            }\n            return Q.all(\n                this.calendarPlugin.tasksPlugin.tasksSectionsCollection[session.hostHash].list.map(\n                    x => this.calendarPlugin.tasksPlugin.ensureProjectExists(x.getId(), x.getName(), session)\n                ),\n            );\n        })\n        .then(() => {\n            return this.calendarPlugin.initSession(session);\n        })\n        .then(() => {\n            this.initSessionEvents(session);\n            if (!this.remoteServers) {\n                this.remoteServers = {};\n            }\n                \n            this.initRemoteHostComponents(hostEntry, session);\n            this.callViewMethod(\"expandRemoteSectionsList\", hostEntry.host, hostHash);\n        })\n        .then(() => {\n            let rtcm = this.getOrCreateRemoteTasksCountManager(hostHash);\n            rtcm.updateSidebarHostElement();\n            this.refreshSidebarCounts();\n        });\n    }\n    \n    initSessionEvents(session: mail.session.Session): void {\n        this.bindEvent<Types.event.SectionStateChangedEvent>(session.sectionManager.sectionAccessManager.eventDispatcher, \"section-state-changed\", event => {\n            if (this.activePanel1 && this.activeProjectId == event.sectionId && this.activeProjectHostHash == session.hostHash) {\n                Q().then(() => {\n                    return session.sectionManager.load();\n                })\n                .then(() => {\n                    let section = session.sectionManager.getSection(event.sectionId);\n                    let moduleEnabled = section.isCalendarModuleEnabled();\n                    if (!moduleEnabled) {\n                        this.openDisabledSectionView(session, section);\n                    }\n                    else {\n                        this.selectProject(session, section.getId());\n                    }\n                })\n            }\n        });\n        \n        this.registerChangeEvent(this.calendarPlugin.tasksPlugin.tasksSectionsCollectionNoPrivate[session.hostHash].changeEvent, event => this.onSectionsCollectionChange(session, event));\n        this.registerChangeEvent(session.sectionManager.sinkIndexManager.sinkIndexCollection.changeEvent, event => this.onSinkChange(session, event));\n    }\n\n    initRemoteHostComponents(hostEntry: component.remotehostlist.HostEntry, session: mail.session.Session): void {\n        let hostHash = session.hostHash;\n        if (this.checkRemoteHostComponentsInitialized(hostHash)) {\n            return;\n        }\n\n        let sectionsListOptions: component.remotesectionlist.RemoteSectionListOptions = {\n            baseCollection: session.sectionManager.filteredCollection,\n            unreadProvider: section => this.getUnread(session, section),\n            elementsCountProvider: section => this.getRemoteSectionElementsCount(hostHash, section),\n            searchCountProvider: section => this.calendarPlugin.getSearchCount(session, section),\n            searchAllSearchedProvider: null,\n            sorter: (a, b) => {\n                let res = this.getOrCreateRemoteTasksCountManager(hostHash).getSectionLastDate(b) - this.getOrCreateRemoteTasksCountManager(hostHash).getSectionLastDate(a);\n                return res == 0 ? component.sectionlist.SectionListController.nameSectionSorter(a, b) : res;\n            },\n            moduleName: Types.section.NotificationModule.CALENDAR,\n            checkShowAllAvailSections: false,\n            session: session,\n        }\n        \n        \n        let conv2ListOptions: component.remoteconv2list.RemoteConv2ListOptions = {\n            elementsCountProvider: conversation => this.getRemoteConversationElementsCount(hostHash, conversation),\n            unreadProvider: conversation => this.getUnread(session, conversation),\n            searchCountProvider: conversation => this.calendarPlugin.getSearchCount(session, conversation),\n            searchAllSearchedProvider: null,\n            sorter: (a, b) => {\n                return this.getOrCreateRemoteTasksCountManager(hostHash).getConv2LastDate(b) - this.getOrCreateRemoteTasksCountManager(hostHash).getConv2LastDate(a);\n            },\n            hideConversations: true,\n            assignedTo: true,\n            session: session,\n        };\n        \n        let hostList = hostEntry;\n        hostList.sectionList = this.addComponent(\"remoteSectionsList-\" + hostHash, this.componentFactory.createComponent(\"remotesectionlist\", [this, sectionsListOptions]));\n        hostList.sectionList.ipcMode = true;\n        hostList.conv2List = this.addComponent(\"remoteConv2List-\" + hostHash, this.componentFactory.createComponent(\"remoteconv2list\", [this, conv2ListOptions]));\n        hostList.conv2List.ipcMode = true;\n        this.remoteServers[hostHash] = hostList;\n        this.sidebar.registerRemoteSectionsList(hostHash, hostList.sectionList);\n        this.sidebar.registerRemoteConv2List(hostHash, hostList.conv2List);\n    }\n\n    checkRemoteHostComponentsInitialized(hostHash: string): boolean {\n        let ret = (hostHash in this.remoteServers) && this.remoteServers[hostHash].sectionList != null && this.remoteServers[hostHash].conv2List != null;\n        return ret;\n    }\n    \n    getOrCreateRemoteTasksCountManager(hostHash: string): CalendarTasksCountManager {\n        if (!(hostHash in this.remoteCalendarTasksCountManagers)) {\n            let session = this.app.sessionManager.getSessionByHostHash(hostHash);\n            this.remoteCalendarTasksCountManagers[hostHash] = new CalendarTasksCountManager(session, null, this.calendarPlugin, this.calendarPlugin.tasksPlugin, this.sidebar, !!this.calendarPlugin.getSetting(session, \"show-files\", null, null), true);\n        }\n        return this.remoteCalendarTasksCountManagers[hostHash];\n    }\n    \n    getRemoteSectionElementsCount(hostHash: string, section: mail.section.SectionService): number {\n        let rtcm = this.getOrCreateRemoteTasksCountManager(hostHash);\n        return rtcm.getSectionElementsCount(section);\n    }\n    \n    getRemoteConversationElementsCount(hostHash: string, conversation: mail.section.Conv2Section): number {\n        let rtcm = this.getOrCreateRemoteTasksCountManager(hostHash);\n        return rtcm.getConv2ElementsCount(conversation);\n    }\n    \n    getCalendarPanelKey(hostHash: string, projectId: string): string {\n        return `${hostHash}--${projectId}`;\n    }\n\n    onViewHistoryArrowLeft(): void {\n        this.router.goPrev();\n    }\n\n    onViewHistoryArrowRight(): void {\n        this.router.goNext();\n    }\n}\n\n(<any>CalendarWindowController.prototype).className = \"com.privmx.plugin.calendar.window.calendar.CalendarWindowController\";"],"sourceRoot":"../../../src"}