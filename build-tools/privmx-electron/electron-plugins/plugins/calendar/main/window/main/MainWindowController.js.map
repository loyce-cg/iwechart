{"version":3,"sources":["window/main/MainWindowController.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA,qCAAgD;AAChD,iFAAgF;AAEhF,sCAAoC;AAEpC;IAA0C,wCAAmC;IAWzE,8BAAY,YAAwD;QAApE,YACI,kBAAM,YAAY,EAAE,UAAU,EAAE,SAAS,CAAC,SAS7C;QARG,KAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,KAAI,CAAC,mBAAmB,CAAC,UAAU,CAAC,CAAC;QACrC,KAAI,CAAC,iBAAiB,CAAC,UAAU,GAAG,IAAI,CAAC;QACzC,KAAI,CAAC,iBAAiB,CAAC,QAAQ,GAAG,YAAY,CAAC;QAC/C,KAAI,CAAC,iBAAiB,CAAC,KAAK,GAAG,KAAI,CAAC,IAAI,CAAC,mCAAmC,CAAC,CAAC;QAC9E,KAAI,CAAC,iBAAiB,CAAC,IAAI,GAAG,qBAAqB,CAAC;QAEpD,KAAI,CAAC,cAAc,GAAG,KAAI,CAAC,GAAG,CAAC,YAAY,CAAC,iBAAiB,CAAC,CAAC;;IACnE,CAAC;IAjBM,kCAAa,GAApB,UAAqB,aAAiC;QAClD,aAAa,CAAC,aAAa,CAAC,YAAI,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;IACxD,CAAC;IAiBD,mCAAI,GAAJ;QAAA,iBAgBC;QAfG,OAAO,YAAC,EAAE,CAAC,IAAI,CAAC;YACZ,OAAY,KAAI,CAAC,GAAG,CAAC,aAAa,CAAC,cAAc,EAAE,CAAC;QACxD,CAAC,CAAC;aACD,IAAI,CAAC;YACF,OAAY,KAAI,CAAC,GAAG,CAAC,aAAa,CAAC,cAAc,CAAC,WAAW,EAAE,CAAC;QACpE,CAAC,CAAC;aACD,IAAI,CAAC;YACF,OAAY,KAAI,CAAC,cAAc,CAAC,SAAS,EAAE,CAAC,IAAI,CAAC,cAAM,OAAA,KAAI,CAAC,cAAc,CAAC,WAAW,CAAC,aAAa,EAA7C,CAA6C,CAAC,CAAC;QAC1G,CAAC,CAAC;aACD,IAAI,CAAC;YACF,OAAO,KAAI,CAAC,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,mDAAwB,EAAE,CAAC,KAAI,EAAE,IAAI,CAAC,CAAC,CAAC;QACvE,CAAC,CAAC;aACD,IAAI,CAAC,UAAA,GAAG;YACL,KAAI,CAAC,cAAc,GAAG,GAAG,CAAC;QAC9B,CAAC,CAAC,CAAC;IACP,CAAC;IAED,yCAAU,GAAV;QACI,IAAI,IAAI,CAAC,cAAc,CAAC,IAAI,IAAI,IAAI,EAAE;YAClC,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;SAChD;QACD,IAAI,UAAU,GAAmC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC;QAC1E,IAAI,CAAC,cAAc,CAAC,YAAY,EAAE,UAAU,CAAC,EAAE,EAAE,UAAU,CAAC,IAAI,CAAC,CAAC;IACtE,CAAC;IAED,gDAAiB,GAAjB,UAAkB,SAAkB,EAAE,KAAa;QAAnD,iBAIC;QAHG,IAAI,CAAC,SAAS,EAAE,CAAC,IAAI,CAAC;YAClB,KAAI,CAAC,cAAc,CAAC,iBAAiB,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC;QAC5D,CAAC,CAAC,CAAC;IACP,CAAC;IAnDM,gCAAW,GAAW,8BAA8B,CAAC;IAqDhE,2BAAC;CAvDD,AAuDC,CAvDyC,iBAAM,CAAC,IAAI,CAAC,uBAAuB,GAuD5E;AAvDY,oDAAoB;AAyD3B,oBAAoB,CAAC,SAAU,CAAC,SAAS,GAAG,6DAA6D,CAAC","file":"MainWindowController.js","sourcesContent":["import { app, window, Q, mail } from \"pmc-mail\";\nimport { CalendarWindowController } from \"../calendar/CalendarWindowController\";\nimport { CalendarPlugin } from \"../../main/CalendarPlugin\";\nimport { i18n } from \"./i18n/index\";\n\nexport class MainWindowController extends window.base.BaseAppWindowController {\n    \n    static textsPrefix: string = \"plugin.calendar.window.main.\";\n    \n    static registerTexts(localeService: mail.LocaleService): void {\n        localeService.registerTexts(i18n, this.textsPrefix);\n    }\n    \n    calendarWindow: CalendarWindowController;\n    calendarPlugin: CalendarPlugin;\n    \n    constructor(parentWindow: window.container.ContainerWindowController) {\n        super(parentWindow, __filename, __dirname);\n        this.ipcMode = true;\n        this.setPluginViewAssets(\"calendar\");\n        this.openWindowOptions.fullscreen = true;\n        this.openWindowOptions.cssClass = \"app-window\";\n        this.openWindowOptions.title = this.i18n(\"plugin.calendar.window.main.title\");\n        this.openWindowOptions.icon = \"icon fa fa-calendar\";\n        \n        this.calendarPlugin = this.app.getComponent(\"calendar-plugin\");\n    }\n    \n    init(): any {\n        return Q().then(() => {\n            return <any>this.app.mailClientApi.checkLoginCore();\n        })\n        .then(() => {\n            return <any>this.app.mailClientApi.privmxRegistry.getSystemFs();\n        })\n        .then(() => {\n            return <any>this.calendarPlugin.checkInit().then(() => this.calendarPlugin.tasksPlugin.projectsReady);\n        })\n        .then(() => {\n            return this.app.ioc.create(CalendarWindowController, [this, true]);\n        })\n        .then(win => {\n            this.calendarWindow = win;\n        });\n    }\n    \n    onViewLoad(): void {\n        if (this.calendarWindow.nwin == null) {\n            this.calendarWindow.openDocked(this.nwin, 1);\n        }\n        let dockedNwin = <app.common.window.DockedWindow>this.calendarWindow.nwin;\n        this.callViewMethod(\"openIframe\", dockedNwin.id, dockedNwin.load);\n    }\n    \n    applyHistoryState(processed: boolean, state: string) {\n        this.checkInit().then(() => {\n            this.calendarWindow.applyHistoryState(processed, state);\n        });\n    }\n    \n}\n\n(<any>MainWindowController.prototype).className = \"com.privmx.plugin.calendar.window.main.MainWindowController\";"],"sourceRoot":"../../../src"}