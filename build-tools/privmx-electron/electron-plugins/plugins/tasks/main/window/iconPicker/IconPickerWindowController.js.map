{"version":3,"sources":["window/iconPicker/IconPickerWindowController.ts"],"names":[],"mappings":"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","file":"IconPickerWindowController.js","sourcesContent":["import { window, utils, Q, mail, component } from \"pmc-mail\";\nimport { Types } from \"pmc-mail\";\nimport { TasksPlugin } from \"../../main/TasksPlugin\";\nimport Dependencies = utils.decorators.Dependencies;\nimport { i18n } from \"./i18n/index\";\nimport { IconPickerData } from \"../../component/iconPicker/IconPickerData\";\n\nexport interface Result {\n    cancelled: boolean;\n    iconStr: string;\n}\n\nexport interface Model {\n}\n\n@Dependencies([\"extlist\"])\nexport class IconPickerWindowController extends window.base.BaseWindowController {\n    \n    static textsPrefix: string = \"plugin.tasks.window.iconPicker.\";\n    \n    static registerTexts(localeService: mail.LocaleService): void {\n        localeService.registerTexts(i18n, this.textsPrefix);\n    }\n    \n    deferred: Q.Deferred<Result> = Q.defer();\n    tasksPlugin: TasksPlugin;\n    mutableIconsCollection: utils.collection.MutableCollection<string>;\n    transformIconsCollection: utils.collection.TransformCollection<string, string>;\n    activeIconsCollection: utils.collection.WithActiveCollection<string>;\n    iconsExtList: component.extlist.ExtListController<string>;\n    mutableColorsCollection: utils.collection.MutableCollection<string>;\n    activeColorsCollection: utils.collection.WithActiveCollection<string>;\n    transformColorsCollection: utils.collection.TransformCollection<string, string>;\n    colorsExtList: component.extlist.ExtListController<string>;\n    \n    constructor(parentWindow: Types.app.WindowParent, public iconStr: string) {\n        super(parentWindow, __filename, __dirname);\n        this.ipcMode = true;\n        this.setPluginViewAssets(\"tasks\");\n        this.openWindowOptions.modal = true;\n        this.openWindowOptions.title = this.i18n(\"plugin.tasks.window.iconPicker.title\");\n        this.openWindowOptions.icon = \"icon fa fa-tasks\";\n        this.openWindowOptions.width = 550;\n        this.openWindowOptions.height = 160;\n        \n        this.tasksPlugin = this.app.getComponent(\"tasks-plugin\");\n        this.mutableIconsCollection = this.addComponent(\"mutableIconsCollection\", new utils.collection.MutableCollection());\n        this.transformIconsCollection = this.addComponent(\"transformIconsCollection\", new utils.collection.TransformCollection(this.mutableIconsCollection, this.addIconColor.bind(this)));\n        this.activeIconsCollection = this.addComponent(\"activeIconsCollection\", new utils.collection.WithActiveCollection(this.transformIconsCollection));\n        this.iconsExtList = this.addComponent(\"iconsExtList\", this.componentFactory.createComponent(\"extlist\", [this, this.activeIconsCollection]));\n        this.mutableColorsCollection = this.addComponent(\"mutableColorsCollection\", new utils.collection.MutableCollection());\n        this.transformColorsCollection = this.addComponent(\"transformColorsCollection\", new utils.collection.TransformCollection(this.mutableColorsCollection, this.colorToIcon.bind(this)));\n        this.activeColorsCollection = this.addComponent(\"activeColorsCollection\", new utils.collection.WithActiveCollection(this.transformColorsCollection));\n        this.colorsExtList = this.addComponent(\"colorsExtList\", this.componentFactory.createComponent(\"extlist\", [this, this.activeColorsCollection]));\n        \n        this.mutableColorsCollection.addAll(IconPickerData.colors);\n        this.mutableIconsCollection.addAll(IconPickerData.items);\n        \n        this.setActiveColor(0);\n        this.setActiveIcon(0);\n        \n        if (this.iconStr) {\n            let icon = this.iconStr ? IconPickerData.splitIconStr(this.iconStr) : null;\n            if (icon) {\n                this.activeColorsCollection.setActive(this.colorToIcon(icon.color));\n                this.transformIconsCollection.rebuild();\n                this.activeIconsCollection.setActive(this.addIconColor(icon.icon));\n            }\n        }\n    }\n    \n    addIconColor(iconStr: string): string {\n        let icon = JSON.parse(iconStr);\n        if (!icon) {\n            return null;\n        }\n        icon.color = this.mutableColorsCollection.get(this.getActiveColorIndex());\n        return JSON.stringify(icon);\n    }\n    \n    colorToIcon(color: string): string {\n        return '{\"type\":\"fa\",\"fa\":\"tint\",\"color\":\"' + color + '\"}';\n    }\n    \n    getPromise(): Q.Promise<Result> {\n        return this.deferred.promise;\n    }\n    \n    resolve(cancelled: boolean) {\n        let idx = this.getActiveIconIndex();\n        let activeIcon = this.mutableIconsCollection.get(idx);\n        this.deferred.resolve({\n            cancelled: cancelled,\n            iconStr: activeIcon == \"none\" ? null : this.addIconColor(activeIcon),\n        });\n    }\n    \n    getModel(): Model {\n        return {\n        };\n    }\n    \n    onViewClose(): void {\n        this.cancel();\n    }\n    \n    onViewCancel(): void {\n        this.cancel();\n    }\n    \n    onViewSave(): void {\n        this.save();\n    }\n    \n    cancel(): void {\n        this.resolve(true);\n        this.close();\n    }\n    \n    save(): void {\n        this.resolve(false);\n        this.close();\n    }\n    \n    onViewChangeIcon(idx: number): void {\n        this.setActiveIcon(idx);\n    }\n    \n    onViewChangeColor(idx: number): void {\n        this.setActiveColor(idx);\n        \n        let iconIdx = this.getActiveIconIndex();\n        this.transformIconsCollection.rebuild();\n        this.setActiveIcon(iconIdx);\n    }\n    \n    getActiveIconIndex(): number {\n        let idx = this.activeIconsCollection.getActiveIndex();\n        return idx < 0 ? 0 : idx;\n    }\n    \n    getActiveColorIndex(): number {\n        let idx = this.activeColorsCollection.getActiveIndex();\n        return idx < 0 ? 0 : idx;\n    }\n    \n    setActiveIcon(idx: number): void {\n        this.activeIconsCollection.setActive(this.activeIconsCollection.get(idx == 0 ? 1 : 0));\n        this.activeIconsCollection.setActive(this.activeIconsCollection.get(idx));\n    }\n    \n    setActiveColor(idx: number): void {\n        this.activeColorsCollection.setActive(this.activeColorsCollection.get(idx));\n    }\n    \n}\n(<any>IconPickerWindowController.prototype).className = \"com.privmx.plugin.tasks.window.iconPicker.IconPickerWindowController\";"],"sourceRoot":"../../../src"}