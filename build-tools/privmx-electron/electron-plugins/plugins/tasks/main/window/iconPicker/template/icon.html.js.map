{"version":3,"sources":["window/iconPicker/template/icon.html.ts"],"names":[],"mappings":";;AAIW,QAAA,IAAI,GAAG,EAAC,MAAM,EAAE,gDAAgD,EAAE,IAAI,EAAE,CAAC,UAAS,KAAc,EAAE,OAA2C,EAAE,MAAsC;QAC5L,IAAI,MAAM,GAAG,EAAE,CAAC;QAChB,IAAI,KAAK,GAAG,UAAS,GAAQ,IAAU,MAAM,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC;QAC1D,IAAI,IAAI,GAAG,KAAK,IAAI,KAAK,CAAC,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;QAE7D,KAAK,CAAC,gCAAgC,CAAC,CAAC;QACxC,KAAK,CAAC,MAAM,CAAC,UAAU,CAAC,OAAO,CAAC,QAAQ,CAAA,CAAC,CAAA,SAAS,CAAA,CAAC,CAAA,EAAE,CAAC,CAAC,CAAC;QACxD,KAAK,CAAC,SAAS,CAAC,CAAC;QAAC,IAAI,IAAI,EAAE;YAC5B,KAAK,CAAC,QAAQ,CAAC,CAAC;YAAC,IAAI,IAAI,CAAC,IAAI,IAAI,OAAO,EAAE;gBAC3C,KAAK,CAAC,oDAAoD,CAAC,CAAC;gBAC5D,KAAK,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;gBACrC,KAAK,CAAC,mBAAmB,CAAC,CAAC;gBAC3B,KAAK,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;gBACrC,KAAK,CAAC,kBAAkB,CAAC,CAAC;aAAE;iBAAM,IAAI,IAAI,CAAC,IAAI,IAAI,IAAI,EAAE;gBACzD,KAAK,CAAC,iDAAiD,CAAC,CAAC;gBACzD,KAAK,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;gBAClC,KAAK,CAAC,mBAAmB,CAAC,CAAC;gBAC3B,KAAK,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;gBACrC,KAAK,CAAC,kBAAkB,CAAC,CAAC;aAAE;YAC5B,KAAK,CAAC,MAAM,CAAC,CAAC;SAAE;aAAM;YACtB,KAAK,CAAC,6CAA6C,CAAC,CAAC;YACrD,KAAK,CAAC,MAAM,CAAC,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,sDAAsD,CAAC,CAAC,CAAC,CAAC;YAC9F,KAAK,CAAC,aAAa,CAAC,CAAC;SAAE;QACvB,KAAK,CAAC,WAAW,CAAC,CAAC;QACnB,OAAO,MAAM,CAAC;IAClB,CAAC,CAAC,EAAC,CAAC","file":"icon.html.js","sourcesContent":["//Generated file do not modify\nimport {webUtils} from \"pmc-web\";\nimport {component} from \"pmc-web\";\n\nexport let func = {helper: \"com.privmx.core.web-utils.MailClientViewHelper\", func: (function(model?: string, context?: component.extlist.Context<string>, Helper?: webUtils.MailClientViewHelper): string {\n    let result = \"\";\n    let write = function(str: any): void { result += str; };\n  let icon = model && model[0] == \"{\" ? JSON.parse(model) : null;\n\n    write(\"\\n<span class=\\\"taskgroup-icon\");\n    write(Helper.escapeHtml(context.isActive?' active':''));\n    write(\"\\\">\\n  \"); if (icon) { \n    write(\"\\n    \"); if (icon.type == \"shape\") { \n    write(\"\\n      <span class=\\\"taskgroup-icon--shape shape-\");\n    write(Helper.escapeHtml(icon.shape));\n    write(\"\\\" style=\\\"color:\");\n    write(Helper.escapeHtml(icon.color));\n    write(\"\\\"></span>\\n    \"); } else if (icon.type == \"fa\") { \n    write(\"\\n      <span class=\\\"taskgroup-icon--fa fa fa-\");\n    write(Helper.escapeHtml(icon.fa));\n    write(\"\\\" style=\\\"color:\");\n    write(Helper.escapeHtml(icon.color));\n    write(\"\\\"></span>\\n    \"); } \n    write(\"\\n  \"); } else { \n    write(\"\\n    <span class=\\\"taskgroup-icon--none\\\">\");\n    write(Helper.escapeHtml(Helper.i18n(\"plugin.tasks.window.taskGroupForm.taskGroupIcon.none\")));\n    write(\"</span>\\n  \"); } \n    write(\"\\n</span>\");\n    return result;\n})};"],"sourceRoot":"../../../../src"}