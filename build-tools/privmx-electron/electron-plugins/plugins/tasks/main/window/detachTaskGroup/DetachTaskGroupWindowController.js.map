{"version":3,"sources":["window/detachTaskGroup/DetachTaskGroupWindowController.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAAA,qCAA6D;AAG7D,IAAO,YAAY,GAAG,gBAAK,CAAC,UAAU,CAAC,YAAY,CAAC;AACpD,sCAAoC;AAUpC;IAAqD,mDAAgC;IAYjF,yCAAY,YAAoC,EAAS,OAA6B,EAAS,WAAmB;QAAlH,YACI,kBAAM,YAAY,EAAE,UAAU,EAAE,SAAS,CAAC,SAY7C;QAbwD,aAAO,GAAP,OAAO,CAAsB;QAAS,iBAAW,GAAX,WAAW,CAAQ;QAJlH,cAAQ,GAAuB,YAAC,CAAC,KAAK,EAAE,CAAC;QAMrC,KAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,KAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC,CAAC;QAClC,KAAI,CAAC,iBAAiB,CAAC,KAAK,GAAG,IAAI,CAAC;QACpC,KAAI,CAAC,iBAAiB,CAAC,KAAK,GAAG,KAAI,CAAC,IAAI,CAAC,2CAA2C,CAAC,CAAC;QACtF,KAAI,CAAC,iBAAiB,CAAC,IAAI,GAAG,kBAAkB,CAAC;QACjD,KAAI,CAAC,iBAAiB,CAAC,KAAK,GAAG,GAAG,CAAC;QACnC,KAAI,CAAC,iBAAiB,CAAC,MAAM,GAAG,GAAG,CAAC;QAEpC,KAAI,CAAC,WAAW,GAAG,KAAI,CAAC,GAAG,CAAC,YAAY,CAAC,cAAc,CAAC,CAAC;QAEzD,KAAI,CAAC,aAAa,GAAG,KAAI,CAAC,YAAY,CAAC,eAAe,EAAE,KAAI,CAAC,gBAAgB,CAAC,eAAe,CAAC,cAAc,EAAE,CAAC,KAAI,CAAC,CAAC,CAAC,CAAC;;IAC3H,CAAC;IArBM,6CAAa,GAApB,UAAqB,aAAiC;QAClD,aAAa,CAAC,aAAa,CAAC,YAAI,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;IACxD,CAAC;IAsBD,oDAAU,GAAV;QACI,OAAO,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC;IACjC,CAAC;IAED,iDAAO,GAAP,UAAQ,QAAiB;QACrB,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC;YAClB,QAAQ,EAAE,QAAQ;SACrB,CAAC,CAAC;IACP,CAAC;IAED,kDAAQ,GAAR;QACI,OAAO,EACN,CAAC;IACN,CAAC;IAED,qDAAW,GAAX;QACI,IAAI,CAAC,MAAM,EAAE,CAAC;IAClB,CAAC;IAED,sDAAY,GAAZ;QACI,IAAI,CAAC,MAAM,EAAE,CAAC;IAClB,CAAC;IAED,sDAAY,GAAZ;QACI,IAAI,CAAC,MAAM,EAAE,CAAC;IAClB,CAAC;IAED,gDAAM,GAAN;QACI,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;QACpB,IAAI,CAAC,KAAK,EAAE,CAAC;IACjB,CAAC;IAED,gDAAM,GAAN;QAAA,iBAuBC;QAtBG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,mDAAmD,CAAC,CAAC,CAAC,IAAI,CAAC,UAAA,MAAM;YACpF,IAAI,MAAM,CAAC,MAAM,IAAI,KAAK,EAAE;gBACxB,KAAI,CAAC,cAAc,CAAC,iBAAiB,CAAC,CAAC;gBACvC,IAAI,SAAS,GAAG,KAAI,CAAC,WAAW,CAAC,YAAY,CAAC,KAAI,CAAC,OAAO,EAAE,KAAI,CAAC,WAAW,CAAC,CAAC,YAAY,EAAE,CAAC;gBAC7F,KAAI,CAAC,aAAa,CAAC,gBAAgB,CAAC,KAAI,CAAC,IAAI,CAAC,sEAAsE,CAAC,EAAE,EAAE,QAAQ,EAAE,KAAK,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;gBAC5J,KAAI,CAAC,WAAW,CAAC,eAAe,CAAC,KAAI,CAAC,OAAO,EAAE,KAAI,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC;oBAClE,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;gBACvB,CAAC,CAAC;qBACD,IAAI,CAAC;oBACF,KAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;gBACxB,CAAC,CAAC;qBACD,GAAG,CAAC;oBACD,KAAI,CAAC,KAAK,EAAE,CAAC;gBACjB,CAAC,CAAC,CAAA;aACL;iBACI;gBACD,KAAI,CAAC,cAAc,CAAC,sBAAsB,EAAE,IAAI,CAAC,CAAC;aACrD;QACL,CAAC,CAAC;aACD,IAAI,CAAC;YACF,KAAI,CAAC,cAAc,CAAC,sBAAsB,EAAE,IAAI,CAAC,CAAC;QACtD,CAAC,CAAC,CAAC;IACP,CAAC;IAjFM,2CAAW,GAAW,sCAAsC,CAAC;IAF3D,+BAA+B;QAD3C,YAAY,CAAC,CAAC,SAAS,CAAC,CAAC;OACb,+BAA+B,CAqF3C;IAAD,sCAAC;CArFD,AAqFC,CArFoD,iBAAM,CAAC,IAAI,CAAC,oBAAoB,GAqFpF;AArFY,0EAA+B;AAsFtC,+BAA+B,CAAC,SAAU,CAAC,SAAS,GAAG,gFAAgF,CAAC","file":"DetachTaskGroupWindowController.js","sourcesContent":["import { window, utils, Q, mail, component } from \"pmc-mail\";\nimport { Types } from \"pmc-mail\";\nimport { TasksPlugin } from \"../../main/TasksPlugin\";\nimport Dependencies = utils.decorators.Dependencies;\nimport { i18n } from \"./i18n/index\";\n\nexport interface Result {\n    detached: boolean;\n}\n\nexport interface Model {\n}\n\n@Dependencies([\"extlist\"])\nexport class DetachTaskGroupWindowController extends window.base.BaseWindowController {\n    \n    static textsPrefix: string = \"plugin.tasks.window.detachTaskGroup.\";\n    \n    static registerTexts(localeService: mail.LocaleService): void {\n        localeService.registerTexts(i18n, this.textsPrefix);\n    }\n    \n    deferred: Q.Deferred<Result> = Q.defer();\n    tasksPlugin: TasksPlugin;\n    notifications: component.notification.NotificationController;\n    \n    constructor(parentWindow: Types.app.WindowParent, public session: mail.session.Session, public taskGroupId: string) {\n        super(parentWindow, __filename, __dirname);\n        this.ipcMode = true;\n        this.setPluginViewAssets(\"tasks\");\n        this.openWindowOptions.modal = true;\n        this.openWindowOptions.title = this.i18n(\"plugin.tasks.window.detachTaskGroup.title\");\n        this.openWindowOptions.icon = \"icon fa fa-tasks\";\n        this.openWindowOptions.width = 400;\n        this.openWindowOptions.height = 170;\n        \n        this.tasksPlugin = this.app.getComponent(\"tasks-plugin\");\n        \n        this.notifications = this.addComponent(\"notifications\", this.componentFactory.createComponent(\"notification\", [this]));\n    }\n\n    \n    getPromise(): Q.Promise<Result> {\n        return this.deferred.promise;\n    }\n    \n    resolve(detached: boolean) {\n        this.deferred.resolve({\n            detached: detached,\n        });\n    }\n    \n    getModel(): Model {\n        return {\n        };\n    }\n    \n    onViewClose(): void {\n        this.cancel();\n    }\n    \n    onViewCancel(): void {\n        this.cancel();\n    }\n    \n    onViewDetach(): void {\n        this.detach();\n    }\n    \n    cancel(): void {\n        this.resolve(false);\n        this.close();\n    }\n    \n    detach(): void {\n        this.confirm(this.i18n(\"plugin.tasks.window.detachTaskGroup.detachConfirm\")).then(result => {\n            if (result.result == \"yes\") {\n                this.callViewMethod(\"onAfterDetached\");\n                let projectId = this.tasksPlugin.getTaskGroup(this.session, this.taskGroupId).getProjectId();\n                this.notifications.showNotification(this.i18n(\"plugin.tasks.window.detachTaskGroup.notifications.taskGroupDetaching\"), { autoHide: false, progress: true });\n                this.tasksPlugin.detachTaskGroup(this.session, this.taskGroupId).then(() => {\n                    this.resolve(true);\n                })\n                .fail(() => {\n                    this.resolve(false);\n                })\n                .fin(() => {\n                    this.close();\n                })\n            }\n            else {\n                this.callViewMethod(\"toggleButtonsEnabled\", true);\n            }\n        })\n        .fail(() => {\n            this.callViewMethod(\"toggleButtonsEnabled\", true);\n        });\n    }\n    \n}\n(<any>DetachTaskGroupWindowController.prototype).className = \"com.privmx.plugin.tasks.window.detachTaskGroup.DetachTaskGroupWindowController\";"],"sourceRoot":"../../../src"}