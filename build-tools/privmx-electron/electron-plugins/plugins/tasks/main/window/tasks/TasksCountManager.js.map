{"version":3,"sources":["window/tasks/TasksCountManager.ts"],"names":[],"mappings":"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","file":"TasksCountManager.js","sourcesContent":["import {component, mail} from \"pmc-mail\";\nimport {TasksPlugin} from \"../../main/TasksPlugin\";\nimport {Action, CustomTasksElements} from \"../../main/Types\";\nimport {Task} from \"../../main/data/Task\";\n\nexport interface TasksSummary {\n    tasks: {[id: string]: Task};\n    count: number;\n    lastDate: number;\n}\n\nexport class TasksCountManager {\n    \n    customsCount: {[id: string]: TasksSummary};\n    sectionsCount: {[id: string]: TasksSummary};\n    conv2Count: {[id: string]: TasksSummary};\n    \n    constructor(\n        public session: mail.session.Session,\n        public privateSection: mail.section.SectionService,\n        public tasksPlugin: TasksPlugin,\n        public sidebar: component.sidebar.SidebarController,\n        public isRemote: boolean = false,\n    ) {\n        this.refresh();\n    }\n    \n    refresh(): void {\n        this.customsCount = {};\n        this.sectionsCount = {};\n        this.conv2Count = {};\n    }\n    \n    getSectionElementsCount(section: mail.section.SectionService): number {\n        return this.getSectionTasksSummary(section.getId()).count;\n    }\n    \n    getConv2ElementsCount(conv2section: mail.section.Conv2Section): number {\n        return this.getConv2TasksSummary(conv2section.id).count;\n    }\n    \n    getCustomElementElementsCount(customElement: component.customelementlist.CustomElement): number {\n        return this.getCustomTasksSummary(customElement.id).count;\n    }\n    \n    getSectionLastDate(section: mail.section.SectionService): number {\n        return this.getSectionTasksSummary(section.getId()).lastDate;\n    }\n    \n    getConv2LastDate(conv2section: mail.section.Conv2Section): number {\n        return this.getConv2TasksSummary(conv2section.id).lastDate;\n    }\n    \n    getCustomElementLastDate(customElement: component.customelementlist.CustomElement): number {\n        return this.getCustomTasksSummary(customElement.id).lastDate;\n    }\n    \n    getSectionTasksSummary(id: string): TasksSummary {\n        if (!(id in this.sectionsCount)) {\n            this.sectionsCount[id] = this.getTasksSummaryInSection(id);\n        }\n        return this.sectionsCount[id];\n    }\n    \n    getCustomTasksSummary(id: string): TasksSummary {\n        if (!(id in this.customsCount)) {\n            if (id == CustomTasksElements.TASKS_ASSIGNED_TO_ME_ID) {\n                let myId = this.tasksPlugin.getMyId(this.session);\n                this.customsCount[id] = this.getTasksSummaryBy(task => task.isAssignedTo(myId) && !task.getIsTrashed());\n            }\n            else if (id == CustomTasksElements.TASKS_CREATED_BY_ME_ID) {\n                let myId = this.tasksPlugin.getMyId(this.session);\n                this.customsCount[id] = this.getTasksSummaryBy(task => task.getCreatedBy() == myId && !task.getIsTrashed());\n            }\n            else if (id == CustomTasksElements.ALL_TASKS_ID) {\n                this.customsCount[id] = this.getTasksSummaryBy(task => !task.getIsTrashed());\n            }\n            else if (id == CustomTasksElements.TRASH_ID) {\n                this.customsCount[id] = this.getTasksSummaryBy(task => task.getIsTrashed());\n            }\n            else if (id == this.tasksPlugin.getPrivateSectionId()) {\n                this.customsCount[id] = this.getTasksSummaryInSection(id);\n            }\n            else {\n                this.customsCount[id] = {\n                    tasks: {},\n                    count: 0,\n                    lastDate: 0\n                };\n            }\n        }\n        return this.customsCount[id];\n    }\n    \n    getConv2TasksSummary(id: string): TasksSummary {\n        if (!(id in this.conv2Count)) {\n            let users = this.tasksPlugin.getConv2Users(this.session, id, true);\n            this.conv2Count[id] = this.getTasksSummaryBy(task => this.tasksPlugin.isAssignedToUsers(task, users) && !task.getIsTrashed());\n        }\n        return this.conv2Count[id];\n    }\n    \n    getTasksSummaryBy(filter: (task: Task) => boolean): TasksSummary {\n        let summary: TasksSummary = {\n            tasks: {},\n            count: 0,\n            lastDate: 0\n        };\n        for (let tId in this.tasksPlugin.tasks[this.session.hostHash]) {\n            let task = this.tasksPlugin.tasks[this.session.hostHash][tId];\n            if (!(task.getProjectId() in this.tasksPlugin.projects[this.session.hostHash])) {\n                continue;\n            }\n            if (filter(task)) {\n                summary.tasks[tId] = task;\n                summary.count++;\n                summary.lastDate = Math.max(summary.lastDate, task.getModifiedDateTime() || 0);\n            }\n        }\n        return summary;\n    }\n    \n    getTasksSummaryInSection(sectionId: string): TasksSummary {\n        return this.getTasksSummaryBy(task => task.getProjectId() == sectionId && !task.getIsTrashed());\n    }\n    \n    addTaskToSummary(taskId: string, summary: TasksSummary): boolean {\n        if (taskId in summary.tasks) {\n            return false;\n        }\n        let task = this.tasksPlugin.getTask(this.session, taskId);\n        if (task == null) {\n            return false;\n        }\n        summary.tasks[taskId] = task;\n        summary.count++;\n        summary.lastDate = Math.max(summary.lastDate, task.getModifiedDateTime() || 0);\n        return true;\n    }\n    \n    removeTaskFromSummary(taskId: string, summary: TasksSummary): boolean {\n        if (!(taskId in summary.tasks)) {\n            return false;\n        }\n        delete summary.tasks[taskId];\n        summary.count--;\n        summary.lastDate = 0;\n        for (let id in summary.tasks) {\n            let modDate = summary.tasks[id].getModifiedDateTime() || 0;\n            if (modDate > summary.lastDate) {\n                summary.lastDate = modDate;\n            }\n        }\n        return true;\n    }\n    \n    addTaskToCustomElement(id: string, taskId: string) {\n        if (this.addTaskToSummary(taskId, this.getCustomTasksSummary(id))) {\n            this.updateSidebarCustomElement(id);\n        }\n    }\n    \n    removeTaskFromCustomElement(id: string, taskId: string) {\n        if (this.removeTaskFromSummary(taskId, this.getCustomTasksSummary(id))) {\n            this.updateSidebarCustomElement(id);\n        }\n    }\n    \n    updateSidebarCustomElement(id: string) {\n        if (this.isRemote) {\n            return;\n        }\n        if (!this.sidebar) {\n            return;\n        }\n        // let index = this.sidebar ? this.sidebar.customElementList.customElementsCollection.indexOfBy(x => x.id == id) : -1;\n        // if (index != -1) {\n        //     this.sidebar.customElementList.customElementsCollection.triggerUpdateAt(index);\n        // }\n        let element = this.sidebar ? this.sidebar.customElementList.customElementsCollection.find(x => x.id == id) : null;\n        if (element) {\n            this.sidebar.customElementList.customElementsCollection.triggerBaseUpdateElement(element);\n        }\n    }\n    \n    addTaskToSection(sectionId: string, taskId: string) {\n        if (this.addTaskToSummary(taskId, this.getSectionTasksSummary(sectionId))) {\n            this.updateSidebarSection(sectionId);\n        }\n    }\n    \n    removeTaskFromSection(sectionId: string, taskId: string) {\n        if (this.removeTaskFromSummary(taskId, this.getSectionTasksSummary(sectionId))) {\n            this.updateSidebarSection(sectionId);\n        }\n    }\n    \n    updateSidebarSection(sectionId: string) {\n        // let index = this.sidebar ? this.sidebar.sectionList.sortedCollection.collection.indexOfBy(x => x.getId() == sectionId) : -1;\n        // if (index != -1) {\n        //     this.sidebar.sectionList.sortedCollection.triggerBaseUpdateAt(index);\n        // }\n        if (!this.sidebar) {\n            return;\n        }\n        let collection = this.sidebar.sectionList.sortedCollection;\n        if (this.isRemote) {\n            collection = this.sidebar.remoteSectionsLists[this.session.hostHash].sortedCollection;\n        }\n        let element = this.sidebar ? collection.find(x => x.getId() == sectionId) : null;\n        if (element) {\n            collection.triggerBaseUpdateElement(element);\n        }\n        this.updateSidebarHostElement();\n    }\n    \n    addTaskToConv2(id: string, taskId: string) {\n        if (this.addTaskToSummary(taskId, this.getConv2TasksSummary(id))) {\n            this.updateSidebarConv2(id);\n        }\n    }\n    \n    removeTaskFromConv2(id: string, taskId: string) {\n        if (this.removeTaskFromSummary(taskId, this.getConv2TasksSummary(id))) {\n            this.updateSidebarConv2(id);\n        }\n    }\n    \n    updateSidebarConv2(c2sId: string) {\n        // let index = this.sidebar ? this.sidebar.conv2List.sortedCollection.collection.indexOfBy(x => x.id == c2sId) : -1;\n        // if (index != -1) {\n        //     this.sidebar.conv2List.sortedCollection.triggerBaseUpdateAt(index);\n        // }\n        if (!this.sidebar) {\n            return;\n        }\n        let collection = this.sidebar.conv2List.sortedCollection;\n        if (this.isRemote) {\n            collection = this.sidebar.remoteConv2Lists[this.session.hostHash].sortedCollection;\n        }\n        let element = this.sidebar ? collection.find(x => x.id == c2sId) : null;\n        if (element) {\n            collection.triggerBaseUpdateElement(element);\n        }\n        this.updateSidebarHostElement();\n    }\n    \n    updateTasksCount(taskId: string, action: Action) {\n        if (action == \"added\") {\n            this.addTask(taskId);\n        }\n        else if (action == \"modified\") {\n            this.modifyTask(taskId);\n        }\n        else if (action == \"deleted\") {\n            this.deleteTask(taskId);\n        }\n        else if (action == \"section-changed\") {\n            this.deleteTask(taskId);\n        }\n    }\n    \n    addTask(taskId: string): void {\n        let task = this.tasksPlugin.getTask(this.session, taskId);\n        if (task == null) {\n            return;\n        }\n        if (task.getIsTrashed()) {\n            this.addTaskToCustomElement(CustomTasksElements.TRASH_ID, taskId);\n        }\n        else {\n            if (task.isAssignedTo(this.tasksPlugin.getMyId(this.session))) {\n                this.addTaskToCustomElement(CustomTasksElements.TASKS_ASSIGNED_TO_ME_ID, taskId);\n            }\n            if (task.getCreatedBy() == this.tasksPlugin.getMyId(this.session)) {\n                this.addTaskToCustomElement(CustomTasksElements.TASKS_CREATED_BY_ME_ID, taskId);\n            }\n            this.addTaskToCustomElement(CustomTasksElements.ALL_TASKS_ID, taskId);\n            let sectionId = task.getProjectId();\n            if (sectionId == this.tasksPlugin.getPrivateSectionId()) {\n                this.addTaskToCustomElement(sectionId, taskId);\n            }\n            else {\n                this.addTaskToSection(task.getProjectId(), taskId);\n            }\n            for (let c2sId in this.conv2Count) {\n                let users = this.tasksPlugin.getConv2Users(this.session, c2sId, true);\n                if (this.tasksPlugin.isAssignedToUsers(task, users)) {\n                    this.addTaskToConv2(c2sId, taskId);\n                }\n            }\n        }\n    }\n    \n    deleteTask(taskId: string): void {\n        for (let id in this.customsCount) {\n            this.removeTaskFromCustomElement(id, taskId);\n        }\n        for (let id in this.sectionsCount) {\n            this.removeTaskFromSection(id, taskId);\n        }\n        for (let id in this.conv2Count) {\n            this.removeTaskFromConv2(id, taskId);\n        }\n    }\n    \n    modifyTask(taskId: string): void {\n        this.deleteTask(taskId);\n        this.addTask(taskId);\n    }\n    \n    updateSidebarHostElement(): void {\n        if (!this.isRemote) {\n            return;\n        }\n        let element = this.sidebar.hostList.hostsSortedCollection.find(x => x.host == this.session.host);\n        if (element) {\n            this.sidebar.hostList.hostsSortedCollection.triggerBaseUpdateElement(element);\n        }\n    }\n    \n}\n\n(<any>TasksCountManager.prototype).className = \"com.privmx.plugin.tasks.window.tasks.TasksCountManager\";"],"sourceRoot":"../../../src"}