{"version":3,"sources":["window/tasks/TasksWindowView.ts"],"names":[],"mappings":"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","file":"TasksWindowView.js","sourcesContent":["import * as web from \"pmc-web\";\nimport { func as mainTemplate } from \"./template/main.html\";\nimport { func as taskGroupsPanelTemplate } from \"./template/panel-taskgroups.html\";\nimport { func as taskPanelTemplate } from \"./template/panel-task.html\";\nimport { Model, ProjectsModel, TaskGroupsModel } from \"./TasksWindowController\";\nimport Q = web.Q;\nimport $ = web.JQuery;\nimport { ProjectId, PersonId, PeopleMap } from \"../../main/Types\";\nimport { Task } from \"../../main/data/Task\";\nimport { TaskGroup } from \"../../main/data/TaskGroup\";\nimport { TaskPanelView } from \"../../component/taskPanel/TaskPanelView\";\nimport { TaskGroupsPanelView } from \"../../component/taskGroupsPanel/TaskGroupsPanelView\";\nconst ResizeObserverPolyfill = require(\"resize-observer-polyfill\");\n\nexport interface ActionItemModel {\n    id: string;\n    labelKey: string;\n    icon?: string;\n    hidden?: boolean;\n}\n\nexport interface ActionsModel {\n    items: ActionItemModel[];\n}\n\nexport interface ActiveProjectItems {\n    taskGroups: Array<TaskGroup>;\n    taskGroupsTasks: { [key: string]: Array<Task> };\n}\n\nexport interface HostEntryModel {\n    host: string;\n    sectionsList: web.component.remotesectionlist.RemoteSectionListView;\n    conv2List: web.component.remoteconv2list.RemoteConv2ListView;\n\n}\n\nconst enum ACTIVE_PANEL {\n    projects = 0,\n    taskGroups = 1,\n    task = 2,\n}\n\nconst enum MOVE_TG_DST {\n    top = -999999,\n    up = -1,\n    down = 1,\n    bottom = 999999,\n}\n\nexport class TasksWindowView extends web.window.base.BaseWindowView<Model> {\n    \n    static readonly SIDEBAR_MIN_WIDTH = 100;\n    static readonly TGP_MIN_WIDTH = 300;\n    static readonly TGP_MIN_HEIGHT = 100;\n    static readonly PREVIEW_MIN_WIDTH = 100;\n    static readonly PREVIEW_MIN_HEIGHT = 50;\n    \n    private _showTaskPanel: boolean;\n    private _showOrphans: boolean;\n    // private _activeProjectId: ProjectId;\n    private _myId: PersonId;\n    private _privateSectionId: string;\n    private _members: PeopleMap;\n    // projects: ProjectsMap;\n    \n    verticalSplitter: web.component.splitter.SplitterView;\n    verticalSplitter2: web.component.splitter.SplitterView;\n    horizontalSplitter: web.component.splitter.SplitterView;\n    $fixedSections: JQuery;\n    $standardSections: JQuery;\n    $taskGroups: JQuery = null;\n    $task: JQuery = null;\n    $settingsMenu: JQuery;\n    $tabbedTasks: JQuery;\n    disabledSection: web.component.disabledsection.DisabledSectionView;\n    $disabledSectionContainer: JQuery;\n    \n    taskGroupsPanels: { [key: string]: TaskGroupsPanelView } = {};\n    \n    dropdown: web.component.dropdown.Dropdown<ActionsModel>;\n    \n    dragDropContainerTop: number;\n    dragDropContainerBottom: number;\n    $dragDropScrollable: JQuery;\n    \n    taskPanel: TaskPanelView;\n    sectionsList: web.component.sectionlist.SectionListView;\n    remoteServers: {[hostHash: string]: HostEntryModel} = {};\n\n    sidebar: web.component.sidebar.SidebarView;\n    personsComponent: web.component.persons.PersonsView;\n    personTooltip: web.component.persontooltip.PersonTooltipView;\n    notifications: web.component.notification.NotificationView;\n    infoTooltip: web.component.infotooltip.InfoTooltip;\n    sectionTooltip: web.component.sectiontooltip.SectionTooltipView;\n    initializedDeferred: Q.Deferred<void> = Q.defer();\n    needsCustomSelectsFlashing: boolean = false;\n    \n    constructor(parent: web.Types.app.ViewParent) {\n        super(parent, mainTemplate);\n        \n        if (!(<any>window).ResizeObserver) {\n            (<any>window).ResizeObserver = ResizeObserverPolyfill;\n        }\n        \n        this.verticalSplitter = this.addComponent(\"verticalSplitter\", new web.component.splitter.SplitterView(this, {\n            type: \"vertical\",\n            handlePlacement: \"right\",\n            handleDot: true,\n            firstPanelMinSize: TasksWindowView.SIDEBAR_MIN_WIDTH,\n            secondPanelMinSize: () =>  {\n                if (!this.verticalSplitter2 || !this.verticalSplitter2.$right || this.verticalSplitter2.$right.children().length == 0 || !this._showTaskPanel) {\n                    return TasksWindowView.TGP_MIN_WIDTH;\n                }\n                return TasksWindowView.TGP_MIN_WIDTH + this.verticalSplitter2.$right.outerWidth();\n            },\n        }));\n        this.verticalSplitter2 = this.addComponent(\"verticalSplitter2\", new web.component.splitter.SplitterView(this, {\n            type: \"vertical\",\n            handlePlacement: \"right\",\n            flip: true,\n            handleDot: true,\n            firstPanelMinSize: TasksWindowView.TGP_MIN_WIDTH,\n            secondPanelMinSize: TasksWindowView.PREVIEW_MIN_WIDTH,\n        }));\n        this.horizontalSplitter = this.addComponent(\"horizontalSplitter\", new web.component.splitter.SplitterView(this, {\n            type: \"horizontal\",\n            handlePlacement: \"bottom\",\n            flip: true,\n            handleDot: true,\n            firstPanelMinSize: TasksWindowView.TGP_MIN_HEIGHT,\n            secondPanelMinSize: TasksWindowView.PREVIEW_MIN_HEIGHT,\n        }));\n        this.bindEvent(this.verticalSplitter, \"handleUp\", event => {\n            for (let id in this.taskGroupsPanels) {\n                this.taskGroupsPanels[id].onContainerWidthChanged();\n            }\n        });\n        this.bindEvent(this.verticalSplitter2, \"handleUp\", event => {\n            for (let id in this.taskGroupsPanels) {\n                this.taskGroupsPanels[id].onContainerWidthChanged();\n            }\n        });\n        this.bindEvent(this.horizontalSplitter, \"handleUp\", event => {\n            for (let id in this.taskGroupsPanels) {\n                this.taskGroupsPanels[id].onContainerHeightChanged();\n            }\n        });\n        this.bindEvent(this.verticalSplitter, \"handleMove\", event => {\n            for (let id in this.taskGroupsPanels) {\n                this.taskGroupsPanels[id].onContainerWidthChangedStep();\n            }\n        });\n        this.bindEvent(this.verticalSplitter2, \"handleMove\", event => {\n            for (let id in this.taskGroupsPanels) {\n                this.taskGroupsPanels[id].onContainerWidthChangedStep();\n            }\n        });\n        this.bindEvent(this.horizontalSplitter, \"handleMove\", event => {\n            for (let id in this.taskGroupsPanels) {\n                this.taskGroupsPanels[id].onContainerHeightChangedStep();\n            }\n        });\n        window.addEventListener(\"resize\", this.onWindowResize.bind(this));\n        \n        this.personsComponent = this.addComponent(\"personsComponent\", new web.component.persons.PersonsView(this, this.helper));\n        this.taskPanel = this.addComponent(\"taskPanel\", new TaskPanelView(this, this.personsComponent));\n\n        this.personTooltip = new web.component.persontooltip.PersonTooltipView(this.templateManager, this.personsComponent);\n        this.sectionTooltip = this.addComponent(\"sectiontooltip\", new web.component.sectiontooltip.SectionTooltipView(this));\n        this.notifications = this.addComponent(\"notifications\", new web.component.notification.NotificationView(this, {xs: true}));\n        this.disabledSection = this.addComponent(\"disabled-section\", new web.component.disabledsection.DisabledSectionView(this));\n        this.sidebar = this.addComponent(\"sidebar\", new web.component.sidebar.SidebarView(this, {\n            conv2List: {\n                personsView: this.personsComponent,\n                extList: {\n                    template: null\n                }\n            },\n            conv2Splitter: null,\n            customElementList: {\n                extList: {\n                    template: null,\n                    onAfterListRender: this.onAfterRenderCustomList.bind(this)\n                }\n            },\n            sectionList: {\n                extList: {\n                    template: null\n                }\n            },\n            customSectionList: {\n                extList: {\n                    template: null\n                }\n            },\n\n        }));\n        this.bindEvent(this.sidebar.customElementList.customElements, \"ext-list-change\", this.refreshAvatars.bind(this));\n        this.bindEvent(this.sidebar.customElementList.customElementsA, \"ext-list-change\", this.refreshAvatars.bind(this));\n        this.turnTimeAgoRefresher(5 * 60 * 1000);\n    }\n    \n    onAfterRenderCustomList(): void {\n        this.personsComponent.refreshAvatars();\n    }\n    \n    initWindow(model: Model): any {\n        this.personsComponent.$main = this.$main;\n        this.personTooltip.init(this.$main);\n        \n        this.setModel(model);\n        \n        this.$settingsMenu = this.$main.find(\".context-menu-settings\");\n        \n        this.renderAll();\n        \n        this.taskPanel.$container = this.$task.children().eq(0);\n        this.taskPanel.triggerInit();\n        \n        this.$taskGroups.on(\"click\", this.onTaskGroupsPanelClick.bind(this));\n        this.$task.on(\"click\", this.onTaskPanelClick.bind(this));\n        this.bindKeyboardEvents();\n        \n        if (this.getShowTaskPanel()) {\n            this.$main.children(\".right-buttons\").children().addClass(\"gray\");\n        }\n        else {\n            this.$main.children(\".right-buttons\").children().removeClass(\"gray\");\n        }\n        \n        this.notifications.$container = this.$taskGroups.find(\".notifications-container-wrapper\");\n        \n        return Q().then(() => {\n            this.verticalSplitter.$container = this.$main.find(\".panels\");\n            return this.verticalSplitter.triggerInit();\n        })\n        .then(() => {\n            this.$tabbedTasks = $(\"<div class='section-tasks'></div>\");\n            this.verticalSplitter.$right.append(this.$tabbedTasks);\n            this.verticalSplitter2.$container = this.$tabbedTasks;\n            return this.verticalSplitter2.triggerInit();\n        })\n        .then(() => {\n            this.$disabledSectionContainer = $(\"<div class='disabled-section hidden'></div>\");\n            this.verticalSplitter.$right.append(this.$disabledSectionContainer);\n            this.disabledSection.$container = this.$disabledSectionContainer;\n            this.disabledSection.triggerInit();\n        })\n        .then(() => {\n            this.horizontalSplitter.$container = this.verticalSplitter2.$left;\n            return this.horizontalSplitter.triggerInit();\n        })\n        .then(() => {\n            this.horizontalSplitter.$top.append(this.$taskGroups);\n            if (!this.getShowTaskPanel()) {\n                this.hideTaskPanel();\n            }\n            this.updatePreviewLocation(model.horizontalTaskLayout);\n            this.sidebar.$container = this.verticalSplitter.$left;\n            this.sidebar.$container.addClass(\"sidebar-container\");\n            this.personsComponent.$main = this.$main;\n            return Q.all([\n                this.personsComponent.triggerInit(),\n                this.notifications.triggerInit(),\n            ]);\n        })\n        .then(() => {\n            this.sidebar.$container.on(\"click\", this.onProjectsPanelClick.bind(this));\n            return this.sidebar.triggerInit();\n        })\n        .then(() => {\n            this.$main.focus();\n            this.grabFocus();\n            this.personTooltip.init(this.sidebar.$container);\n            this.personsComponent.refreshAvatars();\n            this.makeCustomScroll(this.verticalSplitter.$left.find(\".sidebar\"));\n            this.initializedDeferred.resolve();\n        })\n        .then(() => {\n            this.sectionTooltip.refreshAvatars = this.refreshAvatars.bind(this);\n            this.sidebar.usersListTooltip.refreshAvatars = this.refreshAvatars.bind(this);\n            this.sectionTooltip.$container = this.$main;\n            return this.sectionTooltip.triggerInit();\n        });\n    }\n    \n    checkInit(): Q.Promise<void> {\n        return this.initializedDeferred.promise;\n    }\n    \n    setModel(model: Model) {\n        // this._activeProjectId = model.activeProjectId;\n        this._myId = model.myId;\n        this._privateSectionId = model.privateSectionId;\n        this._members = JSON.parse(model.membersStr);\n        \n        let fMkObj = (str: string, cls: any) => {\n            let tmp = JSON.parse(str);\n            let obj: any = {};\n            for (let id in tmp) {\n                obj[id] = new cls(tmp[id]);\n            }\n            return obj;\n        };\n        \n        // this.projects = fMkObj(model.projectsStr, Project);\n        \n        // this.updateProjectProps();\n    }\n    \n    getShowTaskPanel(): boolean {\n        return this._showTaskPanel;\n    }\n    setShowTaskPanel(value: boolean) {\n        this._showTaskPanel = value;\n    }\n    \n    getShowOrphans(): boolean {\n        return this._showOrphans;\n    }\n    setShowOrphans(value: boolean) {\n        this._showOrphans = value;\n    }\n    \n    // getActiveProjectId(): ProjectId {\n    //     return this._activeProjectId;\n    // }\n    // setActiveProjectId(value: ProjectId) {\n    //     if (this._activeProjectId != value) {\n    //         this.needsCustomSelectsFlashing = true;\n    //     }\n    //     this._activeProjectId = value;\n    //     this.triggerEvent(\"setActiveProjectId\", value);\n    // }\n    \n    getMyId(): PersonId {\n        return this._myId;\n    }\n    \n    getPrivateSectionId(): ProjectId {\n        return this._privateSectionId;\n    }\n    \n    getMembers(): PeopleMap {\n        return this._members;\n    }\n    \n    // updateProjectProps(): void {\n    //     if (this.showsFixedSection() && !this.showsOnlyPrivateTasks()) {\n    //         this.$main.addClass(\"shows-fixed-section\");\n    //     }\n    //     else {\n    //         this.$main.removeClass(\"shows-fixed-section\");\n    //     }\n    // }\n    \n    // hasActiveProject(): boolean {\n    //     return (this.getActiveProjectId() && this.getActiveProjectId() in this.projects);\n    // }\n    \n    // showsOnlyTasksAssignedToMe(): boolean {\n    //     return this.getActiveProjectId() == CustomTasksElements.TASKS_ASSIGNED_TO_ME_ID;\n    // }\n    \n    // showsOnlyTasksCreatedByMe(): boolean {\n    //     return this.getActiveProjectId() == CustomTasksElements.TASKS_CREATED_BY_ME_ID;\n    // }\n    \n    // showsOnlyAllTasks(): boolean {\n    //     return this.getActiveProjectId() == CustomTasksElements.ALL_TASKS_ID;\n    // }\n    \n    // showsOnlyTrash(): boolean {\n    //     return this.getActiveProjectId() == CustomTasksElements.TRASH_ID;\n    // }\n    \n    // showsOnlyPrivateTasks(): boolean {\n    //     return this.getActiveProjectId() == this.getPrivateSectionId();\n    // }\n    \n    // showsFixedSection(): boolean {\n    //     let fixedSectionsNames = [\n    //         CustomTasksElements.ALL_TASKS_ID,\n    //         CustomTasksElements.TASKS_ASSIGNED_TO_ME_ID,\n    //         CustomTasksElements.TASKS_CREATED_BY_ME_ID,\n    //         CustomTasksElements.TRASH_ID,\n    //         this.getPrivateSectionId(),\n    //     ];\n    //     return fixedSectionsNames.indexOf(this.getActiveProjectId()) >= 0;\n    // }\n    \n    toggleDisabledSection(show: boolean): void {\n        this.$tabbedTasks.toggleClass(\"hidden\", show);\n        this.$disabledSectionContainer.toggleClass(\"hidden\", !show);\n    }\n    \n    hideContainer(id: string): void {\n        this.$main.find(\".taskgroupspanel-container[data-id='\" + id + \"']\").removeClass(\"active\");\n        this.$main.find(\".section-tasks\").toggleClass(\"hidden\", this.$main.find(\".taskgroupspanel-container.active\").length == 0);\n    }\n    \n    renderAll(): void {\n        this.renderTaskGroupsPanel();\n        this.renderTaskPanel();\n    }\n    \n    renderTaskGroupsPanel(): void {\n        if (this.$taskGroups == null) {\n            this.$taskGroups = this.templateManager.createTemplate(taskGroupsPanelTemplate).renderToJQ(this.getTaskGroupsModel());\n        }\n    }\n    \n    getUserAvatar(id: string = null) {\n        if (id === null) {\n            id = this.getMyId();\n        }\n        let s = this.helper.escapeHtml(this.getMembers()[id].avatar);\n        return '<canvas class=\"not-rendered icon\" data-auto-refresh=\"true\" data-auto-size=\"true\" data-hashmail-image=\"' + s + '\" data-tooltip-trigger=\"' + s + '\"></canvas>';\n    }\n    \n    renderTaskPanel(): void {\n        if (this.$task != null) {\n            return;\n        }\n        this.$task = $(\"<div class=\\\"task-scrollable\\\" data-cs-container=\\\"1\\\"></div>\").append(this.templateManager.createTemplate(taskPanelTemplate).renderToJQ());\n        this.$task.find(\".panel-task\").append(this.taskPanel.$main);\n    }\n    \n    getProjectsModel(): ProjectsModel {\n        return {\n        };\n    }\n    \n    getTaskGroupsModel(): TaskGroupsModel {\n        return {};\n    }\n    \n    showTaskPanel(): void {\n        this.$taskGroups.parent().addClass(\"show-task-panel\");\n        this.$taskGroups.parent().removeClass(\"hide-task-panel\");\n        this.$taskGroups.parent().closest(\".component-splitter-panel-left\").addClass(\"show-task-panel\");\n        this.$taskGroups.parent().closest(\".component-splitter-panel-left\").removeClass(\"hide-task-panel\");\n        this.fixPanelsArrangement();\n    }\n    \n    hideTaskPanel(): void {\n        this.$taskGroups.parent().removeClass(\"show-task-panel\");\n        this.$taskGroups.parent().addClass(\"hide-task-panel\");\n        this.$taskGroups.parent().closest(\".component-splitter-panel-left\").removeClass(\"show-task-panel\");\n        this.$taskGroups.parent().closest(\".component-splitter-panel-left\").addClass(\"hide-task-panel\");\n    }\n    \n    changeTaskPanelVisibility(show: boolean) {\n        if (this.getShowTaskPanel() == show) {\n            return;\n        }\n        this.setShowTaskPanel(show);\n        if (show) {\n            this.showTaskPanel();\n        }\n        else {\n            this.hideTaskPanel();\n        }\n    }\n    \n    onProjectClick(e: MouseEvent): void {\n        // console.log(\"TasksWindowView - onProjectClick\");\n        let $proj = $(e.currentTarget);\n        if ($proj.hasClass(\"active\")) {\n            return;\n        }\n        this.triggerEvent(\"selectProject\", $proj.data(\"project-id\"));\n    }\n    \n    onSectionClick(e: MouseEvent): void {\n        let $proj = $(e.currentTarget);\n        if ($proj.hasClass(\"active\")) {\n            return;\n        }\n        this.triggerEvent(\"selectProject\", $proj.data(\"section-id\"));\n    }\n    \n    fixPanelsArrangement(): void {\n    }\n    \n    \n    \n    \n    \n    \n    \n    /****************************************\n    *************** Keyboard ****************\n    ****************************************/\n    bindKeyboardEvents(): void {\n        $(document).on(\"keydown\", this.keyboardHandler.bind(this));\n    }\n    \n    keyboardHandler(e: KeyboardEvent): void {\n        if ((e.key == \"ArrowLeft\" || e.key == \"ArrowRight\") && (e.altKey && (e.ctrlKey || e.metaKey))) {\n            e.preventDefault();\n            e.stopImmediatePropagation();\n            this.triggerEvent(\"history\" + e.key);\n        }\n        if (e.key == \"Tab\") {\n            if (!e.ctrlKey && !e.metaKey) {\n                e.preventDefault();\n                // Tab\n                if (!e.shiftKey) {\n                    this.focusNextPanel();\n                }\n                else {\n                    this.focusPrevPanel();\n                }\n            }\n            else {\n                e.preventDefault();\n                e.stopImmediatePropagation();\n                var newEvent = new KeyboardEvent(\"keydown\", <any>{\n                    key: \"Tab\",\n                    keyCode: 9,\n                    ctrlKey: true,\n                    shiftKey: e.shiftKey,\n                    bubbles: true,\n                });\n                (<any>parent.frameElement).contentDocument.dispatchEvent(newEvent);\n            }\n        }\n        else if ((e.key == \"r\" && e.ctrlKey) || e.key == \"F5\") {\n            e.preventDefault();\n            this.triggerEvent(\"refresh\");\n        }\n    }\n    \n    scrollViewIfNeeded($elem: JQuery<HTMLElement>, up: boolean) {\n        let H = $elem.offsetParent().height();\n        let t = $elem[0].getBoundingClientRect().top;\n        let p = $elem.position().top;\n        let elemOffset = $elem.outerHeight() + Math.max(parseFloat($elem.css(\"margin-bottom\")),  parseFloat($elem.css(\"margin-top\")));\n\n        if (up === false && t >= H) {\n            $elem.offsetParent().scrollTop($elem.offsetParent().scrollTop() + elemOffset );\n        }\n        else if (up === true && p - elemOffset <= 0) {\n            $elem.offsetParent().scrollTop($elem.offsetParent().scrollTop() - elemOffset );\n        }\n    }\n    \n    \n    \n    \n    \n    \n    \n    /****************************************\n    *********** Focus management ************\n    ****************************************/\n    activePanelId: ACTIVE_PANEL = ACTIVE_PANEL.projects;\n    \n    focusNextPanel(): void {\n        this.switchToPanel(this.activePanelId + 1, true);\n    }\n    \n    focusPrevPanel(): void {\n        this.switchToPanel(this.activePanelId - 1, true);\n    }\n    \n    switchToPanel(id: number, showHighlight: boolean) {\n        let max = this.getShowTaskPanel() ? 3 : 2;\n        let newId = (id + max) % max;\n        \n        this.$main.find(\".focus-highlight\").remove();\n        let $highlight = $('<div class=\"focus-highlight\"></div>');\n        \n        let oldPanelId = this.activePanelId;\n        this.activePanelId = newId < 0 ? newId + max : newId;\n        if (showHighlight && oldPanelId != this.activePanelId) {\n            let $neigh: JQuery = $();\n            let $toFocus: JQuery = $();\n            if (this.activePanelId == ACTIVE_PANEL.projects) {\n                $toFocus = this.$main.find(\".sidebar-container\");\n                $neigh = $toFocus.children(\".sidebar\").first();\n            }\n            else if (this.activePanelId == ACTIVE_PANEL.taskGroups) {\n                $neigh = this.$taskGroups.children(\".taskgroupspanel-container.active\");\n                $toFocus = $neigh.children(\".panel\");\n            }\n            else if (this.activePanelId == ACTIVE_PANEL.task) {\n                $neigh = this.$task.children(\".panel\");\n                $toFocus = $neigh;\n            }\n            $highlight.insertAfter($neigh);\n            $toFocus.focus();\n        }\n        this.triggerEvent(\"switchToPanel\", this.activePanelId);\n        setTimeout(() => {\n            $highlight.remove();\n        }, 500);\n    }\n    \n    grabFocus(highlight: boolean = true): void {\n        let activePanel = this.activePanelId;\n        this.activePanelId = activePanel == 0 ? activePanel + 1 : activePanel - 1;\n        this.switchToPanel(activePanel, highlight);\n    }\n    \n    onProjectsPanelClick(): void {\n        this.switchToPanel(ACTIVE_PANEL.projects, false);\n    }\n    \n    onTaskGroupsPanelClick(): void {\n        this.switchToPanel(ACTIVE_PANEL.taskGroups, false);\n    }\n    \n    onTaskPanelClick(): void {\n        this.switchToPanel(ACTIVE_PANEL.task, false);\n    }\n    \n    \n    \n    /****************************************\n    ********** Smart modifications **********\n    ****************************************/\n    // addProject(project: Project|string) {\n    //     // Ensure project is an object\n    //     project = typeof(project) == \"string\" ? new Project(JSON.parse(project)) : project;\n        \n    //     // Add to model and DOM\n    //     this.modelAddProject(project);\n    //     this.visualAddProject(project);\n    // }\n    // modelAddProject(project: Project, refresh: boolean = false) {\n    //     // If the taskgroup already exists, update. Otherwise add.\n    //     if (project.getId() in this.projects) {\n    //         this.modelUpdateProject(project);\n    //     }\n    //     else {\n    //         this.projects[project.getId()] = project;\n    //     }\n    //     if (refresh) {\n    //         //this.renderProjectsPanel();\n    //     }\n    // }\n    // visualAddProject(project: Project) {\n    //     // Ensure the project is not displayed already to avoid duplication\n    //     this.visualDeleteProject(project.getId());\n    // }\n    \n    // updateProject(project: Project|string) {\n    //     // Ensure project is an object\n    //     project = typeof(project) == \"string\" ? new Project(JSON.parse(project)) : project;\n        \n    //     // Update model and DOM\n    //     this.modelUpdateProject(project);\n    //     this.visualUpdateProject(project);\n        \n    //     // Update active project properties\n    //     if (project.getId() == this.getActiveProjectId()) {\n    //         this.updateProjectProps();\n    //     }\n    // }\n    // modelUpdateProject(project: Project) {\n    //     if (project.getId() in this.projects) {\n    //         this.projects[project.getId()].updateObjectProperties(project);\n    //     }\n    //     else {\n    //         this.modelAddProject(project);\n    //     }\n    // }\n    // visualUpdateProject(project: Project) {\n    // }\n    \n    // deleteProject(projectId: ProjectId) {\n    //     this.modelDeleteProject(projectId);\n    //     this.visualDeleteProject(projectId);\n    // }\n    // modelDeleteProject(projectId: ProjectId) {\n    //     delete this.projects[projectId];\n    // }\n    // visualDeleteProject(projectId: ProjectId) {\n    // }\n    \n    // updateProjectName(projectId: string, projectName: string): void {\n    //     if (!(projectId in this.projects)) {\n    //         return;\n    //     }\n    //     let project = new Project(this.projects[projectId]);\n    //     project.setName(projectName);\n    //     this.updateProject(project);\n    // }\n    \n    // updateProjectBadge(id: string, unread: number) {\n    //     let $proj = this.sidebar.$container.find(\".wi-element[data-project-id='\"+id+\"'],.wi-element[data-section-id='\"+id+\"'],.wi-element[data-custom-element-id='\"+id+\"']\");\n    //     let $badge = $proj.find(\".wi-element-badge\");\n    //     $proj.toggleClass(\"with-badge\", unread > 0);\n    //     if (unread == 0) {\n    //         $badge.text(\"\");\n    //     }\n    //     else {\n    //         $badge.text(unread);\n    //     }\n    // }\n    \n    \n    \n    \n    /****************************************\n    ********* TaskGroupsPanel multi *********\n    ****************************************/\n    createTaskGroupsPanel(hostHash: string, projectId: string): TaskGroupsPanelView {\n        // console.log(\"on createTaskGroupsPanel in view\", projectId, hostHash)\n        let tgPanelKey = this.getTaskGroupsPanelKey(hostHash, projectId);\n        if (tgPanelKey in this.taskGroupsPanels) {\n            return this.taskGroupsPanels[tgPanelKey];\n        }\n        let panel = this.addComponent(\"taskGroupsPanel-\" + tgPanelKey, new TaskGroupsPanelView(this, this.personsComponent, true));\n        let $container = $(\"<div class='taskgroupspanel-container' data-id='\" + projectId + \"' data-host-hash='\" + hostHash + \"'></div>\");\n        this.$taskGroups.append($container);\n        panel.$container = $container;\n        panel.triggerInit();\n        // console.log(\"createTaskGroupsPanel done\");\n        this.taskGroupsPanels[tgPanelKey] = panel;\n    }\n    \n    openTaskGroupsPanel(hostHash: string, projectId: string): void {\n        let $containers = this.$taskGroups.find(\".taskgroupspanel-container\");\n        let $container = $containers.filter(\"[data-id='\" + projectId + \"'][data-host-hash='\" + hostHash + \"']\");\n        $containers.removeClass(\"active\");\n        $container.addClass(\"active\");\n        this.$main.find(\".section-tasks\").toggleClass(\"hidden\", this.$main.find(\".taskgroupspanel-container.active\").length == 0);\n        if (this.needsCustomSelectsFlashing) {\n            this.needsCustomSelectsFlashing = false;\n            this.flashCustomSelects(hostHash, projectId);\n        }\n        this.triggerEvent(\"openedTaskGroupsPanel\", hostHash, projectId);\n    }\n    \n    getTaskGroupsPanelKey(hostHash: string, projectId: string): string {\n        return `${hostHash}--${projectId}`;\n    }\n    \n    \n    \n    \n    \n    onSearchChanged(searchOn: boolean, refreshAvatars: boolean) {\n        if (refreshAvatars) {\n            this.personsComponent.refreshAvatars();\n        }\n        this.$main.toggleClass(\"search-on\", searchOn);\n        this.sidebar.refreshInfoTooltips();\n    }\n    \n    refreshAvatars(): void {\n        this.personsComponent.refreshAvatars();\n    }\n    \n    updatePreviewLocation(horizontalLayout: boolean): void {\n        let $horizontalSplitter = this.$taskGroups.parent();\n        let $verticalSplitter = $horizontalSplitter.closest(\".component-splitter-panel-left\");\n        $horizontalSplitter.toggleClass(\"show-preview\", horizontalLayout);\n        $horizontalSplitter.toggleClass(\"hide-preview\", !horizontalLayout);\n        $verticalSplitter.toggleClass(\"show-preview\", !horizontalLayout);\n        $verticalSplitter.toggleClass(\"hide-preview\", horizontalLayout);\n        if (horizontalLayout) {\n            this.horizontalSplitter.$bottom.append(this.$task);\n        }\n        else {\n            this.verticalSplitter2.$right.append(this.$task);\n        }\n        for (let id in this.taskGroupsPanels) {\n            this.taskGroupsPanels[id].onContainerWidthChanged();\n            this.taskGroupsPanels[id].onContainerHeightChanged();\n        }\n        this.fixPanelsArrangement();\n    }\n    \n    onWindowResize(): void {\n        for (let id in this.taskGroupsPanels) {\n            this.taskGroupsPanels[id].onContainerWidthChangedStep();\n            this.taskGroupsPanels[id].onContainerHeightChangedStep();\n        }\n    }\n    \n    flashCustomSelects(hostHash: string, projectId: string): void {\n        let tgPanelKey = this.getTaskGroupsPanelKey(hostHash, projectId);\n        let tgp = this.taskGroupsPanels[tgPanelKey];\n        if (tgp) {\n            tgp.$container.find(\".top .component-custom-select-main\").fadeOut(150).fadeIn(300);\n        }\n    }\n\n    /////////////////////////////\n    //// REMOTE SECTIONS ////////\n    /////////////////////////////\n\n\n    expandRemoteSectionsList(host: string, hostHash: string): void {\n        if (this.isRemoteHostVisible(hostHash)) {\n            this.toggleRemoteHost(hostHash, false);\n            return;\n        }\n        let $hostElement: JQuery<HTMLElement>;\n        this.sidebar.showHostLoading(hostHash, false);\n        Q().then(() => {\n            if (! this.remoteServers) {\n                this.remoteServers = {};\n            }\n            if (hostHash in this.remoteServers) {\n                return;\n            }\n            $hostElement = this.$main.find(\".host-element[data-host-id='\" + hostHash + \"']\");\n\n            if (! this.remoteListsExists(hostHash)) {\n                return Q().then(() => {\n                    $hostElement.parent().append($(\"<div class='remote-sections' data-host-id='\" + hostHash + \"'></div>\"));\n                    $hostElement.parent().append($(\"<div class='remote-conversations' data-host-id='\" + hostHash + \"'></div>\"));\n\n                    let hostModel: HostEntryModel = {\n                        host: host,\n                        sectionsList: this.addComponent(\"remoteSectionsList-\" + hostHash, new web.component.remotesectionlist.RemoteSectionListView(this, {\n                            extList: {template: null}\n                        })),\n                        conv2List: this.addComponent(\"remoteConv2List-\" + hostHash, new web.component.remoteconv2list.RemoteConv2ListView(this, {\n                            personsView: this.personsComponent,\n                            extList: {template: null}\n                        }))\n                    };\n\n                    hostModel.sectionsList.sections.$container = $hostElement.parent().find(\".remote-sections[data-host-id='\" + hostHash + \"']\");\n                    hostModel.conv2List.conversations.$container = $hostElement.parent().find(\".remote-conversations[data-host-id='\" + hostHash + \"']\");\n                    \n                    this.sidebar.remoteSectionLists[hostHash] = hostModel.sectionsList;\n                    this.sidebar.remoteConv2Lists[hostHash] = hostModel.conv2List;\n                    \n                    hostModel.conv2List.conversations.$container.addClass(\"with-assigned-to-prefixes\");\n                    \n                    this.remoteServers[hostHash] = hostModel;\n                    return Q.all([\n                        hostModel.sectionsList.triggerInit(),\n                        hostModel.conv2List.triggerInit()\n                    ])\n                })\n            }\n        })\n        .then(() => {\n            this.toggleRemoteHost(hostHash, true);\n        })\n    }\n    \n    toggleRemoteHost(hostHash: string, visible: boolean) {\n        let $hostElement = this.$main.find(\".host-element[data-host-id='\" + hostHash + \"']\");\n        $hostElement.parent().find(\".remote-sections[data-host-id='\" + hostHash + \"']\").toggleClass(\"hide\", !visible);\n        $hostElement.parent().find(\".remote-conversations[data-host-id='\" + hostHash + \"']\").toggleClass(\"hide\", !visible);\n        this.sidebar.hostList.toggleHostElementIsExpanded(hostHash, visible);\n    }\n\n    isRemoteHostVisible(hostHash: string): boolean {\n        let $hostElement = this.$main.find(\".host-element[data-host-id='\" + hostHash + \"']\");\n        return ! $hostElement.find(\".fa.expanded\").hasClass(\"hide\");\n    }\n\n    remoteListsExists(hostHash: string): boolean {\n        let $hostElement = this.$main.find(\".host-element[data-host-id='\" + hostHash + \"']\");\n        let remoteSectionsExists = $hostElement.parent().find(\".remote-sections[data-host-id='\" + hostHash + \"']\").length > 0;\n        return remoteSectionsExists;\n    }\n\n}\n\n(<any>TasksWindowView.prototype).className = \"com.privmx.plugin.tasks.window.tasks.TasksWindowView\";"],"sourceRoot":"../../../src"}