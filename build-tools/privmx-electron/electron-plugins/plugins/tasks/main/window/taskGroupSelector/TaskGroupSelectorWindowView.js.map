{"version":3,"sources":["window/taskGroupSelector/TaskGroupSelectorWindowView.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA,6BAA+B;AAC/B,kDAA6D;AAC7D,4DAAsE;AACtE,wEAAiF;AAEjF,IAAO,CAAC,GAAG,GAAG,CAAC,MAAM,CAAC;AAEtB;IAAiD,+CAAqC;IAIlF,qCAAY,MAAgC;QAA5C,YACI,kBAAM,MAAM,EAAE,gBAAY,CAAC,SAK9B;QAJG,KAAI,CAAC,iBAAiB,GAAG,KAAI,CAAC,YAAY,CAAC,mBAAmB,EAAE,IAAI,GAAG,CAAC,SAAS,CAAC,OAAO,CAAC,WAAW,CAAC,KAAI,EAAE;YACxG,QAAQ,EAAE,qBAAiB;YAC3B,aAAa,EAAE,2BAAsB;SACxC,CAAC,CAAC,CAAC;;IACR,CAAC;IAED,gDAAU,GAAV,UAAW,KAAY;QACnB,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;QACrB,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,OAAO,EAAE,YAAY,EAAE,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;QACvE,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,OAAO,EAAE,oBAAoB,EAAE,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;QAC1E,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,OAAO,EAAE,sBAAsB,EAAE,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;QAExE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,qBAAqB,CAAE,CAAC,QAAQ,EAAE,CAAC;QAEzD,IAAI,CAAC,iBAAiB,CAAC,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC;QAC1E,OAAO,IAAI,CAAC,iBAAiB,CAAC,WAAW,EAAE,CAAC;IAChD,CAAC;IAED,8CAAQ,GAAR,UAAS,KAAY;IACrB,CAAC;IAED,0CAAI,GAAJ;QACI,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;IAC9B,CAAC;IAED,4CAAM,GAAN;QACI,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC;IAC/B,CAAC;IAED,iDAAW,GAAX,UAAY,KAAiB;QACzB,KAAK,CAAC,cAAc,EAAE,CAAC;QACvB,IAAI,CAAC,yBAAyB,CAAC,SAAS,EAAsB,KAAK,CAAC,aAAc,CAAC,IAAI,CAAC,CAAC;IAC7F,CAAC;IAED,kDAAY,GAAZ;QACI,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC;IAC/B,CAAC;IAED,iDAAW,GAAX;QACI,IAAI,CAAC,IAAI,EAAE,CAAC;IAChB,CAAC;IAED,mDAAa,GAAb;QACI,IAAI,CAAC,MAAM,EAAE,CAAC;IAClB,CAAC;IAED,sDAAgB,GAAhB,UAAiB,CAAa;QAC1B,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;QACjD,IAAI,CAAC,YAAY,CAAC,gBAAgB,EAAE,EAAE,CAAC,CAAC;IAC5C,CAAC;IAEL,kCAAC;AAAD,CAzDA,AAyDC,CAzDgD,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,cAAc,GAyD9E;AAzDY,kEAA2B;AA0DlC,2BAA2B,CAAC,SAAU,CAAC,SAAS,GAAG,8EAA8E,CAAC","file":"TaskGroupSelectorWindowView.js","sourcesContent":["import * as web from \"pmc-web\";\nimport { func as mainTemplate }  from \"./template/main.html\";\nimport { func as taskGroupTemplate } from \"./template/taskgroup.html\";\nimport { func as taskGroupEmptyTemplate } from \"./template/taskgroup-empty.html\";\nimport { Model, TaskGroupModel } from \"./TaskGroupSelectorWindowController\";\nimport $ = web.JQuery;\n\nexport class TaskGroupSelectorWindowView extends web.window.base.BaseWindowView<Model> {\n    \n    taskGroupsExtList: web.component.extlist.ExtListView<TaskGroupModel>;\n    \n    constructor(parent: web.Types.app.ViewParent) {\n        super(parent, mainTemplate);\n        this.taskGroupsExtList = this.addComponent(\"taskGroupsExtList\", new web.component.extlist.ExtListView(this, {\n            template: taskGroupTemplate,\n            emptyTemplate: taskGroupEmptyTemplate,\n        }));\n    }\n    \n    initWindow(model: Model): Q.Promise<void> {\n        this.setModel(model);\n        this.$main.on(\"click\", \".taskgroup\", this.onTaskGroupClick.bind(this));\n        this.$main.on(\"click\", \"[data-action=save]\", this.onSaveClick.bind(this));\n        this.$main.on(\"click\", \"[data-action=cancel]\", this.onCancelClick.bind(this));\n        \n        (<any>this.$main.find(\".scrollable-content\")).pfScroll();\n        \n        this.taskGroupsExtList.$container = this.$main.find(\".extlist-container\");\n        return this.taskGroupsExtList.triggerInit();\n    }\n    \n    setModel(model: Model): void {\n    }\n    \n    save(): void {\n        this.triggerEvent(\"save\");\n    }\n    \n    cancel(): void {\n        this.triggerEvent(\"close\");\n    }\n    \n    onLinkClick(event: MouseEvent): void {\n        event.preventDefault();\n        this.triggerEventInTheSameTick(\"openUrl\", (<HTMLAnchorElement>event.currentTarget).href);\n    }\n    \n    onCloseClick(): void {\n        this.triggerEvent(\"close\");\n    }\n    \n    onSaveClick(): void {\n        this.save();\n    }\n    \n    onCancelClick(): void {\n        this.cancel();\n    }\n    \n    onTaskGroupClick(e: MouseEvent): void {\n        let id = $(e.currentTarget).data(\"taskgroup-id\");\n        this.triggerEvent(\"toggleSelected\", id);\n    }\n\n}\n(<any>TaskGroupSelectorWindowView.prototype).className = \"com.privmx.plugin.tasks.window.taskGroupSelector.TaskGroupSelectorWindowView\";"],"sourceRoot":"../../../src"}