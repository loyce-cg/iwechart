{"version":3,"sources":["build/view.ts"],"names":[],"mappings":";;AAAA,gEAA+D;AAC/D,mEAAkE;AAClE,2FAA0F;AAC1F,gEAA+D;AAC/D,uGAAsG;AACtG,wFAAuF;AACvF,6BAA+B;AAC/B,sEAAqE;AACrE,2DAA0D;AAC1D,yEAAwE;AACxE,iGAAgG;AAChG,kFAAiF;AAEjF,GAAG,CAAC,OAAO,CAAC,aAAa,CAAC,QAAQ,CAAC,qDAAyB,CAAC,CAAC;AAC9D,GAAG,CAAC,OAAO,CAAC,aAAa,CAAC,QAAQ,CAAC,2CAAoB,CAAC,CAAC;AACzD,GAAG,CAAC,OAAO,CAAC,aAAa,CAAC,QAAQ,CAAC,+BAAc,CAAC,CAAC;AACnD,GAAG,CAAC,OAAO,CAAC,aAAa,CAAC,QAAQ,CAAC,iCAAe,CAAC,CAAC;AACpD,GAAG,CAAC,OAAO,CAAC,aAAa,CAAC,QAAQ,CAAC,iDAAuB,CAAC,CAAC;AAC5D,GAAG,CAAC,OAAO,CAAC,aAAa,CAAC,QAAQ,CAAC,+BAAc,CAAC,CAAC;AACnD,GAAG,CAAC,OAAO,CAAC,aAAa,CAAC,QAAQ,CAAC,yDAA2B,CAAC,CAAC;AAEhE,GAAG,CAAC,OAAO,CAAC,gBAAgB,CAA8F,oBAAoB,EAAE,UAAA,KAAK;IACjJ,IAAI,KAAK,CAAC,QAAQ,IAAI,KAAK,CAAC,QAAQ,CAAC,SAAS,IAAI,gEAAgE,EAAE;QAChH,IAAI,IAAI,GAAG,IAAI,yCAAmB,CAAC,KAAK,CAAC,QAAQ,EAAE,KAAK,CAAC,QAAQ,CAAC,gBAAgB,EAAE,IAAI,CAAC,CAAC;QAC1F,IAAI,CAAC,UAAU,GAAG,GAAG,CAAC,MAAM,CAAC,+DAA+D,CAAC,CAAC;QAC9F,KAAK,CAAC,QAAQ,CAAC,cAAc,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;KAChD;AACL,CAAC,EAAE,OAAO,EAAE,UAAU,CAAC,CAAC;AAExB,GAAG,CAAC,OAAO,CAAC,gBAAgB,CAAC,yBAAyB,EAAE,UAAA,KAAK;IACzD,IAAI,IAAI,GAAG,IAAI,6BAAa,CAAO,KAAM,CAAC,MAAM,EAAQ,KAAM,CAAC,MAAM,CAAC,gBAAgB,CAAC,CAAC;IAClF,KAAM,CAAC,MAAM,CAAC,eAAe,CAAO,KAAM,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;AACjE,CAAC,EAAE,OAAO,EAAE,UAAU,CAAC,CAAC;AAExB,GAAG,CAAC,OAAO,CAAC,gBAAgB,CAAC,2BAA2B,EAAE,UAAA,KAAK;IAC3D,IAAI,IAAI,GAAG,IAAI,iCAAe,EAAE,CAAC;IACjC,CAAO,KAAM,CAAC,MAAM,CAAC,CAAC,uBAAuB,CAAO,KAAM,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;AAC3E,CAAC,EAAE,OAAO,EAAE,UAAU,CAAC,CAAC;AAExB,GAAG,CAAC,OAAO,CAAC,gBAAgB,CAAC,0BAA0B,EAAE,UAAA,KAAK;IAC1D,IAAI,IAAI,GAAG,EAAE,KAAK,EAAE,+BAAc,CAAC,KAAK,EAAE,MAAM,EAAE,+BAAc,CAAC,MAAM,EAAE,CAAC;IAC1E,CAAO,KAAM,CAAC,MAAM,CAAC,CAAC,sBAAsB,CAAO,KAAM,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;AAC1E,CAAC,EAAE,OAAO,EAAE,UAAU,CAAC,CAAC","file":"view.js","sourcesContent":["import { MainWindowView } from \"../window/main/MainWindowView\";\nimport { TasksWindowView } from \"../window/tasks/TasksWindowView\";\nimport { TaskGroupFormWindowView } from \"../window/taskGroupForm/TaskGroupFormWindowView\";\nimport { TaskWindowView } from \"../window/task/TaskWindowView\";\nimport { TaskGroupSelectorWindowView } from \"../window/taskGroupSelector/TaskGroupSelectorWindowView\";\nimport { TaskGroupsPanelView } from \"../component/taskGroupsPanel/TaskGroupsPanelView\";\nimport * as Web from \"pmc-web\";\nimport { TaskPanelView } from \"../component/taskPanel/TaskPanelView\";\nimport { FastListCreator } from \"../main/FastListCreator\";\nimport { IconPickerData } from \"../component/iconPicker/IconPickerData\";\nimport { DetachTaskGroupWindowView } from \"../window/detachTaskGroup/DetachTaskGroupWindowView\";\nimport { IconPickerWindowView } from \"../window/iconPicker/IconPickerWindowView\";\n\nWeb.Starter.objectFactory.register(DetachTaskGroupWindowView);\nWeb.Starter.objectFactory.register(IconPickerWindowView);\nWeb.Starter.objectFactory.register(MainWindowView);\nWeb.Starter.objectFactory.register(TasksWindowView);\nWeb.Starter.objectFactory.register(TaskGroupFormWindowView);\nWeb.Starter.objectFactory.register(TaskWindowView);\nWeb.Starter.objectFactory.register(TaskGroupSelectorWindowView);\n\nWeb.Starter.addEventListener<Web.Types.event.InstanceRegisteredEvent<Web.window.sectionsummary.SectionSummaryWindowView>>(\"instanceregistered\", event => {\n    if (event.instance && event.instance.className == \"com.privmx.core.window.sectionsummary.SectionSummaryWindowView\") {\n        let kvdb = new TaskGroupsPanelView(event.instance, event.instance.personsComponent, true);\n        kvdb.$container = Web.JQuery('<div class=\"tasks-component taskgroupspanel-container\"></div>');\n        event.instance.registerModule(\"tasks\", kvdb);\n    }\n}, \"tasks\", \"ethernal\");\n\nWeb.Starter.addEventListener(\"request-task-panel-view\", event => {\n    let view = new TaskPanelView((<any>event).parent, (<any>event).parent.personsComponent);\n    (<any>event).parent.registerPreview((<any>event).name, view);\n}, \"tasks\", \"ethernal\");\n\nWeb.Starter.addEventListener(\"request-fast-list-creator\", event => {\n    let view = new FastListCreator();\n    ((<any>event).parent).registerFastListCreator((<any>event).name, view);\n}, \"tasks\", \"ethernal\");\n\nWeb.Starter.addEventListener(\"request-icon-picker-data\", event => {\n    let data = { items: IconPickerData.items, colors: IconPickerData.colors };\n    ((<any>event).parent).registerIconPickerData((<any>event).name, data);\n}, \"tasks\", \"ethernal\");\n"],"sourceRoot":"../../src"}