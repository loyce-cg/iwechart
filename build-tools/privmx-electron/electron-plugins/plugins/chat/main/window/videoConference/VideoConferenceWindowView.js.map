{"version":3,"sources":["window/videoConference/VideoConferenceWindowView.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA,mCAA0G;AAC1G,kDAA4D;AAE5D,2FAA0F;AAC1F,IAAI,MAAM,GAAG,gBAAU,CAAC,GAAG,CAAC,mDAAmD,CAAC,CAAC;AAEjF,IAAY,cAGX;AAHD,WAAY,cAAc;IACtB,yDAAO,CAAA;IACP,2DAAQ,CAAA;AACZ,CAAC,EAHW,cAAc,GAAd,sBAAc,KAAd,sBAAc,QAGzB;AAQD;IAA+C,6CAA8B;IAOzE,mCAAY,MAA4B;QAAxC,YACI,kBAAM,MAAM,EAAE,gBAAY,CAAC,SAY9B;QAXG,KAAI,CAAC,gBAAgB,GAAG,KAAI,CAAC,YAAY,CAAC,kBAAkB,EAAE,IAAI,mBAAS,CAAC,OAAO,CAAC,WAAW,CAAC,KAAI,EAAE,KAAI,CAAC,MAAM,CAAC,CAAC,CAAC;QACpH,KAAI,CAAC,eAAe,GAAG,KAAI,CAAC,YAAY,CAAC,iBAAiB,EAAE,IAAI,yCAAmB,CAAC,KAAI,EAAE,KAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC;QAClH,KAAI,CAAC,aAAa,GAAG,IAAI,mBAAS,CAAC,aAAa,CAAC,iBAAiB,CAAC,KAAI,CAAC,eAAe,EAAE,KAAI,CAAC,gBAAgB,CAAC,CAAC;QAChH,gBAAC,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,QAAQ,EAAE;YACnB,KAAI,CAAC,gCAAgC,EAAE,CAAC;QAC5C,CAAC,CAAC,CAAC;QACH,MAAM,CAAC,gBAAgB,CAAC,SAAS,EAAE,UAAA,CAAC;YAChC,IAAI,CAAC,CAAC,GAAG,IAAI,GAAG,IAAI,kBAAQ,CAAC,QAAQ,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE;gBACtD,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,oCAAoC,CAAC,CAAC;aACxE;QACL,CAAC,CAAC,CAAC;;IACP,CAAC;IAED,8CAAU,GAAV,UAAW,KAAY;QAAvB,iBAgBC;QAfG,OAAO,WAAC,EAAE,CAAC,IAAI,CAAC;YACZ,KAAI,CAAC,oBAAoB,EAAE,CAAC;YAC5B,KAAI,CAAC,gBAAgB,CAAC,KAAK,GAAG,KAAI,CAAC,KAAK,CAAC;YACzC,OAAO,KAAI,CAAC,gBAAgB,CAAC,WAAW,EAAE,CAAC;QAC/C,CAAC,CAAC;aACD,IAAI,CAAC;YACF,KAAI,CAAC,kCAAkC,GAAG,KAAI,CAAC,KAAK,CAAC,IAAI,CAAC,sCAAsC,CAAC,CAAC;YAClG,KAAI,CAAC,eAAe,CAAC,UAAU,GAAG,KAAI,CAAC,kCAAkC,CAAC;YAC1E,OAAO,KAAI,CAAC,eAAe,CAAC,WAAW,EAAE,CAAC;QAC9C,CAAC,CAAC;aACD,IAAI,CAAC;YACF,KAAI,CAAC,gCAAgC,EAAE,CAAC;YACxC,KAAI,CAAC,aAAa,CAAC,IAAI,CAAC,KAAI,CAAC,KAAK,CAAC,CAAC;YACpC,KAAI,CAAC,gBAAgB,CAAC,cAAc,EAAE,CAAC;QAC3C,CAAC,CAAC,CAAC;IACP,CAAC;IAED,kDAAc,GAAd;QACI,IAAI,CAAC,gBAAgB,CAAC,cAAc,EAAE,CAAC;IAC3C,CAAC;IAED,oEAAgC,GAAhC;QACI,IAAI,IAAI,CAAC,eAAe,EAAE;YACtB,IAAI,CAAC,eAAe,CAAC,gCAAgC,EAAE,CAAC;SAC3D;IACL,CAAC;IAEL,gCAAC;AAAD,CAlDA,AAkDC,CAlD8C,gBAAG,CAAC,IAAI,CAAC,cAAc,GAkDrE;AAlDY,8DAAyB;AAoDhC,yBAAyB,CAAC,SAAU,CAAC,SAAS,GAAG,yEAAyE,CAAC","file":"VideoConferenceWindowView.js","sourcesContent":["import { component, window as wnd, Q, JQuery as $, Types, Logger as RootLogger, webUtils } from \"pmc-web\";\nimport { func as mainTemplate } from \"./template/main.html\";\nimport { Model } from \"./VideoConferenceWindowController\";\nimport { VideoConferenceView } from \"../../component/videoconference/VideoConferenceView\";\nlet Logger = RootLogger.get(\"chat-plugin.window.chat.VideoConferenceWindowView\");\n\nexport enum FocusedElement {\n    SIDEBAR,\n    MESSAGES\n}\n\nexport interface HostEntryModel {\n    host: string;\n    sectionsList: component.remotesectionlist.RemoteSectionListView;\n    conv2List: component.remoteconv2list.RemoteConv2ListView;\n}\n\nexport class VideoConferenceWindowView extends wnd.base.BaseWindowView<Model> {\n    \n    personsComponent: component.persons.PersonsView;\n    personTooltip: component.persontooltip.PersonTooltipView;\n    videoConference: VideoConferenceView;\n    $videoConferenceComponentContainer: JQuery;\n    \n    constructor(parent: Types.app.ViewParent) {\n        super(parent, mainTemplate);\n        this.personsComponent = this.addComponent(\"personsComponent\", new component.persons.PersonsView(this, this.helper));\n        this.videoConference = this.addComponent(\"videoConference\", new VideoConferenceView(this, this.personsComponent));\n        this.personTooltip = new component.persontooltip.PersonTooltipView(this.templateManager, this.personsComponent);\n        $(window).on(\"resize\", () => {\n            this.updateControlsContainerMiniState();\n        });\n        window.addEventListener(\"keydown\", e => {\n            if (e.key == \"7\" && webUtils.WebUtils.hasCtrlModifier(e)) {\n                document.body.classList.toggle(\"show-connection-quality-indicators\");\n            }\n        });\n    }\n    \n    initWindow(model: Model): Q.Promise<void> {\n        return Q().then(() => {\n            this.turnTimeAgoRefresher();\n            this.personsComponent.$main = this.$main;\n            return this.personsComponent.triggerInit();\n        })\n        .then(() => {\n            this.$videoConferenceComponentContainer = this.$main.find(\".videoconference-component-container\");\n            this.videoConference.$container = this.$videoConferenceComponentContainer;\n            return this.videoConference.triggerInit();\n        })\n        .then(() => {\n            this.updateControlsContainerMiniState();\n            this.personTooltip.init(this.$main);\n            this.personsComponent.refreshAvatars();\n        });\n    }\n    \n    refreshAvatars(): void {\n        this.personsComponent.refreshAvatars();\n    }\n    \n    updateControlsContainerMiniState(): void {\n        if (this.videoConference) {\n            this.videoConference.updateControlsContainerMiniState();\n        }\n    }\n    \n}\n\n(<any>VideoConferenceWindowView.prototype).className = \"com.privmx.plugin.chat.window.videoConference.VideoConferenceWindowView\";"],"sourceRoot":"../../../src"}